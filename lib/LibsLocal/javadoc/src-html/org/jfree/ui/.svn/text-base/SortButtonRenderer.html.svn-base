<HTML>
<BODY BGCOLOR="white">
<PRE>
<FONT color="green">001</FONT>    /* ========================================================================<a name="line.1"></a>
<FONT color="green">002</FONT>     * JCommon : a free general purpose class library for the Java(tm) platform<a name="line.2"></a>
<FONT color="green">003</FONT>     * ========================================================================<a name="line.3"></a>
<FONT color="green">004</FONT>     *<a name="line.4"></a>
<FONT color="green">005</FONT>     * (C) Copyright 2000-2005, by Object Refinery Limited and Contributors.<a name="line.5"></a>
<FONT color="green">006</FONT>     *<a name="line.6"></a>
<FONT color="green">007</FONT>     * Project Info:  http://www.jfree.org/jcommon/index.html<a name="line.7"></a>
<FONT color="green">008</FONT>     *<a name="line.8"></a>
<FONT color="green">009</FONT>     * This library is free software; you can redistribute it and/or modify it<a name="line.9"></a>
<FONT color="green">010</FONT>     * under the terms of the GNU Lesser General Public License as published by<a name="line.10"></a>
<FONT color="green">011</FONT>     * the Free Software Foundation; either version 2.1 of the License, or<a name="line.11"></a>
<FONT color="green">012</FONT>     * (at your option) any later version.<a name="line.12"></a>
<FONT color="green">013</FONT>     *<a name="line.13"></a>
<FONT color="green">014</FONT>     * This library is distributed in the hope that it will be useful, but<a name="line.14"></a>
<FONT color="green">015</FONT>     * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY<a name="line.15"></a>
<FONT color="green">016</FONT>     * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public<a name="line.16"></a>
<FONT color="green">017</FONT>     * License for more details.<a name="line.17"></a>
<FONT color="green">018</FONT>     *<a name="line.18"></a>
<FONT color="green">019</FONT>     * You should have received a copy of the GNU Lesser General Public<a name="line.19"></a>
<FONT color="green">020</FONT>     * License along with this library; if not, write to the Free Software<a name="line.20"></a>
<FONT color="green">021</FONT>     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,<a name="line.21"></a>
<FONT color="green">022</FONT>     * USA.<a name="line.22"></a>
<FONT color="green">023</FONT>     *<a name="line.23"></a>
<FONT color="green">024</FONT>     * [Java is a trademark or registered trademark of Sun Microsystems, Inc.<a name="line.24"></a>
<FONT color="green">025</FONT>     * in the United States and other countries.]<a name="line.25"></a>
<FONT color="green">026</FONT>     *<a name="line.26"></a>
<FONT color="green">027</FONT>     * -----------------------<a name="line.27"></a>
<FONT color="green">028</FONT>     * SortButtonRenderer.java<a name="line.28"></a>
<FONT color="green">029</FONT>     * -----------------------<a name="line.29"></a>
<FONT color="green">030</FONT>     * (C) Copyright 2000-2004, by Nobuo Tamemasa and Contributors.<a name="line.30"></a>
<FONT color="green">031</FONT>     *<a name="line.31"></a>
<FONT color="green">032</FONT>     * Original Author:  Nobuo Tamemasa;<a name="line.32"></a>
<FONT color="green">033</FONT>     * Contributor(s):   David Gilbert (for Object Refinery Limited);<a name="line.33"></a>
<FONT color="green">034</FONT>     *                   Gareth Davis;<a name="line.34"></a>
<FONT color="green">035</FONT>     *<a name="line.35"></a>
<FONT color="green">036</FONT>     * $Id: SortButtonRenderer.java,v 1.7 2008/09/10 09:26:11 mungady Exp $<a name="line.36"></a>
<FONT color="green">037</FONT>     *<a name="line.37"></a>
<FONT color="green">038</FONT>     * Changes (from 26-Oct-2001)<a name="line.38"></a>
<FONT color="green">039</FONT>     * --------------------------<a name="line.39"></a>
<FONT color="green">040</FONT>     * 26-Oct-2001 : Changed package to com.jrefinery.ui.* (DG);<a name="line.40"></a>
<FONT color="green">041</FONT>     * 26-Jun-2002 : Removed unnecessary import (DG);<a name="line.41"></a>
<FONT color="green">042</FONT>     * 14-Oct-2002 : Fixed errors reported by Checkstyle (DG);<a name="line.42"></a>
<FONT color="green">043</FONT>     *<a name="line.43"></a>
<FONT color="green">044</FONT>     */<a name="line.44"></a>
<FONT color="green">045</FONT>    <a name="line.45"></a>
<FONT color="green">046</FONT>    package org.jfree.ui;<a name="line.46"></a>
<FONT color="green">047</FONT>    <a name="line.47"></a>
<FONT color="green">048</FONT>    import java.awt.Component;<a name="line.48"></a>
<FONT color="green">049</FONT>    import java.awt.Insets;<a name="line.49"></a>
<FONT color="green">050</FONT>    import javax.swing.JButton;<a name="line.50"></a>
<FONT color="green">051</FONT>    import javax.swing.JComponent;<a name="line.51"></a>
<FONT color="green">052</FONT>    import javax.swing.JLabel;<a name="line.52"></a>
<FONT color="green">053</FONT>    import javax.swing.JTable;<a name="line.53"></a>
<FONT color="green">054</FONT>    import javax.swing.SwingConstants;<a name="line.54"></a>
<FONT color="green">055</FONT>    import javax.swing.UIManager;<a name="line.55"></a>
<FONT color="green">056</FONT>    import javax.swing.border.Border;<a name="line.56"></a>
<FONT color="green">057</FONT>    import javax.swing.table.JTableHeader;<a name="line.57"></a>
<FONT color="green">058</FONT>    import javax.swing.table.TableCellRenderer;<a name="line.58"></a>
<FONT color="green">059</FONT>    <a name="line.59"></a>
<FONT color="green">060</FONT>    /**<a name="line.60"></a>
<FONT color="green">061</FONT>     * A table cell renderer for table headings - uses one of three JButton instances to indicate the<a name="line.61"></a>
<FONT color="green">062</FONT>     * sort order for the table column.<a name="line.62"></a>
<FONT color="green">063</FONT>     * &lt;P&gt;<a name="line.63"></a>
<FONT color="green">064</FONT>     * This class (and also BevelArrowIcon) is adapted from original code by Nobuo Tamemasa (version<a name="line.64"></a>
<FONT color="green">065</FONT>     * 1.0, 26-Feb-1999) posted on www.codeguru.com.<a name="line.65"></a>
<FONT color="green">066</FONT>     *<a name="line.66"></a>
<FONT color="green">067</FONT>     * @author David Gilbert<a name="line.67"></a>
<FONT color="green">068</FONT>     */<a name="line.68"></a>
<FONT color="green">069</FONT>    public class SortButtonRenderer implements TableCellRenderer {<a name="line.69"></a>
<FONT color="green">070</FONT>    <a name="line.70"></a>
<FONT color="green">071</FONT>        /**<a name="line.71"></a>
<FONT color="green">072</FONT>         * Useful constant indicating NO sorting.<a name="line.72"></a>
<FONT color="green">073</FONT>         */<a name="line.73"></a>
<FONT color="green">074</FONT>        public static final int NONE = 0;<a name="line.74"></a>
<FONT color="green">075</FONT>    <a name="line.75"></a>
<FONT color="green">076</FONT>        /**<a name="line.76"></a>
<FONT color="green">077</FONT>         * Useful constant indicating ASCENDING (that is, arrow pointing down) sorting in the table.<a name="line.77"></a>
<FONT color="green">078</FONT>         */<a name="line.78"></a>
<FONT color="green">079</FONT>        public static final int DOWN = 1;<a name="line.79"></a>
<FONT color="green">080</FONT>    <a name="line.80"></a>
<FONT color="green">081</FONT>        /**<a name="line.81"></a>
<FONT color="green">082</FONT>         * Useful constant indicating DESCENDING (that is, arrow pointing up) sorting in the table.<a name="line.82"></a>
<FONT color="green">083</FONT>         */<a name="line.83"></a>
<FONT color="green">084</FONT>        public static final int UP = 2;<a name="line.84"></a>
<FONT color="green">085</FONT>    <a name="line.85"></a>
<FONT color="green">086</FONT>        /**<a name="line.86"></a>
<FONT color="green">087</FONT>         * The current pressed column (-1 for no column).<a name="line.87"></a>
<FONT color="green">088</FONT>         */<a name="line.88"></a>
<FONT color="green">089</FONT>        private int pressedColumn = -1;<a name="line.89"></a>
<FONT color="green">090</FONT>    <a name="line.90"></a>
<FONT color="green">091</FONT>        /**<a name="line.91"></a>
<FONT color="green">092</FONT>         * The three buttons that are used to render the table header cells.<a name="line.92"></a>
<FONT color="green">093</FONT>         */<a name="line.93"></a>
<FONT color="green">094</FONT>        private JButton normalButton;<a name="line.94"></a>
<FONT color="green">095</FONT>    <a name="line.95"></a>
<FONT color="green">096</FONT>        /**<a name="line.96"></a>
<FONT color="green">097</FONT>         * The three buttons that are used to render the table header cells.<a name="line.97"></a>
<FONT color="green">098</FONT>         */<a name="line.98"></a>
<FONT color="green">099</FONT>        private JButton ascendingButton;<a name="line.99"></a>
<FONT color="green">100</FONT>    <a name="line.100"></a>
<FONT color="green">101</FONT>        /**<a name="line.101"></a>
<FONT color="green">102</FONT>         * The three buttons that are used to render the table header cells.<a name="line.102"></a>
<FONT color="green">103</FONT>         */<a name="line.103"></a>
<FONT color="green">104</FONT>        private JButton descendingButton;<a name="line.104"></a>
<FONT color="green">105</FONT>    <a name="line.105"></a>
<FONT color="green">106</FONT>        /**<a name="line.106"></a>
<FONT color="green">107</FONT>         * Used to allow the class to work out whether to use the buttuns<a name="line.107"></a>
<FONT color="green">108</FONT>         * or labels. Labels are required when using the aqua look and feel cos the<a name="line.108"></a>
<FONT color="green">109</FONT>         * buttons won't fit.<a name="line.109"></a>
<FONT color="green">110</FONT>         */<a name="line.110"></a>
<FONT color="green">111</FONT>        private boolean useLabels;<a name="line.111"></a>
<FONT color="green">112</FONT>    <a name="line.112"></a>
<FONT color="green">113</FONT>        /**<a name="line.113"></a>
<FONT color="green">114</FONT>         * The normal label (only used with MacOSX).<a name="line.114"></a>
<FONT color="green">115</FONT>         */<a name="line.115"></a>
<FONT color="green">116</FONT>        private JLabel normalLabel;<a name="line.116"></a>
<FONT color="green">117</FONT>    <a name="line.117"></a>
<FONT color="green">118</FONT>        /**<a name="line.118"></a>
<FONT color="green">119</FONT>         * The ascending label (only used with MacOSX).<a name="line.119"></a>
<FONT color="green">120</FONT>         */<a name="line.120"></a>
<FONT color="green">121</FONT>        private JLabel ascendingLabel;<a name="line.121"></a>
<FONT color="green">122</FONT>    <a name="line.122"></a>
<FONT color="green">123</FONT>        /**<a name="line.123"></a>
<FONT color="green">124</FONT>         * The descending label (only used with MacOSX).<a name="line.124"></a>
<FONT color="green">125</FONT>         */<a name="line.125"></a>
<FONT color="green">126</FONT>        private JLabel descendingLabel;<a name="line.126"></a>
<FONT color="green">127</FONT>    <a name="line.127"></a>
<FONT color="green">128</FONT>        /**<a name="line.128"></a>
<FONT color="green">129</FONT>         * Creates a new button renderer.<a name="line.129"></a>
<FONT color="green">130</FONT>         */<a name="line.130"></a>
<FONT color="green">131</FONT>        public SortButtonRenderer() {<a name="line.131"></a>
<FONT color="green">132</FONT>    <a name="line.132"></a>
<FONT color="green">133</FONT>            this.pressedColumn = -1;<a name="line.133"></a>
<FONT color="green">134</FONT>            this.useLabels = UIManager.getLookAndFeel().getID().equals("Aqua");<a name="line.134"></a>
<FONT color="green">135</FONT>    <a name="line.135"></a>
<FONT color="green">136</FONT>            final Border border = UIManager.getBorder("TableHeader.cellBorder");<a name="line.136"></a>
<FONT color="green">137</FONT>    <a name="line.137"></a>
<FONT color="green">138</FONT>            if (this.useLabels) {<a name="line.138"></a>
<FONT color="green">139</FONT>                this.normalLabel = new JLabel();<a name="line.139"></a>
<FONT color="green">140</FONT>                this.normalLabel.setHorizontalAlignment(SwingConstants.LEADING);<a name="line.140"></a>
<FONT color="green">141</FONT>    <a name="line.141"></a>
<FONT color="green">142</FONT>                this.ascendingLabel = new JLabel();<a name="line.142"></a>
<FONT color="green">143</FONT>                this.ascendingLabel.setHorizontalAlignment(SwingConstants.LEADING);<a name="line.143"></a>
<FONT color="green">144</FONT>                this.ascendingLabel.setHorizontalTextPosition(SwingConstants.LEFT);<a name="line.144"></a>
<FONT color="green">145</FONT>                this.ascendingLabel.setIcon(new BevelArrowIcon(BevelArrowIcon.DOWN, false, false));<a name="line.145"></a>
<FONT color="green">146</FONT>    <a name="line.146"></a>
<FONT color="green">147</FONT>                this.descendingLabel = new JLabel();<a name="line.147"></a>
<FONT color="green">148</FONT>                this.descendingLabel.setHorizontalAlignment(SwingConstants.LEADING);<a name="line.148"></a>
<FONT color="green">149</FONT>                this.descendingLabel.setHorizontalTextPosition(SwingConstants.LEFT);<a name="line.149"></a>
<FONT color="green">150</FONT>                this.descendingLabel.setIcon(new BevelArrowIcon(BevelArrowIcon.UP, false, false));<a name="line.150"></a>
<FONT color="green">151</FONT>    <a name="line.151"></a>
<FONT color="green">152</FONT>                this.normalLabel.setBorder(border);<a name="line.152"></a>
<FONT color="green">153</FONT>                this.ascendingLabel.setBorder(border);<a name="line.153"></a>
<FONT color="green">154</FONT>                this.descendingLabel.setBorder(border);<a name="line.154"></a>
<FONT color="green">155</FONT>            }<a name="line.155"></a>
<FONT color="green">156</FONT>            else {<a name="line.156"></a>
<FONT color="green">157</FONT>                this.normalButton = new JButton();<a name="line.157"></a>
<FONT color="green">158</FONT>                this.normalButton.setMargin(new Insets(0, 0, 0, 0));<a name="line.158"></a>
<FONT color="green">159</FONT>                this.normalButton.setHorizontalAlignment(SwingConstants.LEADING);<a name="line.159"></a>
<FONT color="green">160</FONT>    <a name="line.160"></a>
<FONT color="green">161</FONT>                this.ascendingButton = new JButton();<a name="line.161"></a>
<FONT color="green">162</FONT>                this.ascendingButton.setMargin(new Insets(0, 0, 0, 0));<a name="line.162"></a>
<FONT color="green">163</FONT>                this.ascendingButton.setHorizontalAlignment(SwingConstants.LEADING);<a name="line.163"></a>
<FONT color="green">164</FONT>                this.ascendingButton.setHorizontalTextPosition(SwingConstants.LEFT);<a name="line.164"></a>
<FONT color="green">165</FONT>                this.ascendingButton.setIcon(new BevelArrowIcon(BevelArrowIcon.DOWN, false, false));<a name="line.165"></a>
<FONT color="green">166</FONT>                this.ascendingButton.setPressedIcon(new BevelArrowIcon(BevelArrowIcon.DOWN, false, true));<a name="line.166"></a>
<FONT color="green">167</FONT>    <a name="line.167"></a>
<FONT color="green">168</FONT>                this.descendingButton = new JButton();<a name="line.168"></a>
<FONT color="green">169</FONT>                this.descendingButton.setMargin(new Insets(0, 0, 0, 0));<a name="line.169"></a>
<FONT color="green">170</FONT>                this.descendingButton.setHorizontalAlignment(SwingConstants.LEADING);<a name="line.170"></a>
<FONT color="green">171</FONT>                this.descendingButton.setHorizontalTextPosition(SwingConstants.LEFT);<a name="line.171"></a>
<FONT color="green">172</FONT>                this.descendingButton.setIcon(new BevelArrowIcon(BevelArrowIcon.UP, false, false));<a name="line.172"></a>
<FONT color="green">173</FONT>                this.descendingButton.setPressedIcon(new BevelArrowIcon(BevelArrowIcon.UP, false, true));<a name="line.173"></a>
<FONT color="green">174</FONT>    <a name="line.174"></a>
<FONT color="green">175</FONT>                this.normalButton.setBorder(border);<a name="line.175"></a>
<FONT color="green">176</FONT>                this.ascendingButton.setBorder(border);<a name="line.176"></a>
<FONT color="green">177</FONT>                this.descendingButton.setBorder(border);<a name="line.177"></a>
<FONT color="green">178</FONT>    <a name="line.178"></a>
<FONT color="green">179</FONT>            }<a name="line.179"></a>
<FONT color="green">180</FONT>    <a name="line.180"></a>
<FONT color="green">181</FONT>        }<a name="line.181"></a>
<FONT color="green">182</FONT>    <a name="line.182"></a>
<FONT color="green">183</FONT>        /**<a name="line.183"></a>
<FONT color="green">184</FONT>         * Returns the renderer component.<a name="line.184"></a>
<FONT color="green">185</FONT>         *<a name="line.185"></a>
<FONT color="green">186</FONT>         * @param table      the table.<a name="line.186"></a>
<FONT color="green">187</FONT>         * @param value      the value.<a name="line.187"></a>
<FONT color="green">188</FONT>         * @param isSelected selected?<a name="line.188"></a>
<FONT color="green">189</FONT>         * @param hasFocus   focussed?<a name="line.189"></a>
<FONT color="green">190</FONT>         * @param row        the row.<a name="line.190"></a>
<FONT color="green">191</FONT>         * @param column     the column.<a name="line.191"></a>
<FONT color="green">192</FONT>         * @return the renderer.<a name="line.192"></a>
<FONT color="green">193</FONT>         */<a name="line.193"></a>
<FONT color="green">194</FONT>        public Component getTableCellRendererComponent(final JTable table,<a name="line.194"></a>
<FONT color="green">195</FONT>                                                       final Object value,<a name="line.195"></a>
<FONT color="green">196</FONT>                                                       final boolean isSelected,<a name="line.196"></a>
<FONT color="green">197</FONT>                                                       final boolean hasFocus,<a name="line.197"></a>
<FONT color="green">198</FONT>                                                       final int row, final int column) {<a name="line.198"></a>
<FONT color="green">199</FONT>    <a name="line.199"></a>
<FONT color="green">200</FONT>            if (table == null) {<a name="line.200"></a>
<FONT color="green">201</FONT>                throw new NullPointerException("Table must not be null.");<a name="line.201"></a>
<FONT color="green">202</FONT>            }<a name="line.202"></a>
<FONT color="green">203</FONT>    <a name="line.203"></a>
<FONT color="green">204</FONT>            final JComponent component;<a name="line.204"></a>
<FONT color="green">205</FONT>            final SortableTableModel model = (SortableTableModel) table.getModel();<a name="line.205"></a>
<FONT color="green">206</FONT>            final int cc = table.convertColumnIndexToModel(column);<a name="line.206"></a>
<FONT color="green">207</FONT>            final boolean isSorting = (model.getSortingColumn() == cc);<a name="line.207"></a>
<FONT color="green">208</FONT>            final boolean isAscending = model.isAscending();<a name="line.208"></a>
<FONT color="green">209</FONT>    <a name="line.209"></a>
<FONT color="green">210</FONT>            final JTableHeader header = table.getTableHeader();<a name="line.210"></a>
<FONT color="green">211</FONT>            final boolean isPressed = (cc == this.pressedColumn);<a name="line.211"></a>
<FONT color="green">212</FONT>    <a name="line.212"></a>
<FONT color="green">213</FONT>            if (this.useLabels) {<a name="line.213"></a>
<FONT color="green">214</FONT>                final JLabel label = getRendererLabel(isSorting, isAscending);<a name="line.214"></a>
<FONT color="green">215</FONT>                label.setText((value == null) ? "" : value.toString());<a name="line.215"></a>
<FONT color="green">216</FONT>                component = label;<a name="line.216"></a>
<FONT color="green">217</FONT>            }<a name="line.217"></a>
<FONT color="green">218</FONT>            else {<a name="line.218"></a>
<FONT color="green">219</FONT>                final JButton button = getRendererButton(isSorting, isAscending);<a name="line.219"></a>
<FONT color="green">220</FONT>                button.setText((value == null) ? "" : value.toString());<a name="line.220"></a>
<FONT color="green">221</FONT>                button.getModel().setPressed(isPressed);<a name="line.221"></a>
<FONT color="green">222</FONT>                button.getModel().setArmed(isPressed);<a name="line.222"></a>
<FONT color="green">223</FONT>                component = button;<a name="line.223"></a>
<FONT color="green">224</FONT>            }<a name="line.224"></a>
<FONT color="green">225</FONT>    <a name="line.225"></a>
<FONT color="green">226</FONT>            if (header != null) {<a name="line.226"></a>
<FONT color="green">227</FONT>                component.setForeground(header.getForeground());<a name="line.227"></a>
<FONT color="green">228</FONT>                component.setBackground(header.getBackground());<a name="line.228"></a>
<FONT color="green">229</FONT>                component.setFont(header.getFont());<a name="line.229"></a>
<FONT color="green">230</FONT>            }<a name="line.230"></a>
<FONT color="green">231</FONT>            return component;<a name="line.231"></a>
<FONT color="green">232</FONT>        }<a name="line.232"></a>
<FONT color="green">233</FONT>    <a name="line.233"></a>
<FONT color="green">234</FONT>        /**<a name="line.234"></a>
<FONT color="green">235</FONT>         * Returns the correct button component.<a name="line.235"></a>
<FONT color="green">236</FONT>         *<a name="line.236"></a>
<FONT color="green">237</FONT>         * @param isSorting whether the render component represents the sort column.<a name="line.237"></a>
<FONT color="green">238</FONT>         * @param isAscending whether the model is ascending.<a name="line.238"></a>
<FONT color="green">239</FONT>         * @return either the ascending, descending or normal button.<a name="line.239"></a>
<FONT color="green">240</FONT>         */<a name="line.240"></a>
<FONT color="green">241</FONT>        private JButton getRendererButton(final boolean isSorting, final boolean isAscending) {<a name="line.241"></a>
<FONT color="green">242</FONT>            if (isSorting) {<a name="line.242"></a>
<FONT color="green">243</FONT>                if (isAscending) {<a name="line.243"></a>
<FONT color="green">244</FONT>                    return this.ascendingButton;<a name="line.244"></a>
<FONT color="green">245</FONT>                }<a name="line.245"></a>
<FONT color="green">246</FONT>                else {<a name="line.246"></a>
<FONT color="green">247</FONT>                    return this.descendingButton;<a name="line.247"></a>
<FONT color="green">248</FONT>                }<a name="line.248"></a>
<FONT color="green">249</FONT>            }<a name="line.249"></a>
<FONT color="green">250</FONT>            else {<a name="line.250"></a>
<FONT color="green">251</FONT>                return this.normalButton;<a name="line.251"></a>
<FONT color="green">252</FONT>            }<a name="line.252"></a>
<FONT color="green">253</FONT>        }<a name="line.253"></a>
<FONT color="green">254</FONT>    <a name="line.254"></a>
<FONT color="green">255</FONT>        /**<a name="line.255"></a>
<FONT color="green">256</FONT>         * Returns the correct label component.<a name="line.256"></a>
<FONT color="green">257</FONT>         *<a name="line.257"></a>
<FONT color="green">258</FONT>         * @param isSorting whether the render component represents the sort column.<a name="line.258"></a>
<FONT color="green">259</FONT>         * @param isAscending whether the model is ascending.<a name="line.259"></a>
<FONT color="green">260</FONT>         * @return either the ascending, descending or normal label.<a name="line.260"></a>
<FONT color="green">261</FONT>         */<a name="line.261"></a>
<FONT color="green">262</FONT>        private JLabel getRendererLabel(final boolean isSorting, final boolean isAscending) {<a name="line.262"></a>
<FONT color="green">263</FONT>            if (isSorting) {<a name="line.263"></a>
<FONT color="green">264</FONT>                if (isAscending) {<a name="line.264"></a>
<FONT color="green">265</FONT>                    return this.ascendingLabel;<a name="line.265"></a>
<FONT color="green">266</FONT>                }<a name="line.266"></a>
<FONT color="green">267</FONT>                else {<a name="line.267"></a>
<FONT color="green">268</FONT>                    return this.descendingLabel;<a name="line.268"></a>
<FONT color="green">269</FONT>                }<a name="line.269"></a>
<FONT color="green">270</FONT>            }<a name="line.270"></a>
<FONT color="green">271</FONT>            else {<a name="line.271"></a>
<FONT color="green">272</FONT>                return this.normalLabel;<a name="line.272"></a>
<FONT color="green">273</FONT>            }<a name="line.273"></a>
<FONT color="green">274</FONT>        }<a name="line.274"></a>
<FONT color="green">275</FONT>    <a name="line.275"></a>
<FONT color="green">276</FONT>        /**<a name="line.276"></a>
<FONT color="green">277</FONT>         * Sets the pressed column.<a name="line.277"></a>
<FONT color="green">278</FONT>         *<a name="line.278"></a>
<FONT color="green">279</FONT>         * @param column the column.<a name="line.279"></a>
<FONT color="green">280</FONT>         */<a name="line.280"></a>
<FONT color="green">281</FONT>        public void setPressedColumn(final int column) {<a name="line.281"></a>
<FONT color="green">282</FONT>            this.pressedColumn = column;<a name="line.282"></a>
<FONT color="green">283</FONT>        }<a name="line.283"></a>
<FONT color="green">284</FONT>    <a name="line.284"></a>
<FONT color="green">285</FONT>    }<a name="line.285"></a>




























































</PRE>
</BODY>
</HTML>
