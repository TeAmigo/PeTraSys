<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_16) on Thu Nov 05 12:49:59 PST 2009 -->
<TITLE>
SpiderWebPlot (JFreeChart Class Library (version 1.0.13))
</TITLE>

<META NAME="date" CONTENT="2009-11-05">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="SpiderWebPlot (JFreeChart Class Library (version 1.0.13))";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/SpiderWebPlot.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<h1>Header<br>And More</h1></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/jfree/chart/plot/SeriesRenderingOrder.html" title="class in org.jfree.chart.plot"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/jfree/chart/plot/ThermometerPlot.html" title="class in org.jfree.chart.plot"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/jfree/chart/plot/SpiderWebPlot.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SpiderWebPlot.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.jfree.chart.plot</FONT>
<BR>
Class SpiderWebPlot</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">org.jfree.chart.plot.Plot</A>
      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>org.jfree.chart.plot.SpiderWebPlot</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.io.Serializable, java.lang.Cloneable, java.util.EventListener, <A HREF="../../../../org/jfree/chart/event/AxisChangeListener.html" title="interface in org.jfree.chart.event">AxisChangeListener</A>, <A HREF="../../../../org/jfree/chart/event/MarkerChangeListener.html" title="interface in org.jfree.chart.event">MarkerChangeListener</A>, <A HREF="../../../../org/jfree/chart/LegendItemSource.html" title="interface in org.jfree.chart">LegendItemSource</A>, <A HREF="../../../../org/jfree/data/general/DatasetChangeListener.html" title="interface in org.jfree.data.general">DatasetChangeListener</A>, org.jfree.util.PublicCloneable</DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.124"><B>SpiderWebPlot</B></A><DT>extends <A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A><DT>implements java.lang.Cloneable, java.io.Serializable</DL>
</PRE>

<P>
A plot that displays data from a <A HREF="../../../../org/jfree/data/category/CategoryDataset.html" title="interface in org.jfree.data.category"><CODE>CategoryDataset</CODE></A> in the form of a
 "spider web".  Multiple series can be plotted on the same axis to allow
 easy comparison.  This plot doesn't support negative values at present.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../serialized-form.html#org.jfree.chart.plot.SpiderWebPlot">Serialized Form</A></DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#DEFAULT_AXIS_LABEL_GAP">DEFAULT_AXIS_LABEL_GAP</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The default axis label gap (currently 10%).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#DEFAULT_HEAD">DEFAULT_HEAD</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The default head radius percent (currently 1%).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#DEFAULT_INTERIOR_GAP">DEFAULT_INTERIOR_GAP</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The default interior gap.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#DEFAULT_LABEL_BACKGROUND_PAINT">DEFAULT_LABEL_BACKGROUND_PAINT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The default series label background paint.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.awt.Font</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#DEFAULT_LABEL_FONT">DEFAULT_LABEL_FONT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The default series label font.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#DEFAULT_LABEL_OUTLINE_PAINT">DEFAULT_LABEL_OUTLINE_PAINT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The default series label outline paint.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.awt.Stroke</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#DEFAULT_LABEL_OUTLINE_STROKE">DEFAULT_LABEL_OUTLINE_STROKE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The default series label outline stroke.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#DEFAULT_LABEL_PAINT">DEFAULT_LABEL_PAINT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The default series label paint.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#DEFAULT_LABEL_SHADOW_PAINT">DEFAULT_LABEL_SHADOW_PAINT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The default series label shadow paint.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#DEFAULT_MAX_VALUE">DEFAULT_MAX_VALUE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The default maximum value plotted - forces the plot to evaluate
  the maximum from the data passed in</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#DEFAULT_START_ANGLE">DEFAULT_START_ANGLE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The default starting angle for the radar chart axes.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#headPercent">headPercent</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The head radius as a percentage of the available drawing area.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#MAX_INTERIOR_GAP">MAX_INTERIOR_GAP</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The maximum interior gap (currently 40%).</TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.jfree.chart.plot.Plot"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.jfree.chart.plot.<A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html#DEFAULT_BACKGROUND_ALPHA">DEFAULT_BACKGROUND_ALPHA</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#DEFAULT_BACKGROUND_PAINT">DEFAULT_BACKGROUND_PAINT</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#DEFAULT_FOREGROUND_ALPHA">DEFAULT_FOREGROUND_ALPHA</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#DEFAULT_INSETS">DEFAULT_INSETS</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#DEFAULT_LEGEND_ITEM_BOX">DEFAULT_LEGEND_ITEM_BOX</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#DEFAULT_LEGEND_ITEM_CIRCLE">DEFAULT_LEGEND_ITEM_CIRCLE</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#DEFAULT_OUTLINE_PAINT">DEFAULT_OUTLINE_PAINT</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#DEFAULT_OUTLINE_STROKE">DEFAULT_OUTLINE_STROKE</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#MINIMUM_HEIGHT_TO_DRAW">MINIMUM_HEIGHT_TO_DRAW</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#MINIMUM_WIDTH_TO_DRAW">MINIMUM_WIDTH_TO_DRAW</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#ZERO">ZERO</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#SpiderWebPlot()">SpiderWebPlot</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a default plot with no dataset.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#SpiderWebPlot(org.jfree.data.category.CategoryDataset)">SpiderWebPlot</A></B>(<A HREF="../../../../org/jfree/data/category/CategoryDataset.html" title="interface in org.jfree.data.category">CategoryDataset</A>&nbsp;dataset)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new spider web plot with the given dataset, with each row
 representing a series.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#SpiderWebPlot(org.jfree.data.category.CategoryDataset, org.jfree.util.TableOrder)">SpiderWebPlot</A></B>(<A HREF="../../../../org/jfree/data/category/CategoryDataset.html" title="interface in org.jfree.data.category">CategoryDataset</A>&nbsp;dataset,
                           org.jfree.util.TableOrder&nbsp;extract)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new spider web plot with the given dataset.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.awt.geom.Point2D</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#calculateLabelLocation(java.awt.geom.Rectangle2D, double, java.awt.geom.Rectangle2D, double)">calculateLabelLocation</A></B>(java.awt.geom.Rectangle2D&nbsp;labelBounds,
                                             double&nbsp;ascent,
                                             java.awt.geom.Rectangle2D&nbsp;plotArea,
                                             double&nbsp;startAngle)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the location for a label</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#clone()">clone</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a clone of this plot.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.plot.PlotState, org.jfree.chart.plot.PlotRenderingInfo)">draw</A></B>(java.awt.Graphics2D&nbsp;g2,
         java.awt.geom.Rectangle2D&nbsp;area,
         java.awt.geom.Point2D&nbsp;anchor,
         <A HREF="../../../../org/jfree/chart/plot/PlotState.html" title="class in org.jfree.chart.plot">PlotState</A>&nbsp;parentState,
         <A HREF="../../../../org/jfree/chart/plot/PlotRenderingInfo.html" title="class in org.jfree.chart.plot">PlotRenderingInfo</A>&nbsp;info)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Draws the plot on a Java 2D graphics device (such as the screen or a
 printer).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#drawLabel(java.awt.Graphics2D, java.awt.geom.Rectangle2D, double, int, double, double)">drawLabel</A></B>(java.awt.Graphics2D&nbsp;g2,
                   java.awt.geom.Rectangle2D&nbsp;plotArea,
                   double&nbsp;value,
                   int&nbsp;cat,
                   double&nbsp;startAngle,
                   double&nbsp;extent)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Draws the label for one axis.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#drawRadarPoly(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.plot.PlotRenderingInfo, int, int, double, double)">drawRadarPoly</A></B>(java.awt.Graphics2D&nbsp;g2,
                           java.awt.geom.Rectangle2D&nbsp;plotArea,
                           java.awt.geom.Point2D&nbsp;centre,
                           <A HREF="../../../../org/jfree/chart/plot/PlotRenderingInfo.html" title="class in org.jfree.chart.plot">PlotRenderingInfo</A>&nbsp;info,
                           int&nbsp;series,
                           int&nbsp;catCount,
                           double&nbsp;headH,
                           double&nbsp;headW)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Draws a radar plot polygon.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#equals(java.lang.Object)">equals</A></B>(java.lang.Object&nbsp;obj)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tests this plot for equality with an arbitrary object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getAxisLabelGap()">getAxisLabelGap</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the axis label gap.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getAxisLinePaint()">getAxisLinePaint</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the paint used to draw the axis lines.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Stroke</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getAxisLineStroke()">getAxisLineStroke</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the stroke used to draw the axis lines.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getBaseSeriesOutlinePaint()">getBaseSeriesOutlinePaint</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the base series paint.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Stroke</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getBaseSeriesOutlineStroke()">getBaseSeriesOutlineStroke</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the base series stroke.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getBaseSeriesPaint()">getBaseSeriesPaint</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the base series paint.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;org.jfree.util.TableOrder</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getDataExtractOrder()">getDataExtractOrder</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the data extract order (by row or by column).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/jfree/data/category/CategoryDataset.html" title="interface in org.jfree.data.category">CategoryDataset</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getDataset()">getDataset</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the dataset.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;org.jfree.util.Rotation</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getDirection()">getDirection</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the direction in which the radar axes are drawn
 (clockwise or anti-clockwise).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getHeadPercent()">getHeadPercent</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the head percent.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getInteriorGap()">getInteriorGap</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the interior gap, measured as a percentage of the available
 drawing space.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Font</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getLabelFont()">getLabelFont</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the series label font.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/jfree/chart/labels/CategoryItemLabelGenerator.html" title="interface in org.jfree.chart.labels">CategoryItemLabelGenerator</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getLabelGenerator()">getLabelGenerator</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the label generator.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getLabelPaint()">getLabelPaint</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the series label paint.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/jfree/chart/LegendItemCollection.html" title="class in org.jfree.chart">LegendItemCollection</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getLegendItems()">getLegendItems</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a collection of legend items for the radar chart.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Shape</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getLegendItemShape()">getLegendItemShape</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the shape used for legend items.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getMaxValue()">getMaxValue</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the maximum value any category axis can take.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getPlotType()">getPlotType</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a short string describing the type of plot.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.lang.Number</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getPlotValue(int, int)">getPlotValue</A></B>(int&nbsp;series,
                         int&nbsp;cat)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the value to be plotted at the interseries of the
 series and the category.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getSeriesOutlinePaint()">getSeriesOutlinePaint</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the outline paint for ALL series in the plot.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getSeriesOutlinePaint(int)">getSeriesOutlinePaint</A></B>(int&nbsp;series)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the paint for the specified series.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Stroke</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getSeriesOutlineStroke()">getSeriesOutlineStroke</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the outline stroke for ALL series in the plot.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Stroke</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getSeriesOutlineStroke(int)">getSeriesOutlineStroke</A></B>(int&nbsp;series)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the stroke for the specified series.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getSeriesPaint()">getSeriesPaint</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the paint for ALL series in the plot.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getSeriesPaint(int)">getSeriesPaint</A></B>(int&nbsp;series)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the paint for the specified series.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getStartAngle()">getStartAngle</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the start angle for the first radar axis.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/jfree/chart/labels/CategoryToolTipGenerator.html" title="interface in org.jfree.chart.labels">CategoryToolTipGenerator</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getToolTipGenerator()">getToolTipGenerator</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the tool tip generator for the plot.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/jfree/chart/urls/CategoryURLGenerator.html" title="interface in org.jfree.chart.urls">CategoryURLGenerator</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getURLGenerator()">getURLGenerator</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the URL generator for the plot.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.awt.geom.Point2D</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getWebPoint(java.awt.geom.Rectangle2D, double, double)">getWebPoint</A></B>(java.awt.geom.Rectangle2D&nbsp;bounds,
                       double&nbsp;angle,
                       double&nbsp;length)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a cartesian point from a polar angle, length and bounding box</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#isWebFilled()">isWebFilled</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method to determine if the web chart is to be filled.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setAxisLabelGap(double)">setAxisLabelGap</A></B>(double&nbsp;gap)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the axis label gap and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setAxisLinePaint(java.awt.Paint)">setAxisLinePaint</A></B>(java.awt.Paint&nbsp;paint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the paint used to draw the axis lines and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setAxisLineStroke(java.awt.Stroke)">setAxisLineStroke</A></B>(java.awt.Stroke&nbsp;stroke)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the stroke used to draw the axis lines and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setBaseSeriesOutlinePaint(java.awt.Paint)">setBaseSeriesOutlinePaint</A></B>(java.awt.Paint&nbsp;paint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the base series paint.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setBaseSeriesOutlineStroke(java.awt.Stroke)">setBaseSeriesOutlineStroke</A></B>(java.awt.Stroke&nbsp;stroke)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the base series stroke.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setBaseSeriesPaint(java.awt.Paint)">setBaseSeriesPaint</A></B>(java.awt.Paint&nbsp;paint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the base series paint.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setDataExtractOrder(org.jfree.util.TableOrder)">setDataExtractOrder</A></B>(org.jfree.util.TableOrder&nbsp;order)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the data extract order (by row or by column) and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A>to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setDataset(org.jfree.data.category.CategoryDataset)">setDataset</A></B>(<A HREF="../../../../org/jfree/data/category/CategoryDataset.html" title="interface in org.jfree.data.category">CategoryDataset</A>&nbsp;dataset)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the dataset used by the plot and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A>
 to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setDirection(org.jfree.util.Rotation)">setDirection</A></B>(org.jfree.util.Rotation&nbsp;direction)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the direction in which the radar axes are drawn and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setHeadPercent(double)">setHeadPercent</A></B>(double&nbsp;percent)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the head percent and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setInteriorGap(double)">setInteriorGap</A></B>(double&nbsp;percent)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the interior gap and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setLabelFont(java.awt.Font)">setLabelFont</A></B>(java.awt.Font&nbsp;font)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the series label font and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setLabelGenerator(org.jfree.chart.labels.CategoryItemLabelGenerator)">setLabelGenerator</A></B>(<A HREF="../../../../org/jfree/chart/labels/CategoryItemLabelGenerator.html" title="interface in org.jfree.chart.labels">CategoryItemLabelGenerator</A>&nbsp;generator)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the label generator and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setLabelPaint(java.awt.Paint)">setLabelPaint</A></B>(java.awt.Paint&nbsp;paint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the series label paint and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setLegendItemShape(java.awt.Shape)">setLegendItemShape</A></B>(java.awt.Shape&nbsp;shape)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the shape used for legend items and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A>
 to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setMaxValue(double)">setMaxValue</A></B>(double&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the maximum value any category axis can take and sends
 a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setSeriesOutlinePaint(int, java.awt.Paint)">setSeriesOutlinePaint</A></B>(int&nbsp;series,
                                           java.awt.Paint&nbsp;paint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the paint used to fill a series of the radar and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setSeriesOutlinePaint(java.awt.Paint)">setSeriesOutlinePaint</A></B>(java.awt.Paint&nbsp;paint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the outline paint for ALL series in the plot.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setSeriesOutlineStroke(int, java.awt.Stroke)">setSeriesOutlineStroke</A></B>(int&nbsp;series,
                                             java.awt.Stroke&nbsp;stroke)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the stroke used to fill a series of the radar and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setSeriesOutlineStroke(java.awt.Stroke)">setSeriesOutlineStroke</A></B>(java.awt.Stroke&nbsp;stroke)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the outline stroke for ALL series in the plot.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setSeriesPaint(int, java.awt.Paint)">setSeriesPaint</A></B>(int&nbsp;series,
                             java.awt.Paint&nbsp;paint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the paint used to fill a series of the radar and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setSeriesPaint(java.awt.Paint)">setSeriesPaint</A></B>(java.awt.Paint&nbsp;paint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the paint for ALL series in the plot.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setStartAngle(double)">setStartAngle</A></B>(double&nbsp;angle)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the starting angle and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)">setToolTipGenerator</A></B>(<A HREF="../../../../org/jfree/chart/labels/CategoryToolTipGenerator.html" title="interface in org.jfree.chart.labels">CategoryToolTipGenerator</A>&nbsp;generator)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the tool tip generator for the plot and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)">setURLGenerator</A></B>(<A HREF="../../../../org/jfree/chart/urls/CategoryURLGenerator.html" title="interface in org.jfree.chart.urls">CategoryURLGenerator</A>&nbsp;generator)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the URL generator for the plot and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setWebFilled(boolean)">setWebFilled</A></B>(boolean&nbsp;flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the webFilled flag and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.jfree.chart.plot.Plot"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.jfree.chart.plot.<A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html#addChangeListener(org.jfree.chart.event.PlotChangeListener)">addChangeListener</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#axisChanged(org.jfree.chart.event.AxisChangeEvent)">axisChanged</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#createAndAddEntity(java.awt.geom.Rectangle2D, org.jfree.chart.plot.PlotRenderingInfo, java.lang.String, java.lang.String)">createAndAddEntity</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#datasetChanged(org.jfree.data.general.DatasetChangeEvent)">datasetChanged</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#drawBackground(java.awt.Graphics2D, java.awt.geom.Rectangle2D)">drawBackground</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#drawBackgroundImage(java.awt.Graphics2D, java.awt.geom.Rectangle2D)">drawBackgroundImage</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#drawNoDataMessage(java.awt.Graphics2D, java.awt.geom.Rectangle2D)">drawNoDataMessage</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#drawOutline(java.awt.Graphics2D, java.awt.geom.Rectangle2D)">drawOutline</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#fillBackground(java.awt.Graphics2D, java.awt.geom.Rectangle2D)">fillBackground</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#fillBackground(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.plot.PlotOrientation)">fillBackground</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#fireChangeEvent()">fireChangeEvent</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getBackgroundAlpha()">getBackgroundAlpha</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getBackgroundImage()">getBackgroundImage</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getBackgroundImageAlignment()">getBackgroundImageAlignment</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getBackgroundImageAlpha()">getBackgroundImageAlpha</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getBackgroundPaint()">getBackgroundPaint</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getDatasetGroup()">getDatasetGroup</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getDrawingSupplier()">getDrawingSupplier</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getForegroundAlpha()">getForegroundAlpha</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getInsets()">getInsets</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getNoDataMessage()">getNoDataMessage</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getNoDataMessageFont()">getNoDataMessageFont</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getNoDataMessagePaint()">getNoDataMessagePaint</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getOutlinePaint()">getOutlinePaint</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getOutlineStroke()">getOutlineStroke</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getParent()">getParent</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getRectX(double, double, double, org.jfree.ui.RectangleEdge)">getRectX</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getRectY(double, double, double, org.jfree.ui.RectangleEdge)">getRectY</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getRootPlot()">getRootPlot</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#handleClick(int, int, org.jfree.chart.plot.PlotRenderingInfo)">handleClick</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#isNotify()">isNotify</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#isOutlineVisible()">isOutlineVisible</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#isSubplot()">isSubplot</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#markerChanged(org.jfree.chart.event.MarkerChangeEvent)">markerChanged</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#notifyListeners(org.jfree.chart.event.PlotChangeEvent)">notifyListeners</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#removeChangeListener(org.jfree.chart.event.PlotChangeListener)">removeChangeListener</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation, org.jfree.chart.plot.PlotOrientation)">resolveDomainAxisLocation</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation, org.jfree.chart.plot.PlotOrientation)">resolveRangeAxisLocation</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setBackgroundAlpha(float)">setBackgroundAlpha</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setBackgroundImage(java.awt.Image)">setBackgroundImage</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setBackgroundImageAlignment(int)">setBackgroundImageAlignment</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setBackgroundImageAlpha(float)">setBackgroundImageAlpha</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setBackgroundPaint(java.awt.Paint)">setBackgroundPaint</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setDatasetGroup(org.jfree.data.general.DatasetGroup)">setDatasetGroup</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)">setDrawingSupplier</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier, boolean)">setDrawingSupplier</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setForegroundAlpha(float)">setForegroundAlpha</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setInsets(org.jfree.ui.RectangleInsets)">setInsets</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setInsets(org.jfree.ui.RectangleInsets, boolean)">setInsets</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setNoDataMessage(java.lang.String)">setNoDataMessage</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setNoDataMessageFont(java.awt.Font)">setNoDataMessageFont</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setNoDataMessagePaint(java.awt.Paint)">setNoDataMessagePaint</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setNotify(boolean)">setNotify</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setOutlinePaint(java.awt.Paint)">setOutlinePaint</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setOutlineStroke(java.awt.Stroke)">setOutlineStroke</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setOutlineVisible(boolean)">setOutlineVisible</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setParent(org.jfree.chart.plot.Plot)">setParent</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#zoom(double)">zoom</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="DEFAULT_HEAD"><!-- --></A><H3>
DEFAULT_HEAD</H3>
<PRE>
public static final double <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.130"><B>DEFAULT_HEAD</B></A></PRE>
<DL>
<DD>The default head radius percent (currently 1%).
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#org.jfree.chart.plot.SpiderWebPlot.DEFAULT_HEAD">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="DEFAULT_AXIS_LABEL_GAP"><!-- --></A><H3>
DEFAULT_AXIS_LABEL_GAP</H3>
<PRE>
public static final double <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.133"><B>DEFAULT_AXIS_LABEL_GAP</B></A></PRE>
<DL>
<DD>The default axis label gap (currently 10%).
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#org.jfree.chart.plot.SpiderWebPlot.DEFAULT_AXIS_LABEL_GAP">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="DEFAULT_INTERIOR_GAP"><!-- --></A><H3>
DEFAULT_INTERIOR_GAP</H3>
<PRE>
public static final double <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.136"><B>DEFAULT_INTERIOR_GAP</B></A></PRE>
<DL>
<DD>The default interior gap.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#org.jfree.chart.plot.SpiderWebPlot.DEFAULT_INTERIOR_GAP">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="MAX_INTERIOR_GAP"><!-- --></A><H3>
MAX_INTERIOR_GAP</H3>
<PRE>
public static final double <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.139"><B>MAX_INTERIOR_GAP</B></A></PRE>
<DL>
<DD>The maximum interior gap (currently 40%).
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#org.jfree.chart.plot.SpiderWebPlot.MAX_INTERIOR_GAP">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="DEFAULT_START_ANGLE"><!-- --></A><H3>
DEFAULT_START_ANGLE</H3>
<PRE>
public static final double <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.142"><B>DEFAULT_START_ANGLE</B></A></PRE>
<DL>
<DD>The default starting angle for the radar chart axes.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#org.jfree.chart.plot.SpiderWebPlot.DEFAULT_START_ANGLE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="DEFAULT_LABEL_FONT"><!-- --></A><H3>
DEFAULT_LABEL_FONT</H3>
<PRE>
public static final java.awt.Font <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.145"><B>DEFAULT_LABEL_FONT</B></A></PRE>
<DL>
<DD>The default series label font.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="DEFAULT_LABEL_PAINT"><!-- --></A><H3>
DEFAULT_LABEL_PAINT</H3>
<PRE>
public static final java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.149"><B>DEFAULT_LABEL_PAINT</B></A></PRE>
<DL>
<DD>The default series label paint.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="DEFAULT_LABEL_BACKGROUND_PAINT"><!-- --></A><H3>
DEFAULT_LABEL_BACKGROUND_PAINT</H3>
<PRE>
public static final java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.152"><B>DEFAULT_LABEL_BACKGROUND_PAINT</B></A></PRE>
<DL>
<DD>The default series label background paint.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="DEFAULT_LABEL_OUTLINE_PAINT"><!-- --></A><H3>
DEFAULT_LABEL_OUTLINE_PAINT</H3>
<PRE>
public static final java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.156"><B>DEFAULT_LABEL_OUTLINE_PAINT</B></A></PRE>
<DL>
<DD>The default series label outline paint.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="DEFAULT_LABEL_OUTLINE_STROKE"><!-- --></A><H3>
DEFAULT_LABEL_OUTLINE_STROKE</H3>
<PRE>
public static final java.awt.Stroke <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.159"><B>DEFAULT_LABEL_OUTLINE_STROKE</B></A></PRE>
<DL>
<DD>The default series label outline stroke.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="DEFAULT_LABEL_SHADOW_PAINT"><!-- --></A><H3>
DEFAULT_LABEL_SHADOW_PAINT</H3>
<PRE>
public static final java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.163"><B>DEFAULT_LABEL_SHADOW_PAINT</B></A></PRE>
<DL>
<DD>The default series label shadow paint.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="DEFAULT_MAX_VALUE"><!-- --></A><H3>
DEFAULT_MAX_VALUE</H3>
<PRE>
public static final double <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.169"><B>DEFAULT_MAX_VALUE</B></A></PRE>
<DL>
<DD>The default maximum value plotted - forces the plot to evaluate
  the maximum from the data passed in
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#org.jfree.chart.plot.SpiderWebPlot.DEFAULT_MAX_VALUE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="headPercent"><!-- --></A><H3>
headPercent</H3>
<PRE>
protected double <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.172"><B>headPercent</B></A></PRE>
<DL>
<DD>The head radius as a percentage of the available drawing area.
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="SpiderWebPlot()"><!-- --></A><H3>
SpiderWebPlot</H3>
<PRE>
public <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.265"><B>SpiderWebPlot</B></A>()</PRE>
<DL>
<DD>Creates a default plot with no dataset.
<P>
</DL>
<HR>

<A NAME="SpiderWebPlot(org.jfree.data.category.CategoryDataset)"><!-- --></A><H3>
SpiderWebPlot</H3>
<PRE>
public <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.275"><B>SpiderWebPlot</B></A>(<A HREF="../../../../org/jfree/data/category/CategoryDataset.html" title="interface in org.jfree.data.category">CategoryDataset</A>&nbsp;dataset)</PRE>
<DL>
<DD>Creates a new spider web plot with the given dataset, with each row
 representing a series.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>dataset</CODE> - the dataset (<code>null</code> permitted).</DL>
</DL>
<HR>

<A NAME="SpiderWebPlot(org.jfree.data.category.CategoryDataset, org.jfree.util.TableOrder)"><!-- --></A><H3>
SpiderWebPlot</H3>
<PRE>
public <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.286"><B>SpiderWebPlot</B></A>(<A HREF="../../../../org/jfree/data/category/CategoryDataset.html" title="interface in org.jfree.data.category">CategoryDataset</A>&nbsp;dataset,
                     org.jfree.util.TableOrder&nbsp;extract)</PRE>
<DL>
<DD>Creates a new spider web plot with the given dataset.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>dataset</CODE> - the dataset.<DD><CODE>extract</CODE> - controls how data is extracted (<CODE>TableOrder.BY_ROW</CODE>
                 or <CODE>TableOrder.BY_COLUMN</CODE>).</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="getPlotType()"><!-- --></A><H3>
getPlotType</H3>
<PRE>
public java.lang.String <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.331"><B>getPlotType</B></A>()</PRE>
<DL>
<DD>Returns a short string describing the type of plot.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html#getPlotType()">getPlotType</A></CODE> in class <CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The plot type.</DL>
</DD>
</DL>
<HR>

<A NAME="getDataset()"><!-- --></A><H3>
getDataset</H3>
<PRE>
public <A HREF="../../../../org/jfree/data/category/CategoryDataset.html" title="interface in org.jfree.data.category">CategoryDataset</A> <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.343"><B>getDataset</B></A>()</PRE>
<DL>
<DD>Returns the dataset.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The dataset (possibly <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setDataset(org.jfree.data.category.CategoryDataset)"><CODE>setDataset(CategoryDataset)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setDataset(org.jfree.data.category.CategoryDataset)"><!-- --></A><H3>
setDataset</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.355"><B>setDataset</B></A>(<A HREF="../../../../org/jfree/data/category/CategoryDataset.html" title="interface in org.jfree.data.category">CategoryDataset</A>&nbsp;dataset)</PRE>
<DL>
<DD>Sets the dataset used by the plot and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A>
 to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>dataset</CODE> - the dataset (<code>null</code> permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getDataset()"><CODE>getDataset()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="isWebFilled()"><!-- --></A><H3>
isWebFilled</H3>
<PRE>
public boolean <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.380"><B>isWebFilled</B></A>()</PRE>
<DL>
<DD>Method to determine if the web chart is to be filled.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>A boolean.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setWebFilled(boolean)"><CODE>setWebFilled(boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setWebFilled(boolean)"><!-- --></A><H3>
setWebFilled</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.392"><B>setWebFilled</B></A>(boolean&nbsp;flag)</PRE>
<DL>
<DD>Sets the webFilled flag and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>flag</CODE> - the flag.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#isWebFilled()"><CODE>isWebFilled()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getDataExtractOrder()"><!-- --></A><H3>
getDataExtractOrder</H3>
<PRE>
public org.jfree.util.TableOrder <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.404"><B>getDataExtractOrder</B></A>()</PRE>
<DL>
<DD>Returns the data extract order (by row or by column).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The data extract order (never <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setDataExtractOrder(org.jfree.util.TableOrder)"><CODE>setDataExtractOrder(TableOrder)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setDataExtractOrder(org.jfree.util.TableOrder)"><!-- --></A><H3>
setDataExtractOrder</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.419"><B>setDataExtractOrder</B></A>(org.jfree.util.TableOrder&nbsp;order)</PRE>
<DL>
<DD>Sets the data extract order (by row or by column) and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A>to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>order</CODE> - the order (<code>null</code> not permitted).
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalArgumentException</CODE> - if <code>order</code> is
     <code>null</code>.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getDataExtractOrder()"><CODE>getDataExtractOrder()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getHeadPercent()"><!-- --></A><H3>
getHeadPercent</H3>
<PRE>
public double <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.434"><B>getHeadPercent</B></A>()</PRE>
<DL>
<DD>Returns the head percent.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The head percent.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setHeadPercent(double)"><CODE>setHeadPercent(double)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setHeadPercent(double)"><!-- --></A><H3>
setHeadPercent</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.446"><B>setHeadPercent</B></A>(double&nbsp;percent)</PRE>
<DL>
<DD>Sets the head percent and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>percent</CODE> - the percent.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getHeadPercent()"><CODE>getHeadPercent()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getStartAngle()"><!-- --></A><H3>
getStartAngle</H3>
<PRE>
public double <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.461"><B>getStartAngle</B></A>()</PRE>
<DL>
<DD>Returns the start angle for the first radar axis.
 <BR>
 This is measured in degrees starting from 3 o'clock (Java Arc2D default)
 and measuring anti-clockwise.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The start angle.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setStartAngle(double)"><CODE>setStartAngle(double)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setStartAngle(double)"><!-- --></A><H3>
setStartAngle</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.477"><B>setStartAngle</B></A>(double&nbsp;angle)</PRE>
<DL>
<DD>Sets the starting angle and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.
 <P>
 The initial default value is 90 degrees, which corresponds to 12 o'clock.
 A value of zero corresponds to 3 o'clock... this is the encoding used by
 Java's Arc2D class.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>angle</CODE> - the angle (in degrees).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getStartAngle()"><CODE>getStartAngle()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getMaxValue()"><!-- --></A><H3>
getMaxValue</H3>
<PRE>
public double <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.489"><B>getMaxValue</B></A>()</PRE>
<DL>
<DD>Returns the maximum value any category axis can take.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The maximum value.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setMaxValue(double)"><CODE>setMaxValue(double)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setMaxValue(double)"><!-- --></A><H3>
setMaxValue</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.501"><B>setMaxValue</B></A>(double&nbsp;value)</PRE>
<DL>
<DD>Sets the maximum value any category axis can take and sends
 a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - the maximum value.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getMaxValue()"><CODE>getMaxValue()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getDirection()"><!-- --></A><H3>
getDirection</H3>
<PRE>
public org.jfree.util.Rotation <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.514"><B>getDirection</B></A>()</PRE>
<DL>
<DD>Returns the direction in which the radar axes are drawn
 (clockwise or anti-clockwise).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The direction (never <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setDirection(org.jfree.util.Rotation)"><CODE>setDirection(Rotation)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setDirection(org.jfree.util.Rotation)"><!-- --></A><H3>
setDirection</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.526"><B>setDirection</B></A>(org.jfree.util.Rotation&nbsp;direction)</PRE>
<DL>
<DD>Sets the direction in which the radar axes are drawn and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>direction</CODE> - the direction (<code>null</code> not permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getDirection()"><CODE>getDirection()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getInteriorGap()"><!-- --></A><H3>
getInteriorGap</H3>
<PRE>
public double <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.542"><B>getInteriorGap</B></A>()</PRE>
<DL>
<DD>Returns the interior gap, measured as a percentage of the available
 drawing space.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The gap (as a percentage of the available drawing space).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setInteriorGap(double)"><CODE>setInteriorGap(double)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setInteriorGap(double)"><!-- --></A><H3>
setInteriorGap</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.555"><B>setInteriorGap</B></A>(double&nbsp;percent)</PRE>
<DL>
<DD>Sets the interior gap and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners. This controls the space between the edges of the
 plot and the plot area itself (the region where the axis labels appear).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>percent</CODE> - the gap (as a percentage of the available drawing space).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getInteriorGap()"><CODE>getInteriorGap()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getAxisLabelGap()"><!-- --></A><H3>
getAxisLabelGap</H3>
<PRE>
public double <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.573"><B>getAxisLabelGap</B></A>()</PRE>
<DL>
<DD>Returns the axis label gap.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The axis label gap.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setAxisLabelGap(double)"><CODE>setAxisLabelGap(double)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setAxisLabelGap(double)"><!-- --></A><H3>
setAxisLabelGap</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.585"><B>setAxisLabelGap</B></A>(double&nbsp;gap)</PRE>
<DL>
<DD>Sets the axis label gap and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>gap</CODE> - the gap.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getAxisLabelGap()"><CODE>getAxisLabelGap()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getAxisLinePaint()"><!-- --></A><H3>
getAxisLinePaint</H3>
<PRE>
public java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.599"><B>getAxisLinePaint</B></A>()</PRE>
<DL>
<DD>Returns the paint used to draw the axis lines.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The paint used to draw the axis lines (never <code>null</code>).<DT><B>Since:</B></DT>
  <DD>1.0.4</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setAxisLinePaint(java.awt.Paint)"><CODE>setAxisLinePaint(Paint)</CODE></A>, 
<A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getAxisLineStroke()"><CODE>getAxisLineStroke()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setAxisLinePaint(java.awt.Paint)"><!-- --></A><H3>
setAxisLinePaint</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.612"><B>setAxisLinePaint</B></A>(java.awt.Paint&nbsp;paint)</PRE>
<DL>
<DD>Sets the paint used to draw the axis lines and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paint</CODE> - the paint (<code>null</code> not permitted).<DT><B>Since:</B></DT>
  <DD>1.0.4</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getAxisLinePaint()"><CODE>getAxisLinePaint()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getAxisLineStroke()"><!-- --></A><H3>
getAxisLineStroke</H3>
<PRE>
public java.awt.Stroke <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.629"><B>getAxisLineStroke</B></A>()</PRE>
<DL>
<DD>Returns the stroke used to draw the axis lines.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The stroke used to draw the axis lines (never <code>null</code>).<DT><B>Since:</B></DT>
  <DD>1.0.4</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setAxisLineStroke(java.awt.Stroke)"><CODE>setAxisLineStroke(Stroke)</CODE></A>, 
<A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getAxisLinePaint()"><CODE>getAxisLinePaint()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setAxisLineStroke(java.awt.Stroke)"><!-- --></A><H3>
setAxisLineStroke</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.642"><B>setAxisLineStroke</B></A>(java.awt.Stroke&nbsp;stroke)</PRE>
<DL>
<DD>Sets the stroke used to draw the axis lines and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>stroke</CODE> - the stroke (<code>null</code> not permitted).<DT><B>Since:</B></DT>
  <DD>1.0.4</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getAxisLineStroke()"><CODE>getAxisLineStroke()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getSeriesPaint()"><!-- --></A><H3>
getSeriesPaint</H3>
<PRE>
public java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.659"><B>getSeriesPaint</B></A>()</PRE>
<DL>
<DD>Returns the paint for ALL series in the plot.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The paint (possibly <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setSeriesPaint(java.awt.Paint)"><CODE>setSeriesPaint(Paint)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setSeriesPaint(java.awt.Paint)"><!-- --></A><H3>
setSeriesPaint</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.672"><B>setSeriesPaint</B></A>(java.awt.Paint&nbsp;paint)</PRE>
<DL>
<DD>Sets the paint for ALL series in the plot. If this is set to</code> null
 </code>, then a list of paints is used instead (to allow different colors
 to be used for each series of the radar group).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paint</CODE> - the paint (<code>null</code> permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getSeriesPaint()"><CODE>getSeriesPaint()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getSeriesPaint(int)"><!-- --></A><H3>
getSeriesPaint</H3>
<PRE>
public java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.686"><B>getSeriesPaint</B></A>(int&nbsp;series)</PRE>
<DL>
<DD>Returns the paint for the specified series.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>series</CODE> - the series index (zero-based).
<DT><B>Returns:</B><DD>The paint (never <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setSeriesPaint(int, java.awt.Paint)"><CODE>setSeriesPaint(int, Paint)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setSeriesPaint(int, java.awt.Paint)"><!-- --></A><H3>
setSeriesPaint</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.719"><B>setSeriesPaint</B></A>(int&nbsp;series,
                           java.awt.Paint&nbsp;paint)</PRE>
<DL>
<DD>Sets the paint used to fill a series of the radar and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>series</CODE> - the series index (zero-based).<DD><CODE>paint</CODE> - the paint (<code>null</code> permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getSeriesPaint(int)"><CODE>getSeriesPaint(int)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getBaseSeriesPaint()"><!-- --></A><H3>
getBaseSeriesPaint</H3>
<PRE>
public java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.732"><B>getBaseSeriesPaint</B></A>()</PRE>
<DL>
<DD>Returns the base series paint. This is used when no other paint is
 available.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The paint (never <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setBaseSeriesPaint(java.awt.Paint)"><CODE>setBaseSeriesPaint(Paint)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setBaseSeriesPaint(java.awt.Paint)"><!-- --></A><H3>
setBaseSeriesPaint</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.743"><B>setBaseSeriesPaint</B></A>(java.awt.Paint&nbsp;paint)</PRE>
<DL>
<DD>Sets the base series paint.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paint</CODE> - the paint (<code>null</code> not permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getBaseSeriesPaint()"><CODE>getBaseSeriesPaint()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getSeriesOutlinePaint()"><!-- --></A><H3>
getSeriesOutlinePaint</H3>
<PRE>
public java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.758"><B>getSeriesOutlinePaint</B></A>()</PRE>
<DL>
<DD>Returns the outline paint for ALL series in the plot.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The paint (possibly <code>null</code>).</DL>
</DD>
</DL>
<HR>

<A NAME="setSeriesOutlinePaint(java.awt.Paint)"><!-- --></A><H3>
setSeriesOutlinePaint</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.769"><B>setSeriesOutlinePaint</B></A>(java.awt.Paint&nbsp;paint)</PRE>
<DL>
<DD>Sets the outline paint for ALL series in the plot. If this is set to
 </code> null</code>, then a list of paints is used instead (to allow
 different colors to be used for each series).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paint</CODE> - the paint (<code>null</code> permitted).</DL>
</DD>
</DL>
<HR>

<A NAME="getSeriesOutlinePaint(int)"><!-- --></A><H3>
getSeriesOutlinePaint</H3>
<PRE>
public java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.781"><B>getSeriesOutlinePaint</B></A>(int&nbsp;series)</PRE>
<DL>
<DD>Returns the paint for the specified series.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>series</CODE> - the series index (zero-based).
<DT><B>Returns:</B><DD>The paint (never <code>null</code>).</DL>
</DD>
</DL>
<HR>

<A NAME="setSeriesOutlinePaint(int, java.awt.Paint)"><!-- --></A><H3>
setSeriesOutlinePaint</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.801"><B>setSeriesOutlinePaint</B></A>(int&nbsp;series,
                                  java.awt.Paint&nbsp;paint)</PRE>
<DL>
<DD>Sets the paint used to fill a series of the radar and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>series</CODE> - the series index (zero-based).<DD><CODE>paint</CODE> - the paint (<code>null</code> permitted).</DL>
</DD>
</DL>
<HR>

<A NAME="getBaseSeriesOutlinePaint()"><!-- --></A><H3>
getBaseSeriesOutlinePaint</H3>
<PRE>
public java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.812"><B>getBaseSeriesOutlinePaint</B></A>()</PRE>
<DL>
<DD>Returns the base series paint. This is used when no other paint is
 available.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The paint (never <code>null</code>).</DL>
</DD>
</DL>
<HR>

<A NAME="setBaseSeriesOutlinePaint(java.awt.Paint)"><!-- --></A><H3>
setBaseSeriesOutlinePaint</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.821"><B>setBaseSeriesOutlinePaint</B></A>(java.awt.Paint&nbsp;paint)</PRE>
<DL>
<DD>Sets the base series paint.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paint</CODE> - the paint (<code>null</code> not permitted).</DL>
</DD>
</DL>
<HR>

<A NAME="getSeriesOutlineStroke()"><!-- --></A><H3>
getSeriesOutlineStroke</H3>
<PRE>
public java.awt.Stroke <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.836"><B>getSeriesOutlineStroke</B></A>()</PRE>
<DL>
<DD>Returns the outline stroke for ALL series in the plot.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The stroke (possibly <code>null</code>).</DL>
</DD>
</DL>
<HR>

<A NAME="setSeriesOutlineStroke(java.awt.Stroke)"><!-- --></A><H3>
setSeriesOutlineStroke</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.847"><B>setSeriesOutlineStroke</B></A>(java.awt.Stroke&nbsp;stroke)</PRE>
<DL>
<DD>Sets the outline stroke for ALL series in the plot. If this is set to
 </code> null</code>, then a list of paints is used instead (to allow
 different colors to be used for each series).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>stroke</CODE> - the stroke (<code>null</code> permitted).</DL>
</DD>
</DL>
<HR>

<A NAME="getSeriesOutlineStroke(int)"><!-- --></A><H3>
getSeriesOutlineStroke</H3>
<PRE>
public java.awt.Stroke <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.859"><B>getSeriesOutlineStroke</B></A>(int&nbsp;series)</PRE>
<DL>
<DD>Returns the stroke for the specified series.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>series</CODE> - the series index (zero-based).
<DT><B>Returns:</B><DD>The stroke (never <code>null</code>).</DL>
</DD>
</DL>
<HR>

<A NAME="setSeriesOutlineStroke(int, java.awt.Stroke)"><!-- --></A><H3>
setSeriesOutlineStroke</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.882"><B>setSeriesOutlineStroke</B></A>(int&nbsp;series,
                                   java.awt.Stroke&nbsp;stroke)</PRE>
<DL>
<DD>Sets the stroke used to fill a series of the radar and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>series</CODE> - the series index (zero-based).<DD><CODE>stroke</CODE> - the stroke (<code>null</code> permitted).</DL>
</DD>
</DL>
<HR>

<A NAME="getBaseSeriesOutlineStroke()"><!-- --></A><H3>
getBaseSeriesOutlineStroke</H3>
<PRE>
public java.awt.Stroke <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.893"><B>getBaseSeriesOutlineStroke</B></A>()</PRE>
<DL>
<DD>Returns the base series stroke. This is used when no other stroke is
 available.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The stroke (never <code>null</code>).</DL>
</DD>
</DL>
<HR>

<A NAME="setBaseSeriesOutlineStroke(java.awt.Stroke)"><!-- --></A><H3>
setBaseSeriesOutlineStroke</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.902"><B>setBaseSeriesOutlineStroke</B></A>(java.awt.Stroke&nbsp;stroke)</PRE>
<DL>
<DD>Sets the base series stroke.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>stroke</CODE> - the stroke (<code>null</code> not permitted).</DL>
</DD>
</DL>
<HR>

<A NAME="getLegendItemShape()"><!-- --></A><H3>
getLegendItemShape</H3>
<PRE>
public java.awt.Shape <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.917"><B>getLegendItemShape</B></A>()</PRE>
<DL>
<DD>Returns the shape used for legend items.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The shape (never <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setLegendItemShape(java.awt.Shape)"><CODE>setLegendItemShape(Shape)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setLegendItemShape(java.awt.Shape)"><!-- --></A><H3>
setLegendItemShape</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.929"><B>setLegendItemShape</B></A>(java.awt.Shape&nbsp;shape)</PRE>
<DL>
<DD>Sets the shape used for legend items and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A>
 to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>shape</CODE> - the shape (<code>null</code> not permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getLegendItemShape()"><CODE>getLegendItemShape()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getLabelFont()"><!-- --></A><H3>
getLabelFont</H3>
<PRE>
public java.awt.Font <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.944"><B>getLabelFont</B></A>()</PRE>
<DL>
<DD>Returns the series label font.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The font (never <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setLabelFont(java.awt.Font)"><CODE>setLabelFont(Font)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setLabelFont(java.awt.Font)"><!-- --></A><H3>
setLabelFont</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.956"><B>setLabelFont</B></A>(java.awt.Font&nbsp;font)</PRE>
<DL>
<DD>Sets the series label font and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>font</CODE> - the font (<code>null</code> not permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getLabelFont()"><CODE>getLabelFont()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getLabelPaint()"><!-- --></A><H3>
getLabelPaint</H3>
<PRE>
public java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.971"><B>getLabelPaint</B></A>()</PRE>
<DL>
<DD>Returns the series label paint.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The paint (never <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setLabelPaint(java.awt.Paint)"><CODE>setLabelPaint(Paint)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setLabelPaint(java.awt.Paint)"><!-- --></A><H3>
setLabelPaint</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.983"><B>setLabelPaint</B></A>(java.awt.Paint&nbsp;paint)</PRE>
<DL>
<DD>Sets the series label paint and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paint</CODE> - the paint (<code>null</code> not permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getLabelPaint()"><CODE>getLabelPaint()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getLabelGenerator()"><!-- --></A><H3>
getLabelGenerator</H3>
<PRE>
public <A HREF="../../../../org/jfree/chart/labels/CategoryItemLabelGenerator.html" title="interface in org.jfree.chart.labels">CategoryItemLabelGenerator</A> <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.998"><B>getLabelGenerator</B></A>()</PRE>
<DL>
<DD>Returns the label generator.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The label generator (never <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setLabelGenerator(org.jfree.chart.labels.CategoryItemLabelGenerator)"><CODE>setLabelGenerator(CategoryItemLabelGenerator)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setLabelGenerator(org.jfree.chart.labels.CategoryItemLabelGenerator)"><!-- --></A><H3>
setLabelGenerator</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.1010"><B>setLabelGenerator</B></A>(<A HREF="../../../../org/jfree/chart/labels/CategoryItemLabelGenerator.html" title="interface in org.jfree.chart.labels">CategoryItemLabelGenerator</A>&nbsp;generator)</PRE>
<DL>
<DD>Sets the label generator and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>generator</CODE> - the generator (<code>null</code> not permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getLabelGenerator()"><CODE>getLabelGenerator()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getToolTipGenerator()"><!-- --></A><H3>
getToolTipGenerator</H3>
<PRE>
public <A HREF="../../../../org/jfree/chart/labels/CategoryToolTipGenerator.html" title="interface in org.jfree.chart.labels">CategoryToolTipGenerator</A> <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.1026"><B>getToolTipGenerator</B></A>()</PRE>
<DL>
<DD>Returns the tool tip generator for the plot.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The tool tip generator (possibly <code>null</code>).<DT><B>Since:</B></DT>
  <DD>1.0.2</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)"><CODE>setToolTipGenerator(CategoryToolTipGenerator)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)"><!-- --></A><H3>
setToolTipGenerator</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.1040"><B>setToolTipGenerator</B></A>(<A HREF="../../../../org/jfree/chart/labels/CategoryToolTipGenerator.html" title="interface in org.jfree.chart.labels">CategoryToolTipGenerator</A>&nbsp;generator)</PRE>
<DL>
<DD>Sets the tool tip generator for the plot and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>generator</CODE> - the generator (<code>null</code> permitted).<DT><B>Since:</B></DT>
  <DD>1.0.2</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getToolTipGenerator()"><CODE>getToolTipGenerator()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getURLGenerator()"><!-- --></A><H3>
getURLGenerator</H3>
<PRE>
public <A HREF="../../../../org/jfree/chart/urls/CategoryURLGenerator.html" title="interface in org.jfree.chart.urls">CategoryURLGenerator</A> <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.1054"><B>getURLGenerator</B></A>()</PRE>
<DL>
<DD>Returns the URL generator for the plot.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The URL generator (possibly <code>null</code>).<DT><B>Since:</B></DT>
  <DD>1.0.2</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#setURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)"><CODE>setURLGenerator(CategoryURLGenerator)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)"><!-- --></A><H3>
setURLGenerator</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.1068"><B>setURLGenerator</B></A>(<A HREF="../../../../org/jfree/chart/urls/CategoryURLGenerator.html" title="interface in org.jfree.chart.urls">CategoryURLGenerator</A>&nbsp;generator)</PRE>
<DL>
<DD>Sets the URL generator for the plot and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>generator</CODE> - the generator (<code>null</code> permitted).<DT><B>Since:</B></DT>
  <DD>1.0.2</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getURLGenerator()"><CODE>getURLGenerator()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getLegendItems()"><!-- --></A><H3>
getLegendItems</H3>
<PRE>
public <A HREF="../../../../org/jfree/chart/LegendItemCollection.html" title="class in org.jfree.chart">LegendItemCollection</A> <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.1078"><B>getLegendItems</B></A>()</PRE>
<DL>
<DD>Returns a collection of legend items for the radar chart.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/chart/LegendItemSource.html#getLegendItems()">getLegendItems</A></CODE> in interface <CODE><A HREF="../../../../org/jfree/chart/LegendItemSource.html" title="interface in org.jfree.chart">LegendItemSource</A></CODE><DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html#getLegendItems()">getLegendItems</A></CODE> in class <CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The legend items.</DL>
</DD>
</DL>
<HR>

<A NAME="getWebPoint(java.awt.geom.Rectangle2D, double, double)"><!-- --></A><H3>
getWebPoint</H3>
<PRE>
protected java.awt.geom.Point2D <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.1124"><B>getWebPoint</B></A>(java.awt.geom.Rectangle2D&nbsp;bounds,
                                            double&nbsp;angle,
                                            double&nbsp;length)</PRE>
<DL>
<DD>Returns a cartesian point from a polar angle, length and bounding box
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>bounds</CODE> - the area inside which the point needs to be.<DD><CODE>angle</CODE> - the polar angle, in degrees.<DD><CODE>length</CODE> - the relative length. Given in percent of maximum extend.
<DT><B>Returns:</B><DD>The cartesian point.</DL>
</DD>
</DL>
<HR>

<A NAME="draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.plot.PlotState, org.jfree.chart.plot.PlotRenderingInfo)"><!-- --></A><H3>
draw</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.1145"><B>draw</B></A>(java.awt.Graphics2D&nbsp;g2,
                 java.awt.geom.Rectangle2D&nbsp;area,
                 java.awt.geom.Point2D&nbsp;anchor,
                 <A HREF="../../../../org/jfree/chart/plot/PlotState.html" title="class in org.jfree.chart.plot">PlotState</A>&nbsp;parentState,
                 <A HREF="../../../../org/jfree/chart/plot/PlotRenderingInfo.html" title="class in org.jfree.chart.plot">PlotRenderingInfo</A>&nbsp;info)</PRE>
<DL>
<DD>Draws the plot on a Java 2D graphics device (such as the screen or a
 printer).
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html#draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.plot.PlotState, org.jfree.chart.plot.PlotRenderingInfo)">draw</A></CODE> in class <CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>g2</CODE> - the graphics device.<DD><CODE>area</CODE> - the area within which the plot should be drawn.<DD><CODE>anchor</CODE> - the anchor point (<code>null</code> permitted).<DD><CODE>parentState</CODE> - the state from the parent plot, if there is one.<DD><CODE>info</CODE> - collects info about the drawing.</DL>
</DD>
</DL>
<HR>

<A NAME="drawRadarPoly(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.plot.PlotRenderingInfo, int, int, double, double)"><!-- --></A><H3>
drawRadarPoly</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.1272"><B>drawRadarPoly</B></A>(java.awt.Graphics2D&nbsp;g2,
                             java.awt.geom.Rectangle2D&nbsp;plotArea,
                             java.awt.geom.Point2D&nbsp;centre,
                             <A HREF="../../../../org/jfree/chart/plot/PlotRenderingInfo.html" title="class in org.jfree.chart.plot">PlotRenderingInfo</A>&nbsp;info,
                             int&nbsp;series,
                             int&nbsp;catCount,
                             double&nbsp;headH,
                             double&nbsp;headW)</PRE>
<DL>
<DD>Draws a radar plot polygon.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>g2</CODE> - the graphics device.<DD><CODE>plotArea</CODE> - the area we are plotting in (already adjusted).<DD><CODE>centre</CODE> - the centre point of the radar axes<DD><CODE>info</CODE> - chart rendering info.<DD><CODE>series</CODE> - the series within the dataset we are plotting<DD><CODE>catCount</CODE> - the number of categories per radar plot<DD><CODE>headH</CODE> - the data point height<DD><CODE>headW</CODE> - the data point width</DL>
</DD>
</DL>
<HR>

<A NAME="getPlotValue(int, int)"><!-- --></A><H3>
getPlotValue</H3>
<PRE>
protected java.lang.Number <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.1399"><B>getPlotValue</B></A>(int&nbsp;series,
                                        int&nbsp;cat)</PRE>
<DL>
<DD>Returns the value to be plotted at the interseries of the
 series and the category.  This allows us to plot
 <code>BY_ROW</code> or <code>BY_COLUMN</code> which basically is just
 reversing the definition of the categories and data series being
 plotted.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>series</CODE> - the series to be plotted.<DD><CODE>cat</CODE> - the category within the series to be plotted.
<DT><B>Returns:</B><DD>The value to be plotted (possibly <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/SpiderWebPlot.html#getDataExtractOrder()"><CODE>getDataExtractOrder()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="drawLabel(java.awt.Graphics2D, java.awt.geom.Rectangle2D, double, int, double, double)"><!-- --></A><H3>
drawLabel</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.1420"><B>drawLabel</B></A>(java.awt.Graphics2D&nbsp;g2,
                         java.awt.geom.Rectangle2D&nbsp;plotArea,
                         double&nbsp;value,
                         int&nbsp;cat,
                         double&nbsp;startAngle,
                         double&nbsp;extent)</PRE>
<DL>
<DD>Draws the label for one axis.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>g2</CODE> - the graphics device.<DD><CODE>plotArea</CODE> - the plot area<DD><CODE>value</CODE> - the value of the label (ignored).<DD><CODE>cat</CODE> - the category (zero-based index).<DD><CODE>startAngle</CODE> - the starting angle.<DD><CODE>extent</CODE> - the extent of the arc.</DL>
</DD>
</DL>
<HR>

<A NAME="calculateLabelLocation(java.awt.geom.Rectangle2D, double, java.awt.geom.Rectangle2D, double)"><!-- --></A><H3>
calculateLabelLocation</H3>
<PRE>
protected java.awt.geom.Point2D <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.1462"><B>calculateLabelLocation</B></A>(java.awt.geom.Rectangle2D&nbsp;labelBounds,
                                                       double&nbsp;ascent,
                                                       java.awt.geom.Rectangle2D&nbsp;plotArea,
                                                       double&nbsp;startAngle)</PRE>
<DL>
<DD>Returns the location for a label
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>labelBounds</CODE> - the label bounds.<DD><CODE>ascent</CODE> - the ascent (height of font).<DD><CODE>plotArea</CODE> - the plot area<DD><CODE>startAngle</CODE> - the start angle for the pie series.
<DT><B>Returns:</B><DD>The location for a label.</DL>
</DD>
</DL>
<HR>

<A NAME="equals(java.lang.Object)"><!-- --></A><H3>
equals</H3>
<PRE>
public boolean <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.1500"><B>equals</B></A>(java.lang.Object&nbsp;obj)</PRE>
<DL>
<DD>Tests this plot for equality with an arbitrary object.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html#equals(java.lang.Object)">equals</A></CODE> in class <CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>obj</CODE> - the object (<code>null</code> permitted).
<DT><B>Returns:</B><DD>A boolean.</DL>
</DD>
</DL>
<HR>

<A NAME="clone()"><!-- --></A><H3>
clone</H3>
<PRE>
public java.lang.Object <A HREF="../../../../src-html/org/jfree/chart/plot/SpiderWebPlot.html#line.1604"><B>clone</B></A>()
                       throws java.lang.CloneNotSupportedException</PRE>
<DL>
<DD>Returns a clone of this plot.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>clone</CODE> in interface <CODE>org.jfree.util.PublicCloneable</CODE><DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html#clone()">clone</A></CODE> in class <CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>A clone of this plot.
<DT><B>Throws:</B>
<DD><CODE>java.lang.CloneNotSupportedException</CODE> - if the plot cannot be cloned for
         any reason.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/SpiderWebPlot.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<h1>Footer<br>And More</h1></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/jfree/chart/plot/SeriesRenderingOrder.html" title="class in org.jfree.chart.plot"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/jfree/chart/plot/ThermometerPlot.html" title="class in org.jfree.chart.plot"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/jfree/chart/plot/SpiderWebPlot.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SpiderWebPlot.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>
<i>Copyright &#169; 2000-2009 by Object Refinery Limited. All Rights Reserved.</i>
</BODY>
</HTML>
