<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_16) on Thu Nov 05 12:24:16 PST 2009 -->
<TITLE>
SerialUtilities (JCommon Class Library (version 1.0.16))
</TITLE>

<META NAME="date" CONTENT="2009-11-05">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="SerialUtilities (JCommon Class Library (version 1.0.16))";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../org/jfree/io/IOUtils.html" title="class in org.jfree.io"><B>PREV CLASS</B></A>&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/jfree/io/SerialUtilities.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SerialUtilities.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.jfree.io</FONT>
<BR>
Class SerialUtilities</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>org.jfree.io.SerialUtilities</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <A HREF="../../../src-html/org/jfree/io/SerialUtilities.html#line.77"><B>SerialUtilities</B></A><DT>extends java.lang.Object</DL>
</PRE>

<P>
A class containing useful utility methods relating to serialization.
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>David Gilbert</DD>
</DL>
<HR>

<P>

<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/jfree/io/SerialUtilities.html#isSerializable(java.lang.Class)">isSerializable</A></B>(java.lang.Class&nbsp;c)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns <code>true</code> if a class implements <code>Serializable</code>
 and <code>false</code> otherwise.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.text.AttributedString</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/jfree/io/SerialUtilities.html#readAttributedString(java.io.ObjectInputStream)">readAttributedString</A></B>(java.io.ObjectInputStream&nbsp;stream)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a <code>AttributedString</code> object that has been serialised by
 the <A HREF="../../../org/jfree/io/SerialUtilities.html#writeAttributedString(java.text.AttributedString, java.io.ObjectOutputStream)"><CODE>writeAttributedString(AttributedString,
 ObjectOutputStream)</CODE></A> method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/jfree/io/SerialUtilities.html#readPaint(java.io.ObjectInputStream)">readPaint</A></B>(java.io.ObjectInputStream&nbsp;stream)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a <code>Paint</code> object that has been serialised by the
 <A HREF="../../../org/jfree/io/SerialUtilities.html#writePaint(java.awt.Paint, java.io.ObjectOutputStream)"><CODE>writePaint(Paint, ObjectOutputStream)</CODE></A> method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.awt.geom.Point2D</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/jfree/io/SerialUtilities.html#readPoint2D(java.io.ObjectInputStream)">readPoint2D</A></B>(java.io.ObjectInputStream&nbsp;stream)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a <code>Point2D</code> object that has been serialised by the
 <A HREF="../../../org/jfree/io/SerialUtilities.html#writePoint2D(java.awt.geom.Point2D, java.io.ObjectOutputStream)"><CODE>writePoint2D(Point2D, ObjectOutputStream)</CODE></A> method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.awt.Shape</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/jfree/io/SerialUtilities.html#readShape(java.io.ObjectInputStream)">readShape</A></B>(java.io.ObjectInputStream&nbsp;stream)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a <code>Shape</code> object that has been serialised by the
 <A HREF="../../../org/jfree/io/SerialUtilities.html#writeShape(java.awt.Shape, java.io.ObjectOutputStream)"><CODE>writeShape(Shape, ObjectOutputStream)</CODE></A> method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.awt.Stroke</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/jfree/io/SerialUtilities.html#readStroke(java.io.ObjectInputStream)">readStroke</A></B>(java.io.ObjectInputStream&nbsp;stream)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a <code>Stroke</code> object that has been serialised by the
 <A HREF="../../../org/jfree/io/SerialUtilities.html#writeStroke(java.awt.Stroke, java.io.ObjectOutputStream)"><CODE>writeStroke(Stroke, ObjectOutputStream)</CODE></A> method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/jfree/io/SerialUtilities.html#writeAttributedString(java.text.AttributedString, java.io.ObjectOutputStream)">writeAttributedString</A></B>(java.text.AttributedString&nbsp;as,
                                           java.io.ObjectOutputStream&nbsp;stream)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Serialises an <code>AttributedString</code> object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/jfree/io/SerialUtilities.html#writePaint(java.awt.Paint, java.io.ObjectOutputStream)">writePaint</A></B>(java.awt.Paint&nbsp;paint,
                     java.io.ObjectOutputStream&nbsp;stream)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Serialises a <code>Paint</code> object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/jfree/io/SerialUtilities.html#writePoint2D(java.awt.geom.Point2D, java.io.ObjectOutputStream)">writePoint2D</A></B>(java.awt.geom.Point2D&nbsp;p,
                         java.io.ObjectOutputStream&nbsp;stream)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Serialises a <code>Point2D</code> object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/jfree/io/SerialUtilities.html#writeShape(java.awt.Shape, java.io.ObjectOutputStream)">writeShape</A></B>(java.awt.Shape&nbsp;shape,
                     java.io.ObjectOutputStream&nbsp;stream)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Serialises a <code>Shape</code> object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/jfree/io/SerialUtilities.html#writeStroke(java.awt.Stroke, java.io.ObjectOutputStream)">writeStroke</A></B>(java.awt.Stroke&nbsp;stroke,
                       java.io.ObjectOutputStream&nbsp;stream)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Serialises a <code>Stroke</code> object.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="isSerializable(java.lang.Class)"><!-- --></A><H3>
isSerializable</H3>
<PRE>
public static boolean <A HREF="../../../src-html/org/jfree/io/SerialUtilities.html#line.93"><B>isSerializable</B></A>(java.lang.Class&nbsp;c)</PRE>
<DL>
<DD>Returns <code>true</code> if a class implements <code>Serializable</code>
 and <code>false</code> otherwise.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>c</CODE> - the class.
<DT><B>Returns:</B><DD>A boolean.</DL>
</DD>
</DL>
<HR>

<A NAME="readPaint(java.io.ObjectInputStream)"><!-- --></A><H3>
readPaint</H3>
<PRE>
public static java.awt.Paint <A HREF="../../../src-html/org/jfree/io/SerialUtilities.html#line.120"><B>readPaint</B></A>(java.io.ObjectInputStream&nbsp;stream)
                                throws java.io.IOException,
                                       java.lang.ClassNotFoundException</PRE>
<DL>
<DD>Reads a <code>Paint</code> object that has been serialised by the
 <A HREF="../../../org/jfree/io/SerialUtilities.html#writePaint(java.awt.Paint, java.io.ObjectOutputStream)"><CODE>writePaint(Paint, ObjectOutputStream)</CODE></A> method.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>stream</CODE> - the input stream (<code>null</code> not permitted).
<DT><B>Returns:</B><DD>The paint object (possibly <code>null</code>).
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there is an I/O problem.
<DD><CODE>java.lang.ClassNotFoundException</CODE> - if there is a problem loading a class.</DL>
</DD>
</DL>
<HR>

<A NAME="writePaint(java.awt.Paint, java.io.ObjectOutputStream)"><!-- --></A><H3>
writePaint</H3>
<PRE>
public static void <A HREF="../../../src-html/org/jfree/io/SerialUtilities.html#line.156"><B>writePaint</B></A>(java.awt.Paint&nbsp;paint,
                              java.io.ObjectOutputStream&nbsp;stream)
                       throws java.io.IOException</PRE>
<DL>
<DD>Serialises a <code>Paint</code> object.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paint</CODE> - the paint object (<code>null</code> permitted).<DD><CODE>stream</CODE> - the output stream (<code>null</code> not permitted).
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there is an I/O error.</DL>
</DD>
</DL>
<HR>

<A NAME="readStroke(java.io.ObjectInputStream)"><!-- --></A><H3>
readStroke</H3>
<PRE>
public static java.awt.Stroke <A HREF="../../../src-html/org/jfree/io/SerialUtilities.html#line.197"><B>readStroke</B></A>(java.io.ObjectInputStream&nbsp;stream)
                                  throws java.io.IOException,
                                         java.lang.ClassNotFoundException</PRE>
<DL>
<DD>Reads a <code>Stroke</code> object that has been serialised by the
 <A HREF="../../../org/jfree/io/SerialUtilities.html#writeStroke(java.awt.Stroke, java.io.ObjectOutputStream)"><CODE>writeStroke(Stroke, ObjectOutputStream)</CODE></A> method.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>stream</CODE> - the input stream (<code>null</code> not permitted).
<DT><B>Returns:</B><DD>The stroke object (possibly <code>null</code>).
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there is an I/O problem.
<DD><CODE>java.lang.ClassNotFoundException</CODE> - if there is a problem loading a class.</DL>
</DD>
</DL>
<HR>

<A NAME="writeStroke(java.awt.Stroke, java.io.ObjectOutputStream)"><!-- --></A><H3>
writeStroke</H3>
<PRE>
public static void <A HREF="../../../src-html/org/jfree/io/SerialUtilities.html#line.237"><B>writeStroke</B></A>(java.awt.Stroke&nbsp;stroke,
                               java.io.ObjectOutputStream&nbsp;stream)
                        throws java.io.IOException</PRE>
<DL>
<DD>Serialises a <code>Stroke</code> object.  This code handles the
 <code>BasicStroke</code> class which is the only <code>Stroke</code>
 implementation provided by the JDK (and isn't directly
 <code>Serializable</code>).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>stroke</CODE> - the stroke object (<code>null</code> permitted).<DD><CODE>stream</CODE> - the output stream (<code>null</code> not permitted).
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there is an I/O error.</DL>
</DD>
</DL>
<HR>

<A NAME="readShape(java.io.ObjectInputStream)"><!-- --></A><H3>
readShape</H3>
<PRE>
public static java.awt.Shape <A HREF="../../../src-html/org/jfree/io/SerialUtilities.html#line.277"><B>readShape</B></A>(java.io.ObjectInputStream&nbsp;stream)
                                throws java.io.IOException,
                                       java.lang.ClassNotFoundException</PRE>
<DL>
<DD>Reads a <code>Shape</code> object that has been serialised by the
 <A HREF="../../../org/jfree/io/SerialUtilities.html#writeShape(java.awt.Shape, java.io.ObjectOutputStream)"><CODE>writeShape(Shape, ObjectOutputStream)</CODE></A> method.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>stream</CODE> - the input stream (<code>null</code> not permitted).
<DT><B>Returns:</B><DD>The shape object (possibly <code>null</code>).
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there is an I/O problem.
<DD><CODE>java.lang.ClassNotFoundException</CODE> - if there is a problem loading a class.</DL>
</DD>
</DL>
<HR>

<A NAME="writeShape(java.awt.Shape, java.io.ObjectOutputStream)"><!-- --></A><H3>
writeShape</H3>
<PRE>
public static void <A HREF="../../../src-html/org/jfree/io/SerialUtilities.html#line.369"><B>writeShape</B></A>(java.awt.Shape&nbsp;shape,
                              java.io.ObjectOutputStream&nbsp;stream)
                       throws java.io.IOException</PRE>
<DL>
<DD>Serialises a <code>Shape</code> object.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>shape</CODE> - the shape object (<code>null</code> permitted).<DD><CODE>stream</CODE> - the output stream (<code>null</code> not permitted).
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there is an I/O error.</DL>
</DD>
</DL>
<HR>

<A NAME="readPoint2D(java.io.ObjectInputStream)"><!-- --></A><H3>
readPoint2D</H3>
<PRE>
public static java.awt.geom.Point2D <A HREF="../../../src-html/org/jfree/io/SerialUtilities.html#line.451"><B>readPoint2D</B></A>(java.io.ObjectInputStream&nbsp;stream)
                                         throws java.io.IOException</PRE>
<DL>
<DD>Reads a <code>Point2D</code> object that has been serialised by the
 <A HREF="../../../org/jfree/io/SerialUtilities.html#writePoint2D(java.awt.geom.Point2D, java.io.ObjectOutputStream)"><CODE>writePoint2D(Point2D, ObjectOutputStream)</CODE></A> method.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>stream</CODE> - the input stream (<code>null</code> not permitted).
<DT><B>Returns:</B><DD>The point object (possibly <code>null</code>).
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there is an I/O problem.</DL>
</DD>
</DL>
<HR>

<A NAME="writePoint2D(java.awt.geom.Point2D, java.io.ObjectOutputStream)"><!-- --></A><H3>
writePoint2D</H3>
<PRE>
public static void <A HREF="../../../src-html/org/jfree/io/SerialUtilities.html#line.476"><B>writePoint2D</B></A>(java.awt.geom.Point2D&nbsp;p,
                                java.io.ObjectOutputStream&nbsp;stream)
                         throws java.io.IOException</PRE>
<DL>
<DD>Serialises a <code>Point2D</code> object.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>p</CODE> - the point object (<code>null</code> permitted).<DD><CODE>stream</CODE> - the output stream (<code>null</code> not permitted).
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there is an I/O error.</DL>
</DD>
</DL>
<HR>

<A NAME="readAttributedString(java.io.ObjectInputStream)"><!-- --></A><H3>
readAttributedString</H3>
<PRE>
public static java.text.AttributedString <A HREF="../../../src-html/org/jfree/io/SerialUtilities.html#line.505"><B>readAttributedString</B></A>(java.io.ObjectInputStream&nbsp;stream)
                                                       throws java.io.IOException,
                                                              java.lang.ClassNotFoundException</PRE>
<DL>
<DD>Reads a <code>AttributedString</code> object that has been serialised by
 the <A HREF="../../../org/jfree/io/SerialUtilities.html#writeAttributedString(java.text.AttributedString, java.io.ObjectOutputStream)"><CODE>writeAttributedString(AttributedString,
 ObjectOutputStream)</CODE></A> method.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>stream</CODE> - the input stream (<code>null</code> not permitted).
<DT><B>Returns:</B><DD>The attributed string object (possibly <code>null</code>).
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there is an I/O problem.
<DD><CODE>java.lang.ClassNotFoundException</CODE> - if there is a problem loading a class.</DL>
</DD>
</DL>
<HR>

<A NAME="writeAttributedString(java.text.AttributedString, java.io.ObjectOutputStream)"><!-- --></A><H3>
writeAttributedString</H3>
<PRE>
public static void <A HREF="../../../src-html/org/jfree/io/SerialUtilities.html#line.539"><B>writeAttributedString</B></A>(java.text.AttributedString&nbsp;as,
                                         java.io.ObjectOutputStream&nbsp;stream)
                                  throws java.io.IOException</PRE>
<DL>
<DD>Serialises an <code>AttributedString</code> object.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>as</CODE> - the attributed string object (<code>null</code> permitted).<DD><CODE>stream</CODE> - the output stream (<code>null</code> not permitted).
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there is an I/O error.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../org/jfree/io/IOUtils.html" title="class in org.jfree.io"><B>PREV CLASS</B></A>&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/jfree/io/SerialUtilities.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SerialUtilities.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
