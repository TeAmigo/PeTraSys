<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_16) on Thu Nov 05 12:24:15 PST 2009 -->
<TITLE>
PngEncoder (JCommon Class Library (version 1.0.16))
</TITLE>

<META NAME="date" CONTENT="2009-11-05">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="PngEncoder (JCommon Class Library (version 1.0.16))";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../index.html?com/keypoint/PngEncoder.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="PngEncoder.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.keypoint</FONT>
<BR>
Class PngEncoder</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../resources/inherit.gif" ALT="extended by "><B>com.keypoint.PngEncoder</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.56"><B>PngEncoder</B></A><DT>extends java.lang.Object</DL>
</PRE>

<P>
PngEncoder takes a Java Image object and creates a byte string which can be
 saved as a PNG file.  The Image is presumed to use the DirectColorModel.

 <p>Thanks to Jay Denny at KeyPoint Software
    http://www.keypoint.com/
 who let me develop this code on company time.</p>

 <p>You may contact me with (probably very-much-needed) improvements,
 comments, and bug fixes at:</p>

   <p><code>david@catcode.com</code></p>

 <p>This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.</p>

 <p>This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.</p>

 <p>You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
 USA. A copy of the GNU LGPL may be found at
 <code>http://www.gnu.org/copyleft/lesser.html</code></p>
<P>

<P>
<DL>
<DT><B>Version:</B></DT>
  <DD>1.5, 19 Oct 2003

 CHANGES:
 --------
 19-Nov-2002 : CODING STYLE CHANGES ONLY (by David Gilbert for Object
               Refinery Limited);
 19-Sep-2003 : Fix for platforms using EBCDIC (contributed by Paulo Soares);
 19-Oct-2003 : Change private fields to protected fields so that
               PngEncoderB can inherit them (JDE)
               Fixed bug with calculation of nRows
 15-Aug-2008 : Added scrunch.end() in writeImageData() method - see
               JFreeChart bug report 2037930 (David Gilbert);</DD>
<DT><B>Author:</B></DT>
  <DD>J. David Eisenberg</DD>
</DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#bytePos">bytePos</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The byte position.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#bytesPerPixel">bytesPerPixel</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The bytes-per-pixel.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#compressionLevel">compressionLevel</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The compression level (1 = best speed, 9 = best compression,
 0 = no compression).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.util.zip.CRC32</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#crc">crc</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CRC.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#crcValue">crcValue</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The CRC value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#ENCODE_ALPHA">ENCODE_ALPHA</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant specifying that alpha channel should be encoded.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#encodeAlpha">encodeAlpha</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encode alpha?</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#filter">filter</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The filter type.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#FILTER_LAST">FILTER_LAST</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constants for filter (LAST).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#FILTER_NONE">FILTER_NONE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constants for filter (NONE).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#FILTER_SUB">FILTER_SUB</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constants for filter (SUB).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#FILTER_UP">FILTER_UP</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constants for filter (UP).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#height">height</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The height.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#IDAT">IDAT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IDAT tag.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#IEND">IEND</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IEND tag.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#IHDR">IHDR</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IHDR tag.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.awt.Image</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#image">image</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The image.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#leftBytes">leftBytes</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The left bytes.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#maxPos">maxPos</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The maximum position.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#NO_ALPHA">NO_ALPHA</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant specifying that alpha channel should not be encoded.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#PHYS">PHYS</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PHYS tag.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#pngBytes">pngBytes</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The png bytes.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#priorRow">priorRow</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The prior row.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#width">width</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The width.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#PngEncoder()">PngEncoder</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class constructor.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#PngEncoder(java.awt.Image)">PngEncoder</A></B>(java.awt.Image&nbsp;image)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class constructor specifying Image to encode, with no alpha channel
 encoding.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#PngEncoder(java.awt.Image, boolean)">PngEncoder</A></B>(java.awt.Image&nbsp;image,
                     boolean&nbsp;encodeAlpha)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class constructor specifying Image to encode, and whether to encode
 alpha.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#PngEncoder(java.awt.Image, boolean, int)">PngEncoder</A></B>(java.awt.Image&nbsp;image,
                     boolean&nbsp;encodeAlpha,
                     int&nbsp;whichFilter)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class constructor specifying Image to encode, whether to encode alpha,
 and filter to use.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#PngEncoder(java.awt.Image, boolean, int, int)">PngEncoder</A></B>(java.awt.Image&nbsp;image,
                     boolean&nbsp;encodeAlpha,
                     int&nbsp;whichFilter,
                     int&nbsp;compLevel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class constructor specifying Image source to encode, whether to encode
 alpha, filter to use, and compression level.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#filterSub(byte[], int, int)">filterSub</A></B>(byte[]&nbsp;pixels,
                   int&nbsp;startPos,
                   int&nbsp;width)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Perform "sub" filtering on the given row.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#filterUp(byte[], int, int)">filterUp</A></B>(byte[]&nbsp;pixels,
                 int&nbsp;startPos,
                 int&nbsp;width)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Perform "up" filtering on the given row.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#getCompressionLevel()">getCompressionLevel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieve compression level.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#getEncodeAlpha()">getEncodeAlpha</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieve alpha encoding status.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#getFilter()">getFilter</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieve filtering scheme.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Image</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#getImage()">getImage</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the image to be encoded.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#getXDpi()">getXDpi</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the DPI for the X axis.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#getYDpi()">getYDpi</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the DPI for the Y axis.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#pngEncode()">pngEncode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates an array of bytes that is the PNG equivalent of the current
 image.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#pngEncode(boolean)">pngEncode</A></B>(boolean&nbsp;encodeAlpha)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates an array of bytes that is the PNG equivalent of the current
 image, specifying whether to encode alpha or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#resizeByteArray(byte[], int)">resizeByteArray</A></B>(byte[]&nbsp;array,
                               int&nbsp;newLength)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increase or decrease the length of a byte array.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#setCompressionLevel(int)">setCompressionLevel</A></B>(int&nbsp;level)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the compression level to use.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#setDpi(int, int)">setDpi</A></B>(int&nbsp;xDpi,
             int&nbsp;yDpi)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the DPI resolution.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#setEncodeAlpha(boolean)">setEncodeAlpha</A></B>(boolean&nbsp;encodeAlpha)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the alpha encoding on or off.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#setFilter(int)">setFilter</A></B>(int&nbsp;whichFilter)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the filter to use.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#setImage(java.awt.Image)">setImage</A></B>(java.awt.Image&nbsp;image)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the image to be encoded.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#setXDpi(int)">setXDpi</A></B>(int&nbsp;xDpi)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the DPI for the X axis.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#setYDpi(int)">setYDpi</A></B>(int&nbsp;yDpi)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the DPI for the Y axis.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#writeByte(int, int)">writeByte</A></B>(int&nbsp;b,
                   int&nbsp;offset)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Write a single byte into the pngBytes array at a given position.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#writeBytes(byte[], int)">writeBytes</A></B>(byte[]&nbsp;data,
                     int&nbsp;offset)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Write an array of bytes into the pngBytes array.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#writeBytes(byte[], int, int)">writeBytes</A></B>(byte[]&nbsp;data,
                     int&nbsp;nBytes,
                     int&nbsp;offset)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Write an array of bytes into the pngBytes array, specifying number of
 bytes to write.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#writeEnd()">writeEnd</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Write a PNG "IEND" chunk into the pngBytes array.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#writeHeader()">writeHeader</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Write a PNG "IHDR" chunk into the pngBytes array.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#writeImageData()">writeImageData</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Write the image data into the pngBytes array.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#writeInt2(int, int)">writeInt2</A></B>(int&nbsp;n,
                   int&nbsp;offset)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Write a two-byte integer into the pngBytes array at a given position.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#writeInt4(int, int)">writeInt4</A></B>(int&nbsp;n,
                   int&nbsp;offset)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Write a four-byte integer into the pngBytes array at a given position.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../com/keypoint/PngEncoder.html#writeResolution()">writeResolution</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Write a PNG "pHYs" chunk into the pngBytes array.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="ENCODE_ALPHA"><!-- --></A><H3>
ENCODE_ALPHA</H3>
<PRE>
public static final boolean <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.59"><B>ENCODE_ALPHA</B></A></PRE>
<DL>
<DD>Constant specifying that alpha channel should be encoded.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../constant-values.html#com.keypoint.PngEncoder.ENCODE_ALPHA">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="NO_ALPHA"><!-- --></A><H3>
NO_ALPHA</H3>
<PRE>
public static final boolean <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.62"><B>NO_ALPHA</B></A></PRE>
<DL>
<DD>Constant specifying that alpha channel should not be encoded.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../constant-values.html#com.keypoint.PngEncoder.NO_ALPHA">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="FILTER_NONE"><!-- --></A><H3>
FILTER_NONE</H3>
<PRE>
public static final int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.65"><B>FILTER_NONE</B></A></PRE>
<DL>
<DD>Constants for filter (NONE).
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../constant-values.html#com.keypoint.PngEncoder.FILTER_NONE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="FILTER_SUB"><!-- --></A><H3>
FILTER_SUB</H3>
<PRE>
public static final int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.68"><B>FILTER_SUB</B></A></PRE>
<DL>
<DD>Constants for filter (SUB).
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../constant-values.html#com.keypoint.PngEncoder.FILTER_SUB">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="FILTER_UP"><!-- --></A><H3>
FILTER_UP</H3>
<PRE>
public static final int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.71"><B>FILTER_UP</B></A></PRE>
<DL>
<DD>Constants for filter (UP).
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../constant-values.html#com.keypoint.PngEncoder.FILTER_UP">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="FILTER_LAST"><!-- --></A><H3>
FILTER_LAST</H3>
<PRE>
public static final int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.74"><B>FILTER_LAST</B></A></PRE>
<DL>
<DD>Constants for filter (LAST).
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../constant-values.html#com.keypoint.PngEncoder.FILTER_LAST">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="IHDR"><!-- --></A><H3>
IHDR</H3>
<PRE>
protected static final byte[] <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.77"><B>IHDR</B></A></PRE>
<DL>
<DD>IHDR tag.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="IDAT"><!-- --></A><H3>
IDAT</H3>
<PRE>
protected static final byte[] <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.80"><B>IDAT</B></A></PRE>
<DL>
<DD>IDAT tag.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="IEND"><!-- --></A><H3>
IEND</H3>
<PRE>
protected static final byte[] <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.83"><B>IEND</B></A></PRE>
<DL>
<DD>IEND tag.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="PHYS"><!-- --></A><H3>
PHYS</H3>
<PRE>
protected static final byte[] <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.86"><B>PHYS</B></A></PRE>
<DL>
<DD>PHYS tag.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="pngBytes"><!-- --></A><H3>
pngBytes</H3>
<PRE>
protected byte[] <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.90"><B>pngBytes</B></A></PRE>
<DL>
<DD>The png bytes.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="priorRow"><!-- --></A><H3>
priorRow</H3>
<PRE>
protected byte[] <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.93"><B>priorRow</B></A></PRE>
<DL>
<DD>The prior row.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="leftBytes"><!-- --></A><H3>
leftBytes</H3>
<PRE>
protected byte[] <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.96"><B>leftBytes</B></A></PRE>
<DL>
<DD>The left bytes.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="image"><!-- --></A><H3>
image</H3>
<PRE>
protected java.awt.Image <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.99"><B>image</B></A></PRE>
<DL>
<DD>The image.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="width"><!-- --></A><H3>
width</H3>
<PRE>
protected int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.102"><B>width</B></A></PRE>
<DL>
<DD>The width.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="height"><!-- --></A><H3>
height</H3>
<PRE>
protected int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.105"><B>height</B></A></PRE>
<DL>
<DD>The height.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="bytePos"><!-- --></A><H3>
bytePos</H3>
<PRE>
protected int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.108"><B>bytePos</B></A></PRE>
<DL>
<DD>The byte position.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="maxPos"><!-- --></A><H3>
maxPos</H3>
<PRE>
protected int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.111"><B>maxPos</B></A></PRE>
<DL>
<DD>The maximum position.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="crc"><!-- --></A><H3>
crc</H3>
<PRE>
protected java.util.zip.CRC32 <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.114"><B>crc</B></A></PRE>
<DL>
<DD>CRC.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="crcValue"><!-- --></A><H3>
crcValue</H3>
<PRE>
protected long <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.117"><B>crcValue</B></A></PRE>
<DL>
<DD>The CRC value.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="encodeAlpha"><!-- --></A><H3>
encodeAlpha</H3>
<PRE>
protected boolean <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.120"><B>encodeAlpha</B></A></PRE>
<DL>
<DD>Encode alpha?
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="filter"><!-- --></A><H3>
filter</H3>
<PRE>
protected int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.123"><B>filter</B></A></PRE>
<DL>
<DD>The filter type.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="bytesPerPixel"><!-- --></A><H3>
bytesPerPixel</H3>
<PRE>
protected int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.126"><B>bytesPerPixel</B></A></PRE>
<DL>
<DD>The bytes-per-pixel.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="compressionLevel"><!-- --></A><H3>
compressionLevel</H3>
<PRE>
protected int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.141"><B>compressionLevel</B></A></PRE>
<DL>
<DD>The compression level (1 = best speed, 9 = best compression,
 0 = no compression).
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="PngEncoder()"><!-- --></A><H3>
PngEncoder</H3>
<PRE>
public <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.146"><B>PngEncoder</B></A>()</PRE>
<DL>
<DD>Class constructor.
<P>
</DL>
<HR>

<A NAME="PngEncoder(java.awt.Image)"><!-- --></A><H3>
PngEncoder</H3>
<PRE>
public <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.157"><B>PngEncoder</B></A>(java.awt.Image&nbsp;image)</PRE>
<DL>
<DD>Class constructor specifying Image to encode, with no alpha channel
 encoding.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>image</CODE> - A Java Image object which uses the DirectColorModel<DT><B>See Also:</B><DD><CODE>Image</CODE></DL>
</DL>
<HR>

<A NAME="PngEncoder(java.awt.Image, boolean)"><!-- --></A><H3>
PngEncoder</H3>
<PRE>
public <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.169"><B>PngEncoder</B></A>(java.awt.Image&nbsp;image,
                  boolean&nbsp;encodeAlpha)</PRE>
<DL>
<DD>Class constructor specifying Image to encode, and whether to encode
 alpha.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>image</CODE> - A Java Image object which uses the DirectColorModel<DD><CODE>encodeAlpha</CODE> - Encode the alpha channel? false=no; true=yes<DT><B>See Also:</B><DD><CODE>Image</CODE></DL>
</DL>
<HR>

<A NAME="PngEncoder(java.awt.Image, boolean, int)"><!-- --></A><H3>
PngEncoder</H3>
<PRE>
public <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.182"><B>PngEncoder</B></A>(java.awt.Image&nbsp;image,
                  boolean&nbsp;encodeAlpha,
                  int&nbsp;whichFilter)</PRE>
<DL>
<DD>Class constructor specifying Image to encode, whether to encode alpha,
 and filter to use.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>image</CODE> - A Java Image object which uses the DirectColorModel<DD><CODE>encodeAlpha</CODE> - Encode the alpha channel? false=no; true=yes<DD><CODE>whichFilter</CODE> - 0=none, 1=sub, 2=up<DT><B>See Also:</B><DD><CODE>Image</CODE></DL>
</DL>
<HR>

<A NAME="PngEncoder(java.awt.Image, boolean, int, int)"><!-- --></A><H3>
PngEncoder</H3>
<PRE>
public <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.198"><B>PngEncoder</B></A>(java.awt.Image&nbsp;image,
                  boolean&nbsp;encodeAlpha,
                  int&nbsp;whichFilter,
                  int&nbsp;compLevel)</PRE>
<DL>
<DD>Class constructor specifying Image source to encode, whether to encode
 alpha, filter to use, and compression level.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>image</CODE> - A Java Image object<DD><CODE>encodeAlpha</CODE> - Encode the alpha channel? false=no; true=yes<DD><CODE>whichFilter</CODE> - 0=none, 1=sub, 2=up<DD><CODE>compLevel</CODE> - 0..9 (1 = best speed, 9 = best compression, 0 = no
        compression)<DT><B>See Also:</B><DD><CODE>Image</CODE></DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setImage(java.awt.Image)"><!-- --></A><H3>
setImage</H3>
<PRE>
public void <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.215"><B>setImage</B></A>(java.awt.Image&nbsp;image)</PRE>
<DL>
<DD>Set the image to be encoded.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>image</CODE> - A Java Image object which uses the DirectColorModel<DT><B>See Also:</B><DD><CODE>Image</CODE>, 
<CODE>DirectColorModel</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getImage()"><!-- --></A><H3>
getImage</H3>
<PRE>
public java.awt.Image <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.225"><B>getImage</B></A>()</PRE>
<DL>
<DD>Returns the image to be encoded.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>The image.</DL>
</DD>
</DL>
<HR>

<A NAME="pngEncode(boolean)"><!-- --></A><H3>
pngEncode</H3>
<PRE>
public byte[] <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.236"><B>pngEncode</B></A>(boolean&nbsp;encodeAlpha)</PRE>
<DL>
<DD>Creates an array of bytes that is the PNG equivalent of the current
 image, specifying whether to encode alpha or not.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>encodeAlpha</CODE> - boolean false=no alpha, true=encode alpha
<DT><B>Returns:</B><DD>an array of bytes, or null if there was a problem</DL>
</DD>
</DL>
<HR>

<A NAME="pngEncode()"><!-- --></A><H3>
pngEncode</H3>
<PRE>
public byte[] <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.277"><B>pngEncode</B></A>()</PRE>
<DL>
<DD>Creates an array of bytes that is the PNG equivalent of the current
 image.  Alpha encoding is determined by its setting in the constructor.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>an array of bytes, or null if there was a problem</DL>
</DD>
</DL>
<HR>

<A NAME="setEncodeAlpha(boolean)"><!-- --></A><H3>
setEncodeAlpha</H3>
<PRE>
public void <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.286"><B>setEncodeAlpha</B></A>(boolean&nbsp;encodeAlpha)</PRE>
<DL>
<DD>Set the alpha encoding on or off.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>encodeAlpha</CODE> - false=no, true=yes</DL>
</DD>
</DL>
<HR>

<A NAME="getEncodeAlpha()"><!-- --></A><H3>
getEncodeAlpha</H3>
<PRE>
public boolean <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.295"><B>getEncodeAlpha</B></A>()</PRE>
<DL>
<DD>Retrieve alpha encoding status.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>boolean false=no, true=yes</DL>
</DD>
</DL>
<HR>

<A NAME="setFilter(int)"><!-- --></A><H3>
setFilter</H3>
<PRE>
public void <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.304"><B>setFilter</B></A>(int&nbsp;whichFilter)</PRE>
<DL>
<DD>Set the filter to use.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>whichFilter</CODE> - from constant list</DL>
</DD>
</DL>
<HR>

<A NAME="getFilter()"><!-- --></A><H3>
getFilter</H3>
<PRE>
public int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.316"><B>getFilter</B></A>()</PRE>
<DL>
<DD>Retrieve filtering scheme.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>int (see constant list)</DL>
</DD>
</DL>
<HR>

<A NAME="setCompressionLevel(int)"><!-- --></A><H3>
setCompressionLevel</H3>
<PRE>
public void <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.326"><B>setCompressionLevel</B></A>(int&nbsp;level)</PRE>
<DL>
<DD>Set the compression level to use.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>level</CODE> - the compression level (1 = best speed, 9 = best compression,
        0 = no compression)</DL>
</DD>
</DL>
<HR>

<A NAME="getCompressionLevel()"><!-- --></A><H3>
getCompressionLevel</H3>
<PRE>
public int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.337"><B>getCompressionLevel</B></A>()</PRE>
<DL>
<DD>Retrieve compression level.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>int (1 = best speed, 9 = best compression, 0 = no compression)</DL>
</DD>
</DL>
<HR>

<A NAME="resizeByteArray(byte[], int)"><!-- --></A><H3>
resizeByteArray</H3>
<PRE>
protected byte[] <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.349"><B>resizeByteArray</B></A>(byte[]&nbsp;array,
                                 int&nbsp;newLength)</PRE>
<DL>
<DD>Increase or decrease the length of a byte array.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>array</CODE> - The original array.<DD><CODE>newLength</CODE> - The length you wish the new array to have.
<DT><B>Returns:</B><DD>Array of newly desired length. If shorter than the
         original, the trailing elements are truncated.</DL>
</DD>
</DL>
<HR>

<A NAME="writeBytes(byte[], int)"><!-- --></A><H3>
writeBytes</H3>
<PRE>
protected int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.368"><B>writeBytes</B></A>(byte[]&nbsp;data,
                         int&nbsp;offset)</PRE>
<DL>
<DD>Write an array of bytes into the pngBytes array.
 Note: This routine has the side effect of updating
 maxPos, the largest element written in the array.
 The array is resized by 1000 bytes or the length
 of the data to be written, whichever is larger.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>data</CODE> - The data to be written into pngBytes.<DD><CODE>offset</CODE> - The starting point to write to.
<DT><B>Returns:</B><DD>The next place to be written to in the pngBytes array.</DL>
</DD>
</DL>
<HR>

<A NAME="writeBytes(byte[], int, int)"><!-- --></A><H3>
writeBytes</H3>
<PRE>
protected int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.390"><B>writeBytes</B></A>(byte[]&nbsp;data,
                         int&nbsp;nBytes,
                         int&nbsp;offset)</PRE>
<DL>
<DD>Write an array of bytes into the pngBytes array, specifying number of
 bytes to write. Note: This routine has the side effect of updating
 maxPos, the largest element written in the array.
 The array is resized by 1000 bytes or the length
 of the data to be written, whichever is larger.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>data</CODE> - The data to be written into pngBytes.<DD><CODE>nBytes</CODE> - The number of bytes to be written.<DD><CODE>offset</CODE> - The starting point to write to.
<DT><B>Returns:</B><DD>The next place to be written to in the pngBytes array.</DL>
</DD>
</DL>
<HR>

<A NAME="writeInt2(int, int)"><!-- --></A><H3>
writeInt2</H3>
<PRE>
protected int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.407"><B>writeInt2</B></A>(int&nbsp;n,
                        int&nbsp;offset)</PRE>
<DL>
<DD>Write a two-byte integer into the pngBytes array at a given position.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>n</CODE> - The integer to be written into pngBytes.<DD><CODE>offset</CODE> - The starting point to write to.
<DT><B>Returns:</B><DD>The next place to be written to in the pngBytes array.</DL>
</DD>
</DL>
<HR>

<A NAME="writeInt4(int, int)"><!-- --></A><H3>
writeInt4</H3>
<PRE>
protected int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.419"><B>writeInt4</B></A>(int&nbsp;n,
                        int&nbsp;offset)</PRE>
<DL>
<DD>Write a four-byte integer into the pngBytes array at a given position.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>n</CODE> - The integer to be written into pngBytes.<DD><CODE>offset</CODE> - The starting point to write to.
<DT><B>Returns:</B><DD>The next place to be written to in the pngBytes array.</DL>
</DD>
</DL>
<HR>

<A NAME="writeByte(int, int)"><!-- --></A><H3>
writeByte</H3>
<PRE>
protected int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.434"><B>writeByte</B></A>(int&nbsp;b,
                        int&nbsp;offset)</PRE>
<DL>
<DD>Write a single byte into the pngBytes array at a given position.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>b</CODE> - The integer to be written into pngBytes.<DD><CODE>offset</CODE> - The starting point to write to.
<DT><B>Returns:</B><DD>The next place to be written to in the pngBytes array.</DL>
</DD>
</DL>
<HR>

<A NAME="writeHeader()"><!-- --></A><H3>
writeHeader</H3>
<PRE>
protected void <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.442"><B>writeHeader</B></A>()</PRE>
<DL>
<DD>Write a PNG "IHDR" chunk into the pngBytes array.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="filterSub(byte[], int, int)"><!-- --></A><H3>
filterSub</H3>
<PRE>
protected void <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.472"><B>filterSub</B></A>(byte[]&nbsp;pixels,
                         int&nbsp;startPos,
                         int&nbsp;width)</PRE>
<DL>
<DD>Perform "sub" filtering on the given row.
 Uses temporary array leftBytes to store the original values
 of the previous pixels.  The array is 16 bytes long, which
 will easily hold two-byte samples plus two-byte alpha.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>pixels</CODE> - The array holding the scan lines being built<DD><CODE>startPos</CODE> - Starting position within pixels of bytes to be filtered.<DD><CODE>width</CODE> - Width of a scanline in pixels.</DL>
</DD>
</DL>
<HR>

<A NAME="filterUp(byte[], int, int)"><!-- --></A><H3>
filterUp</H3>
<PRE>
protected void <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.496"><B>filterUp</B></A>(byte[]&nbsp;pixels,
                        int&nbsp;startPos,
                        int&nbsp;width)</PRE>
<DL>
<DD>Perform "up" filtering on the given row.
 Side effect: refills the prior row with current row
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>pixels</CODE> - The array holding the scan lines being built<DD><CODE>startPos</CODE> - Starting position within pixels of bytes to be filtered.<DD><CODE>width</CODE> - Width of a scanline in pixels.</DL>
</DD>
</DL>
<HR>

<A NAME="writeImageData()"><!-- --></A><H3>
writeImageData</H3>
<PRE>
protected boolean <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.517"><B>writeImageData</B></A>()</PRE>
<DL>
<DD>Write the image data into the pngBytes array.
 This will write one or more PNG "IDAT" chunks. In order
 to conserve memory, this method grabs as many rows as will
 fit into 32K bytes, or the whole image; whichever is less.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>true if no errors; false if error grabbing pixels</DL>
</DD>
</DL>
<HR>

<A NAME="writeEnd()"><!-- --></A><H3>
writeEnd</H3>
<PRE>
protected void <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.641"><B>writeEnd</B></A>()</PRE>
<DL>
<DD>Write a PNG "IEND" chunk into the pngBytes array.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setXDpi(int)"><!-- --></A><H3>
setXDpi</H3>
<PRE>
public void <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.656"><B>setXDpi</B></A>(int&nbsp;xDpi)</PRE>
<DL>
<DD>Set the DPI for the X axis.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>xDpi</CODE> - The number of dots per inch</DL>
</DD>
</DL>
<HR>

<A NAME="getXDpi()"><!-- --></A><H3>
getXDpi</H3>
<PRE>
public int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.666"><B>getXDpi</B></A>()</PRE>
<DL>
<DD>Get the DPI for the X axis.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>The number of dots per inch</DL>
</DD>
</DL>
<HR>

<A NAME="setYDpi(int)"><!-- --></A><H3>
setYDpi</H3>
<PRE>
public void <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.675"><B>setYDpi</B></A>(int&nbsp;yDpi)</PRE>
<DL>
<DD>Set the DPI for the Y axis.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>yDpi</CODE> - The number of dots per inch</DL>
</DD>
</DL>
<HR>

<A NAME="getYDpi()"><!-- --></A><H3>
getYDpi</H3>
<PRE>
public int <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.684"><B>getYDpi</B></A>()</PRE>
<DL>
<DD>Get the DPI for the Y axis.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>The number of dots per inch</DL>
</DD>
</DL>
<HR>

<A NAME="setDpi(int, int)"><!-- --></A><H3>
setDpi</H3>
<PRE>
public void <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.694"><B>setDpi</B></A>(int&nbsp;xDpi,
                   int&nbsp;yDpi)</PRE>
<DL>
<DD>Set the DPI resolution.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>xDpi</CODE> - The number of dots per inch for the X axis.<DD><CODE>yDpi</CODE> - The number of dots per inch for the Y axis.</DL>
</DD>
</DL>
<HR>

<A NAME="writeResolution()"><!-- --></A><H3>
writeResolution</H3>
<PRE>
protected void <A HREF="../../src-html/com/keypoint/PngEncoder.html#line.702"><B>writeResolution</B></A>()</PRE>
<DL>
<DD>Write a PNG "pHYs" chunk into the pngBytes array.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../index.html?com/keypoint/PngEncoder.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="PngEncoder.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
