<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_16) on Thu Nov 05 12:49:59 PST 2009 -->
<TITLE>
MeterPlot (JFreeChart Class Library (version 1.0.13))
</TITLE>

<META NAME="date" CONTENT="2009-11-05">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="MeterPlot (JFreeChart Class Library (version 1.0.13))";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/MeterPlot.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<h1>Header<br>And More</h1></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/jfree/chart/plot/MeterInterval.html" title="class in org.jfree.chart.plot"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/jfree/chart/plot/MultiplePiePlot.html" title="class in org.jfree.chart.plot"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/jfree/chart/plot/MeterPlot.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="MeterPlot.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.jfree.chart.plot</FONT>
<BR>
Class MeterPlot</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">org.jfree.chart.plot.Plot</A>
      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>org.jfree.chart.plot.MeterPlot</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.io.Serializable, java.lang.Cloneable, java.util.EventListener, <A HREF="../../../../org/jfree/chart/event/AxisChangeListener.html" title="interface in org.jfree.chart.event">AxisChangeListener</A>, <A HREF="../../../../org/jfree/chart/event/MarkerChangeListener.html" title="interface in org.jfree.chart.event">MarkerChangeListener</A>, <A HREF="../../../../org/jfree/chart/LegendItemSource.html" title="interface in org.jfree.chart">LegendItemSource</A>, <A HREF="../../../../org/jfree/data/general/DatasetChangeListener.html" title="interface in org.jfree.data.general">DatasetChangeListener</A>, org.jfree.util.PublicCloneable</DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.134"><B>MeterPlot</B></A><DT>extends <A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A><DT>implements java.io.Serializable, java.lang.Cloneable</DL>
</PRE>

<P>
A plot that displays a single value in the form of a needle on a dial.
 Defined ranges (for example, 'normal', 'warning' and 'critical') can be
 highlighted on the dial.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../serialized-form.html#org.jfree.chart.plot.MeterPlot">Serialized Form</A></DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;float</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#DEFAULT_BORDER_SIZE">DEFAULT_BORDER_SIZE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The default border size.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;float</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#DEFAULT_CIRCLE_SIZE">DEFAULT_CIRCLE_SIZE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The default circle size.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.awt.Font</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#DEFAULT_LABEL_FONT">DEFAULT_LABEL_FONT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The default label font.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#DEFAULT_METER_ANGLE">DEFAULT_METER_ANGLE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The default meter angle.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected static&nbsp;java.util.ResourceBundle</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#localizationResources">localizationResources</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The resourceBundle for the localization.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.jfree.chart.plot.Plot"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.jfree.chart.plot.<A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html#DEFAULT_BACKGROUND_ALPHA">DEFAULT_BACKGROUND_ALPHA</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#DEFAULT_BACKGROUND_PAINT">DEFAULT_BACKGROUND_PAINT</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#DEFAULT_FOREGROUND_ALPHA">DEFAULT_FOREGROUND_ALPHA</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#DEFAULT_INSETS">DEFAULT_INSETS</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#DEFAULT_LEGEND_ITEM_BOX">DEFAULT_LEGEND_ITEM_BOX</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#DEFAULT_LEGEND_ITEM_CIRCLE">DEFAULT_LEGEND_ITEM_CIRCLE</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#DEFAULT_OUTLINE_PAINT">DEFAULT_OUTLINE_PAINT</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#DEFAULT_OUTLINE_STROKE">DEFAULT_OUTLINE_STROKE</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#MINIMUM_HEIGHT_TO_DRAW">MINIMUM_HEIGHT_TO_DRAW</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#MINIMUM_WIDTH_TO_DRAW">MINIMUM_WIDTH_TO_DRAW</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#ZERO">ZERO</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#MeterPlot()">MeterPlot</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new plot with a default range of <code>0</code> to
 <code>100</code> and no value to display.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#MeterPlot(org.jfree.data.general.ValueDataset)">MeterPlot</A></B>(<A HREF="../../../../org/jfree/data/general/ValueDataset.html" title="interface in org.jfree.data.general">ValueDataset</A>&nbsp;dataset)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new plot that displays the value from the supplied dataset.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#addInterval(org.jfree.chart.plot.MeterInterval)">addInterval</A></B>(<A HREF="../../../../org/jfree/chart/plot/MeterInterval.html" title="class in org.jfree.chart.plot">MeterInterval</A>&nbsp;interval)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds an interval and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered
 listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#clearIntervals()">clearIntervals</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clears the intervals for the plot and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to
 all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#clone()">clone</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an independent copy (clone) of the plot.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.plot.PlotState, org.jfree.chart.plot.PlotRenderingInfo)">draw</A></B>(java.awt.Graphics2D&nbsp;g2,
         java.awt.geom.Rectangle2D&nbsp;area,
         java.awt.geom.Point2D&nbsp;anchor,
         <A HREF="../../../../org/jfree/chart/plot/PlotState.html" title="class in org.jfree.chart.plot">PlotState</A>&nbsp;parentState,
         <A HREF="../../../../org/jfree/chart/plot/PlotRenderingInfo.html" title="class in org.jfree.chart.plot">PlotRenderingInfo</A>&nbsp;info)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Draws the plot on a Java 2D graphics device (such as the screen or a
 printer).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#drawArc(java.awt.Graphics2D, java.awt.geom.Rectangle2D, double, double, java.awt.Paint, java.awt.Stroke)">drawArc</A></B>(java.awt.Graphics2D&nbsp;g2,
               java.awt.geom.Rectangle2D&nbsp;area,
               double&nbsp;minValue,
               double&nbsp;maxValue,
               java.awt.Paint&nbsp;paint,
               java.awt.Stroke&nbsp;stroke)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Draws an arc.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#drawArcForInterval(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.plot.MeterInterval)">drawArcForInterval</A></B>(java.awt.Graphics2D&nbsp;g2,
                                     java.awt.geom.Rectangle2D&nbsp;meterArea,
                                     <A HREF="../../../../org/jfree/chart/plot/MeterInterval.html" title="class in org.jfree.chart.plot">MeterInterval</A>&nbsp;interval)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Draws the arc to represent an interval.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#drawTick(java.awt.Graphics2D, java.awt.geom.Rectangle2D, double)">drawTick</A></B>(java.awt.Graphics2D&nbsp;g2,
                 java.awt.geom.Rectangle2D&nbsp;meterArea,
                 double&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Draws a tick.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#drawTick(java.awt.Graphics2D, java.awt.geom.Rectangle2D, double, boolean)">drawTick</A></B>(java.awt.Graphics2D&nbsp;g2,
                 java.awt.geom.Rectangle2D&nbsp;meterArea,
                 double&nbsp;value,
                 boolean&nbsp;label)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Draws a tick on the dial.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#drawTicks(java.awt.Graphics2D, java.awt.geom.Rectangle2D, double, double)">drawTicks</A></B>(java.awt.Graphics2D&nbsp;g2,
                   java.awt.geom.Rectangle2D&nbsp;meterArea,
                   double&nbsp;minValue,
                   double&nbsp;maxValue)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Draws the ticks that subdivide the overall range.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#drawValueLabel(java.awt.Graphics2D, java.awt.geom.Rectangle2D)">drawValueLabel</A></B>(java.awt.Graphics2D&nbsp;g2,
                             java.awt.geom.Rectangle2D&nbsp;area)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Draws the value label just below the center of the dial.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#equals(java.lang.Object)">equals</A></B>(java.lang.Object&nbsp;obj)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tests the plot for equality with an arbitrary object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#fillArc(java.awt.Graphics2D, java.awt.geom.Rectangle2D, double, double, java.awt.Paint, boolean)">fillArc</A></B>(java.awt.Graphics2D&nbsp;g2,
               java.awt.geom.Rectangle2D&nbsp;area,
               double&nbsp;minValue,
               double&nbsp;maxValue,
               java.awt.Paint&nbsp;paint,
               boolean&nbsp;dial)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fills an arc on the dial between the given values.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/jfree/data/general/ValueDataset.html" title="interface in org.jfree.data.general">ValueDataset</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getDataset()">getDataset</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the dataset for the plot.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getDialBackgroundPaint()">getDialBackgroundPaint</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the paint for the dial background.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getDialOutlinePaint()">getDialOutlinePaint</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the dial outline paint.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/jfree/chart/plot/DialShape.html" title="class in org.jfree.chart.plot">DialShape</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getDialShape()">getDialShape</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the dial shape.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getDrawBorder()">getDrawBorder</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a flag that controls whether or not a rectangular border is
 drawn around the plot area.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.List</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getIntervals()">getIntervals</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an unmodifiable list of the intervals for the plot.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/jfree/chart/LegendItemCollection.html" title="class in org.jfree.chart">LegendItemCollection</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getLegendItems()">getLegendItems</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an item for each interval.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getMeterAngle()">getMeterAngle</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the meter angle in degrees.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getNeedlePaint()">getNeedlePaint</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the paint for the needle.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getPlotType()">getPlotType</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a short string describing the type of plot.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/jfree/data/Range.html" title="class in org.jfree.data">Range</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getRange()">getRange</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the overall range for the dial.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Font</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getTickLabelFont()">getTickLabelFont</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the tick label font.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.text.NumberFormat</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getTickLabelFormat()">getTickLabelFormat</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the tick label format.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getTickLabelPaint()">getTickLabelPaint</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the tick label paint.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getTickLabelsVisible()">getTickLabelsVisible</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the flag that determines whether or not tick labels are visible.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getTickPaint()">getTickPaint</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the paint used to draw the ticks around the dial.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getTickSize()">getTickSize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the tick size (the interval between ticks on the dial).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getUnits()">getUnits</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a string describing the units for the dial.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Font</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getValueFont()">getValueFont</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the font for the value label.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Paint</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getValuePaint()">getValuePaint</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the paint for the value label.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setDataset(org.jfree.data.general.ValueDataset)">setDataset</A></B>(<A HREF="../../../../org/jfree/data/general/ValueDataset.html" title="interface in org.jfree.data.general">ValueDataset</A>&nbsp;dataset)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the dataset for the plot, replacing the existing dataset if there
 is one, and triggers a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setDialBackgroundPaint(java.awt.Paint)">setDialBackgroundPaint</A></B>(java.awt.Paint&nbsp;paint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the paint used to fill the dial background.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setDialOutlinePaint(java.awt.Paint)">setDialOutlinePaint</A></B>(java.awt.Paint&nbsp;paint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the dial outline paint and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setDialShape(org.jfree.chart.plot.DialShape)">setDialShape</A></B>(<A HREF="../../../../org/jfree/chart/plot/DialShape.html" title="class in org.jfree.chart.plot">DialShape</A>&nbsp;shape)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the dial shape and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setDrawBorder(boolean)">setDrawBorder</A></B>(boolean&nbsp;draw)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the flag that controls whether or not a rectangular border is drawn
 around the plot area and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setMeterAngle(int)">setMeterAngle</A></B>(int&nbsp;angle)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the angle (in degrees) for the whole range of the dial and sends
 a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setNeedlePaint(java.awt.Paint)">setNeedlePaint</A></B>(java.awt.Paint&nbsp;paint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the paint used to display the needle and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setRange(org.jfree.data.Range)">setRange</A></B>(<A HREF="../../../../org/jfree/data/Range.html" title="class in org.jfree.data">Range</A>&nbsp;range)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the range for the dial and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setTickLabelFont(java.awt.Font)">setTickLabelFont</A></B>(java.awt.Font&nbsp;font)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the tick label font and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setTickLabelFormat(java.text.NumberFormat)">setTickLabelFormat</A></B>(java.text.NumberFormat&nbsp;format)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the format for the tick labels and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A>
 to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setTickLabelPaint(java.awt.Paint)">setTickLabelPaint</A></B>(java.awt.Paint&nbsp;paint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the tick label paint and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setTickLabelsVisible(boolean)">setTickLabelsVisible</A></B>(boolean&nbsp;visible)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the flag that controls whether or not the tick labels are visible
 and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setTickPaint(java.awt.Paint)">setTickPaint</A></B>(java.awt.Paint&nbsp;paint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the paint used to draw the tick labels around the dial and sends
 a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setTickSize(double)">setTickSize</A></B>(double&nbsp;size)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the tick size and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setUnits(java.lang.String)">setUnits</A></B>(java.lang.String&nbsp;units)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the units for the dial and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setValueFont(java.awt.Font)">setValueFont</A></B>(java.awt.Font&nbsp;font)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the font used to display the value label and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setValuePaint(java.awt.Paint)">setValuePaint</A></B>(java.awt.Paint&nbsp;paint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the paint used to display the value label and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#valueToAngle(double)">valueToAngle</A></B>(double&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Translates a data value to an angle on the dial.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#zoom(double)">zoom</A></B>(double&nbsp;percent)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A zoom method that does nothing.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.jfree.chart.plot.Plot"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.jfree.chart.plot.<A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html#addChangeListener(org.jfree.chart.event.PlotChangeListener)">addChangeListener</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#axisChanged(org.jfree.chart.event.AxisChangeEvent)">axisChanged</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#createAndAddEntity(java.awt.geom.Rectangle2D, org.jfree.chart.plot.PlotRenderingInfo, java.lang.String, java.lang.String)">createAndAddEntity</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#datasetChanged(org.jfree.data.general.DatasetChangeEvent)">datasetChanged</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#drawBackground(java.awt.Graphics2D, java.awt.geom.Rectangle2D)">drawBackground</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#drawBackgroundImage(java.awt.Graphics2D, java.awt.geom.Rectangle2D)">drawBackgroundImage</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#drawNoDataMessage(java.awt.Graphics2D, java.awt.geom.Rectangle2D)">drawNoDataMessage</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#drawOutline(java.awt.Graphics2D, java.awt.geom.Rectangle2D)">drawOutline</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#fillBackground(java.awt.Graphics2D, java.awt.geom.Rectangle2D)">fillBackground</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#fillBackground(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.plot.PlotOrientation)">fillBackground</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#fireChangeEvent()">fireChangeEvent</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getBackgroundAlpha()">getBackgroundAlpha</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getBackgroundImage()">getBackgroundImage</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getBackgroundImageAlignment()">getBackgroundImageAlignment</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getBackgroundImageAlpha()">getBackgroundImageAlpha</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getBackgroundPaint()">getBackgroundPaint</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getDatasetGroup()">getDatasetGroup</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getDrawingSupplier()">getDrawingSupplier</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getForegroundAlpha()">getForegroundAlpha</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getInsets()">getInsets</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getNoDataMessage()">getNoDataMessage</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getNoDataMessageFont()">getNoDataMessageFont</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getNoDataMessagePaint()">getNoDataMessagePaint</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getOutlinePaint()">getOutlinePaint</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getOutlineStroke()">getOutlineStroke</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getParent()">getParent</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getRectX(double, double, double, org.jfree.ui.RectangleEdge)">getRectX</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getRectY(double, double, double, org.jfree.ui.RectangleEdge)">getRectY</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#getRootPlot()">getRootPlot</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#handleClick(int, int, org.jfree.chart.plot.PlotRenderingInfo)">handleClick</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#isNotify()">isNotify</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#isOutlineVisible()">isOutlineVisible</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#isSubplot()">isSubplot</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#markerChanged(org.jfree.chart.event.MarkerChangeEvent)">markerChanged</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#notifyListeners(org.jfree.chart.event.PlotChangeEvent)">notifyListeners</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#removeChangeListener(org.jfree.chart.event.PlotChangeListener)">removeChangeListener</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation, org.jfree.chart.plot.PlotOrientation)">resolveDomainAxisLocation</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation, org.jfree.chart.plot.PlotOrientation)">resolveRangeAxisLocation</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setBackgroundAlpha(float)">setBackgroundAlpha</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setBackgroundImage(java.awt.Image)">setBackgroundImage</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setBackgroundImageAlignment(int)">setBackgroundImageAlignment</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setBackgroundImageAlpha(float)">setBackgroundImageAlpha</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setBackgroundPaint(java.awt.Paint)">setBackgroundPaint</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setDatasetGroup(org.jfree.data.general.DatasetGroup)">setDatasetGroup</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)">setDrawingSupplier</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier, boolean)">setDrawingSupplier</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setForegroundAlpha(float)">setForegroundAlpha</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setInsets(org.jfree.ui.RectangleInsets)">setInsets</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setInsets(org.jfree.ui.RectangleInsets, boolean)">setInsets</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setNoDataMessage(java.lang.String)">setNoDataMessage</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setNoDataMessageFont(java.awt.Font)">setNoDataMessageFont</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setNoDataMessagePaint(java.awt.Paint)">setNoDataMessagePaint</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setNotify(boolean)">setNotify</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setOutlinePaint(java.awt.Paint)">setOutlinePaint</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setOutlineStroke(java.awt.Stroke)">setOutlineStroke</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setOutlineVisible(boolean)">setOutlineVisible</A>, <A HREF="../../../../org/jfree/chart/plot/Plot.html#setParent(org.jfree.chart.plot.Plot)">setParent</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="DEFAULT_METER_ANGLE"><!-- --></A><H3>
DEFAULT_METER_ANGLE</H3>
<PRE>
public static final int <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.152"><B>DEFAULT_METER_ANGLE</B></A></PRE>
<DL>
<DD>The default meter angle.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#org.jfree.chart.plot.MeterPlot.DEFAULT_METER_ANGLE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="DEFAULT_BORDER_SIZE"><!-- --></A><H3>
DEFAULT_BORDER_SIZE</H3>
<PRE>
public static final float <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.155"><B>DEFAULT_BORDER_SIZE</B></A></PRE>
<DL>
<DD>The default border size.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#org.jfree.chart.plot.MeterPlot.DEFAULT_BORDER_SIZE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="DEFAULT_CIRCLE_SIZE"><!-- --></A><H3>
DEFAULT_CIRCLE_SIZE</H3>
<PRE>
public static final float <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.158"><B>DEFAULT_CIRCLE_SIZE</B></A></PRE>
<DL>
<DD>The default circle size.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#org.jfree.chart.plot.MeterPlot.DEFAULT_CIRCLE_SIZE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="DEFAULT_LABEL_FONT"><!-- --></A><H3>
DEFAULT_LABEL_FONT</H3>
<PRE>
public static final java.awt.Font <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.161"><B>DEFAULT_LABEL_FONT</B></A></PRE>
<DL>
<DD>The default label font.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="localizationResources"><!-- --></A><H3>
localizationResources</H3>
<PRE>
protected static java.util.ResourceBundle <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.216"><B>localizationResources</B></A></PRE>
<DL>
<DD>The resourceBundle for the localization.
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="MeterPlot()"><!-- --></A><H3>
MeterPlot</H3>
<PRE>
public <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.230"><B>MeterPlot</B></A>()</PRE>
<DL>
<DD>Creates a new plot with a default range of <code>0</code> to
 <code>100</code> and no value to display.
<P>
</DL>
<HR>

<A NAME="MeterPlot(org.jfree.data.general.ValueDataset)"><!-- --></A><H3>
MeterPlot</H3>
<PRE>
public <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.239"><B>MeterPlot</B></A>(<A HREF="../../../../org/jfree/data/general/ValueDataset.html" title="interface in org.jfree.data.general">ValueDataset</A>&nbsp;dataset)</PRE>
<DL>
<DD>Creates a new plot that displays the value from the supplied dataset.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>dataset</CODE> - the dataset (<code>null</code> permitted).</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="getDialShape()"><!-- --></A><H3>
getDialShape</H3>
<PRE>
public <A HREF="../../../../org/jfree/chart/plot/DialShape.html" title="class in org.jfree.chart.plot">DialShape</A> <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.266"><B>getDialShape</B></A>()</PRE>
<DL>
<DD>Returns the dial shape.  The default is <A HREF="../../../../org/jfree/chart/plot/DialShape.html#CIRCLE"><CODE>DialShape.CIRCLE</CODE></A>).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The dial shape (never <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setDialShape(org.jfree.chart.plot.DialShape)"><CODE>setDialShape(DialShape)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setDialShape(org.jfree.chart.plot.DialShape)"><!-- --></A><H3>
setDialShape</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.278"><B>setDialShape</B></A>(<A HREF="../../../../org/jfree/chart/plot/DialShape.html" title="class in org.jfree.chart.plot">DialShape</A>&nbsp;shape)</PRE>
<DL>
<DD>Sets the dial shape and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>shape</CODE> - the shape (<code>null</code> not permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getDialShape()"><CODE>getDialShape()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getMeterAngle()"><!-- --></A><H3>
getMeterAngle</H3>
<PRE>
public int <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.294"><B>getMeterAngle</B></A>()</PRE>
<DL>
<DD>Returns the meter angle in degrees.  This defines, in part, the shape
 of the dial.  The default is 270 degrees.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The meter angle (in degrees).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setMeterAngle(int)"><CODE>setMeterAngle(int)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setMeterAngle(int)"><!-- --></A><H3>
setMeterAngle</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.306"><B>setMeterAngle</B></A>(int&nbsp;angle)</PRE>
<DL>
<DD>Sets the angle (in degrees) for the whole range of the dial and sends
 a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>angle</CODE> - the angle (in degrees, in the range 1-360).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getMeterAngle()"><CODE>getMeterAngle()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getRange()"><!-- --></A><H3>
getRange</H3>
<PRE>
public <A HREF="../../../../org/jfree/data/Range.html" title="class in org.jfree.data">Range</A> <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.322"><B>getRange</B></A>()</PRE>
<DL>
<DD>Returns the overall range for the dial.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The overall range (never <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setRange(org.jfree.data.Range)"><CODE>setRange(Range)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setRange(org.jfree.data.Range)"><!-- --></A><H3>
setRange</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.335"><B>setRange</B></A>(<A HREF="../../../../org/jfree/data/Range.html" title="class in org.jfree.data">Range</A>&nbsp;range)</PRE>
<DL>
<DD>Sets the range for the dial and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>range</CODE> - the range (<code>null</code> not permitted and zero-length
               ranges not permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getRange()"><CODE>getRange()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getTickSize()"><!-- --></A><H3>
getTickSize</H3>
<PRE>
public double <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.354"><B>getTickSize</B></A>()</PRE>
<DL>
<DD>Returns the tick size (the interval between ticks on the dial).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The tick size.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setTickSize(double)"><CODE>setTickSize(double)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setTickSize(double)"><!-- --></A><H3>
setTickSize</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.366"><B>setTickSize</B></A>(double&nbsp;size)</PRE>
<DL>
<DD>Sets the tick size and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>size</CODE> - the tick size (must be > 0).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getTickSize()"><CODE>getTickSize()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getTickPaint()"><!-- --></A><H3>
getTickPaint</H3>
<PRE>
public java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.382"><B>getTickPaint</B></A>()</PRE>
<DL>
<DD>Returns the paint used to draw the ticks around the dial.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The paint used to draw the ticks around the dial (never
         <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setTickPaint(java.awt.Paint)"><CODE>setTickPaint(Paint)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setTickPaint(java.awt.Paint)"><!-- --></A><H3>
setTickPaint</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.394"><B>setTickPaint</B></A>(java.awt.Paint&nbsp;paint)</PRE>
<DL>
<DD>Sets the paint used to draw the tick labels around the dial and sends
 a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paint</CODE> - the paint (<code>null</code> not permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getTickPaint()"><CODE>getTickPaint()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getUnits()"><!-- --></A><H3>
getUnits</H3>
<PRE>
public java.lang.String <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.409"><B>getUnits</B></A>()</PRE>
<DL>
<DD>Returns a string describing the units for the dial.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The units (possibly <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setUnits(java.lang.String)"><CODE>setUnits(String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setUnits(java.lang.String)"><!-- --></A><H3>
setUnits</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.421"><B>setUnits</B></A>(java.lang.String&nbsp;units)</PRE>
<DL>
<DD>Sets the units for the dial and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>units</CODE> - the units (<code>null</code> permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getUnits()"><CODE>getUnits()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getNeedlePaint()"><!-- --></A><H3>
getNeedlePaint</H3>
<PRE>
public java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.433"><B>getNeedlePaint</B></A>()</PRE>
<DL>
<DD>Returns the paint for the needle.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The paint (never <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setNeedlePaint(java.awt.Paint)"><CODE>setNeedlePaint(Paint)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setNeedlePaint(java.awt.Paint)"><!-- --></A><H3>
setNeedlePaint</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.445"><B>setNeedlePaint</B></A>(java.awt.Paint&nbsp;paint)</PRE>
<DL>
<DD>Sets the paint used to display the needle and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paint</CODE> - the paint (<code>null</code> not permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getNeedlePaint()"><CODE>getNeedlePaint()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getTickLabelsVisible()"><!-- --></A><H3>
getTickLabelsVisible</H3>
<PRE>
public boolean <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.460"><B>getTickLabelsVisible</B></A>()</PRE>
<DL>
<DD>Returns the flag that determines whether or not tick labels are visible.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The flag.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setTickLabelsVisible(boolean)"><CODE>setTickLabelsVisible(boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setTickLabelsVisible(boolean)"><!-- --></A><H3>
setTickLabelsVisible</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.472"><B>setTickLabelsVisible</B></A>(boolean&nbsp;visible)</PRE>
<DL>
<DD>Sets the flag that controls whether or not the tick labels are visible
 and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>visible</CODE> - the flag.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getTickLabelsVisible()"><CODE>getTickLabelsVisible()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getTickLabelFont()"><!-- --></A><H3>
getTickLabelFont</H3>
<PRE>
public java.awt.Font <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.486"><B>getTickLabelFont</B></A>()</PRE>
<DL>
<DD>Returns the tick label font.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The font (never <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setTickLabelFont(java.awt.Font)"><CODE>setTickLabelFont(Font)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setTickLabelFont(java.awt.Font)"><!-- --></A><H3>
setTickLabelFont</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.498"><B>setTickLabelFont</B></A>(java.awt.Font&nbsp;font)</PRE>
<DL>
<DD>Sets the tick label font and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>font</CODE> - the font (<code>null</code> not permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getTickLabelFont()"><CODE>getTickLabelFont()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getTickLabelPaint()"><!-- --></A><H3>
getTickLabelPaint</H3>
<PRE>
public java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.515"><B>getTickLabelPaint</B></A>()</PRE>
<DL>
<DD>Returns the tick label paint.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The paint (never <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setTickLabelPaint(java.awt.Paint)"><CODE>setTickLabelPaint(Paint)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setTickLabelPaint(java.awt.Paint)"><!-- --></A><H3>
setTickLabelPaint</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.527"><B>setTickLabelPaint</B></A>(java.awt.Paint&nbsp;paint)</PRE>
<DL>
<DD>Sets the tick label paint and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paint</CODE> - the paint (<code>null</code> not permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getTickLabelPaint()"><CODE>getTickLabelPaint()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getTickLabelFormat()"><!-- --></A><H3>
getTickLabelFormat</H3>
<PRE>
public java.text.NumberFormat <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.544"><B>getTickLabelFormat</B></A>()</PRE>
<DL>
<DD>Returns the tick label format.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The tick label format (never <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setTickLabelFormat(java.text.NumberFormat)"><CODE>setTickLabelFormat(NumberFormat)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setTickLabelFormat(java.text.NumberFormat)"><!-- --></A><H3>
setTickLabelFormat</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.556"><B>setTickLabelFormat</B></A>(java.text.NumberFormat&nbsp;format)</PRE>
<DL>
<DD>Sets the format for the tick labels and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A>
 to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>format</CODE> - the format (<code>null</code> not permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getTickLabelFormat()"><CODE>getTickLabelFormat()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getValueFont()"><!-- --></A><H3>
getValueFont</H3>
<PRE>
public java.awt.Font <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.571"><B>getValueFont</B></A>()</PRE>
<DL>
<DD>Returns the font for the value label.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The font (never <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setValueFont(java.awt.Font)"><CODE>setValueFont(Font)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setValueFont(java.awt.Font)"><!-- --></A><H3>
setValueFont</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.583"><B>setValueFont</B></A>(java.awt.Font&nbsp;font)</PRE>
<DL>
<DD>Sets the font used to display the value label and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>font</CODE> - the font (<code>null</code> not permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getValueFont()"><CODE>getValueFont()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getValuePaint()"><!-- --></A><H3>
getValuePaint</H3>
<PRE>
public java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.598"><B>getValuePaint</B></A>()</PRE>
<DL>
<DD>Returns the paint for the value label.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The paint (never <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setValuePaint(java.awt.Paint)"><CODE>setValuePaint(Paint)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setValuePaint(java.awt.Paint)"><!-- --></A><H3>
setValuePaint</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.610"><B>setValuePaint</B></A>(java.awt.Paint&nbsp;paint)</PRE>
<DL>
<DD>Sets the paint used to display the value label and sends a
 <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paint</CODE> - the paint (<code>null</code> not permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getValuePaint()"><CODE>getValuePaint()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getDialBackgroundPaint()"><!-- --></A><H3>
getDialBackgroundPaint</H3>
<PRE>
public java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.625"><B>getDialBackgroundPaint</B></A>()</PRE>
<DL>
<DD>Returns the paint for the dial background.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The paint (possibly <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setDialBackgroundPaint(java.awt.Paint)"><CODE>setDialBackgroundPaint(Paint)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setDialBackgroundPaint(java.awt.Paint)"><!-- --></A><H3>
setDialBackgroundPaint</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.637"><B>setDialBackgroundPaint</B></A>(java.awt.Paint&nbsp;paint)</PRE>
<DL>
<DD>Sets the paint used to fill the dial background.  Set this to
 <code>null</code> for no background.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paint</CODE> - the paint (<code>null</code> permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getDialBackgroundPaint()"><CODE>getDialBackgroundPaint()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getDrawBorder()"><!-- --></A><H3>
getDrawBorder</H3>
<PRE>
public boolean <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.650"><B>getDrawBorder</B></A>()</PRE>
<DL>
<DD>Returns a flag that controls whether or not a rectangular border is
 drawn around the plot area.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>A flag.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setDrawBorder(boolean)"><CODE>setDrawBorder(boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setDrawBorder(boolean)"><!-- --></A><H3>
setDrawBorder</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.663"><B>setDrawBorder</B></A>(boolean&nbsp;draw)</PRE>
<DL>
<DD>Sets the flag that controls whether or not a rectangular border is drawn
 around the plot area and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>draw</CODE> - the flag.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getDrawBorder()"><CODE>getDrawBorder()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getDialOutlinePaint()"><!-- --></A><H3>
getDialOutlinePaint</H3>
<PRE>
public java.awt.Paint <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.676"><B>getDialOutlinePaint</B></A>()</PRE>
<DL>
<DD>Returns the dial outline paint.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The paint.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setDialOutlinePaint(java.awt.Paint)"><CODE>setDialOutlinePaint(Paint)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setDialOutlinePaint(java.awt.Paint)"><!-- --></A><H3>
setDialOutlinePaint</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.688"><B>setDialOutlinePaint</B></A>(java.awt.Paint&nbsp;paint)</PRE>
<DL>
<DD>Sets the dial outline paint and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all
 registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paint</CODE> - the paint.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getDialOutlinePaint()"><CODE>getDialOutlinePaint()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getDataset()"><!-- --></A><H3>
getDataset</H3>
<PRE>
public <A HREF="../../../../org/jfree/data/general/ValueDataset.html" title="interface in org.jfree.data.general">ValueDataset</A> <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.700"><B>getDataset</B></A>()</PRE>
<DL>
<DD>Returns the dataset for the plot.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The dataset (possibly <code>null</code>).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#setDataset(org.jfree.data.general.ValueDataset)"><CODE>setDataset(ValueDataset)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setDataset(org.jfree.data.general.ValueDataset)"><!-- --></A><H3>
setDataset</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.712"><B>setDataset</B></A>(<A HREF="../../../../org/jfree/data/general/ValueDataset.html" title="interface in org.jfree.data.general">ValueDataset</A>&nbsp;dataset)</PRE>
<DL>
<DD>Sets the dataset for the plot, replacing the existing dataset if there
 is one, and triggers a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>dataset</CODE> - the dataset (<code>null</code> permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getDataset()"><CODE>getDataset()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getIntervals()"><!-- --></A><H3>
getIntervals</H3>
<PRE>
public java.util.List <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.741"><B>getIntervals</B></A>()</PRE>
<DL>
<DD>Returns an unmodifiable list of the intervals for the plot.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>A list.<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#addInterval(org.jfree.chart.plot.MeterInterval)"><CODE>addInterval(MeterInterval)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="addInterval(org.jfree.chart.plot.MeterInterval)"><!-- --></A><H3>
addInterval</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.754"><B>addInterval</B></A>(<A HREF="../../../../org/jfree/chart/plot/MeterInterval.html" title="class in org.jfree.chart.plot">MeterInterval</A>&nbsp;interval)</PRE>
<DL>
<DD>Adds an interval and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to all registered
 listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>interval</CODE> - the interval (<code>null</code> not permitted).<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#getIntervals()"><CODE>getIntervals()</CODE></A>, 
<A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#clearIntervals()"><CODE>clearIntervals()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="clearIntervals()"><!-- --></A><H3>
clearIntervals</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.768"><B>clearIntervals</B></A>()</PRE>
<DL>
<DD>Clears the intervals for the plot and sends a <A HREF="../../../../org/jfree/chart/event/PlotChangeEvent.html" title="class in org.jfree.chart.event"><CODE>PlotChangeEvent</CODE></A> to
 all registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../org/jfree/chart/plot/MeterPlot.html#addInterval(org.jfree.chart.plot.MeterInterval)"><CODE>addInterval(MeterInterval)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getLegendItems()"><!-- --></A><H3>
getLegendItems</H3>
<PRE>
public <A HREF="../../../../org/jfree/chart/LegendItemCollection.html" title="class in org.jfree.chart">LegendItemCollection</A> <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.778"><B>getLegendItems</B></A>()</PRE>
<DL>
<DD>Returns an item for each interval.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/chart/LegendItemSource.html#getLegendItems()">getLegendItems</A></CODE> in interface <CODE><A HREF="../../../../org/jfree/chart/LegendItemSource.html" title="interface in org.jfree.chart">LegendItemSource</A></CODE><DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html#getLegendItems()">getLegendItems</A></CODE> in class <CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>A collection of legend items.</DL>
</DD>
</DL>
<HR>

<A NAME="draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.plot.PlotState, org.jfree.chart.plot.PlotRenderingInfo)"><!-- --></A><H3>
draw</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.806"><B>draw</B></A>(java.awt.Graphics2D&nbsp;g2,
                 java.awt.geom.Rectangle2D&nbsp;area,
                 java.awt.geom.Point2D&nbsp;anchor,
                 <A HREF="../../../../org/jfree/chart/plot/PlotState.html" title="class in org.jfree.chart.plot">PlotState</A>&nbsp;parentState,
                 <A HREF="../../../../org/jfree/chart/plot/PlotRenderingInfo.html" title="class in org.jfree.chart.plot">PlotRenderingInfo</A>&nbsp;info)</PRE>
<DL>
<DD>Draws the plot on a Java 2D graphics device (such as the screen or a
 printer).
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html#draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.plot.PlotState, org.jfree.chart.plot.PlotRenderingInfo)">draw</A></CODE> in class <CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>g2</CODE> - the graphics device.<DD><CODE>area</CODE> - the area within which the plot should be drawn.<DD><CODE>anchor</CODE> - the anchor point (<code>null</code> permitted).<DD><CODE>parentState</CODE> - the state from the parent plot, if there is one.<DD><CODE>info</CODE> - collects info about the drawing.</DL>
</DD>
</DL>
<HR>

<A NAME="drawArcForInterval(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.plot.MeterInterval)"><!-- --></A><H3>
drawArcForInterval</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.941"><B>drawArcForInterval</B></A>(java.awt.Graphics2D&nbsp;g2,
                                  java.awt.geom.Rectangle2D&nbsp;meterArea,
                                  <A HREF="../../../../org/jfree/chart/plot/MeterInterval.html" title="class in org.jfree.chart.plot">MeterInterval</A>&nbsp;interval)</PRE>
<DL>
<DD>Draws the arc to represent an interval.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>g2</CODE> - the graphics device.<DD><CODE>meterArea</CODE> - the drawing area.<DD><CODE>interval</CODE> - the interval.</DL>
</DD>
</DL>
<HR>

<A NAME="drawArc(java.awt.Graphics2D, java.awt.geom.Rectangle2D, double, double, java.awt.Paint, java.awt.Stroke)"><!-- --></A><H3>
drawArc</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.973"><B>drawArc</B></A>(java.awt.Graphics2D&nbsp;g2,
                       java.awt.geom.Rectangle2D&nbsp;area,
                       double&nbsp;minValue,
                       double&nbsp;maxValue,
                       java.awt.Paint&nbsp;paint,
                       java.awt.Stroke&nbsp;stroke)</PRE>
<DL>
<DD>Draws an arc.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>g2</CODE> - the graphics device.<DD><CODE>area</CODE> - the plot area.<DD><CODE>minValue</CODE> - the minimum value.<DD><CODE>maxValue</CODE> - the maximum value.<DD><CODE>paint</CODE> - the paint.<DD><CODE>stroke</CODE> - the stroke.</DL>
</DD>
</DL>
<HR>

<A NAME="fillArc(java.awt.Graphics2D, java.awt.geom.Rectangle2D, double, double, java.awt.Paint, boolean)"><!-- --></A><H3>
fillArc</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.1008"><B>fillArc</B></A>(java.awt.Graphics2D&nbsp;g2,
                       java.awt.geom.Rectangle2D&nbsp;area,
                       double&nbsp;minValue,
                       double&nbsp;maxValue,
                       java.awt.Paint&nbsp;paint,
                       boolean&nbsp;dial)</PRE>
<DL>
<DD>Fills an arc on the dial between the given values.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>g2</CODE> - the graphics device.<DD><CODE>area</CODE> - the plot area.<DD><CODE>minValue</CODE> - the minimum data value.<DD><CODE>maxValue</CODE> - the maximum data value.<DD><CODE>paint</CODE> - the background paint (<code>null</code> not permitted).<DD><CODE>dial</CODE> - a flag that indicates whether the arc represents the whole
              dial.</DL>
</DD>
</DL>
<HR>

<A NAME="valueToAngle(double)"><!-- --></A><H3>
valueToAngle</H3>
<PRE>
public double <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.1057"><B>valueToAngle</B></A>(double&nbsp;value)</PRE>
<DL>
<DD>Translates a data value to an angle on the dial.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - the value.
<DT><B>Returns:</B><DD>The angle on the dial.</DL>
</DD>
</DL>
<HR>

<A NAME="drawTicks(java.awt.Graphics2D, java.awt.geom.Rectangle2D, double, double)"><!-- --></A><H3>
drawTicks</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.1071"><B>drawTicks</B></A>(java.awt.Graphics2D&nbsp;g2,
                         java.awt.geom.Rectangle2D&nbsp;meterArea,
                         double&nbsp;minValue,
                         double&nbsp;maxValue)</PRE>
<DL>
<DD>Draws the ticks that subdivide the overall range.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>g2</CODE> - the graphics device.<DD><CODE>meterArea</CODE> - the meter area.<DD><CODE>minValue</CODE> - the minimum value.<DD><CODE>maxValue</CODE> - the maximum value.</DL>
</DD>
</DL>
<HR>

<A NAME="drawTick(java.awt.Graphics2D, java.awt.geom.Rectangle2D, double)"><!-- --></A><H3>
drawTick</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.1085"><B>drawTick</B></A>(java.awt.Graphics2D&nbsp;g2,
                        java.awt.geom.Rectangle2D&nbsp;meterArea,
                        double&nbsp;value)</PRE>
<DL>
<DD>Draws a tick.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>g2</CODE> - the graphics device.<DD><CODE>meterArea</CODE> - the meter area.<DD><CODE>value</CODE> - the value.</DL>
</DD>
</DL>
<HR>

<A NAME="drawTick(java.awt.Graphics2D, java.awt.geom.Rectangle2D, double, boolean)"><!-- --></A><H3>
drawTick</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.1098"><B>drawTick</B></A>(java.awt.Graphics2D&nbsp;g2,
                        java.awt.geom.Rectangle2D&nbsp;meterArea,
                        double&nbsp;value,
                        boolean&nbsp;label)</PRE>
<DL>
<DD>Draws a tick on the dial.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>g2</CODE> - the graphics device.<DD><CODE>meterArea</CODE> - the meter area.<DD><CODE>value</CODE> - the tick value.<DD><CODE>label</CODE> - a flag that controls whether or not a value label is drawn.</DL>
</DD>
</DL>
<HR>

<A NAME="drawValueLabel(java.awt.Graphics2D, java.awt.geom.Rectangle2D)"><!-- --></A><H3>
drawValueLabel</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.1164"><B>drawValueLabel</B></A>(java.awt.Graphics2D&nbsp;g2,
                              java.awt.geom.Rectangle2D&nbsp;area)</PRE>
<DL>
<DD>Draws the value label just below the center of the dial.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>g2</CODE> - the graphics device.<DD><CODE>area</CODE> - the plot area.</DL>
</DD>
</DL>
<HR>

<A NAME="getPlotType()"><!-- --></A><H3>
getPlotType</H3>
<PRE>
public java.lang.String <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.1186"><B>getPlotType</B></A>()</PRE>
<DL>
<DD>Returns a short string describing the type of plot.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html#getPlotType()">getPlotType</A></CODE> in class <CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>A string describing the type of plot.</DL>
</DD>
</DL>
<HR>

<A NAME="zoom(double)"><!-- --></A><H3>
zoom</H3>
<PRE>
public void <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.1197"><B>zoom</B></A>(double&nbsp;percent)</PRE>
<DL>
<DD>A zoom method that does nothing.  Plots are required to support the
 zoom operation.  In the case of a meter plot, it doesn't make sense to
 zoom in or out, so the method is empty.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html#zoom(double)">zoom</A></CODE> in class <CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>percent</CODE> - The zoom percentage.</DL>
</DD>
</DL>
<HR>

<A NAME="equals(java.lang.Object)"><!-- --></A><H3>
equals</H3>
<PRE>
public boolean <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.1209"><B>equals</B></A>(java.lang.Object&nbsp;obj)</PRE>
<DL>
<DD>Tests the plot for equality with an arbitrary object.  Note that the
 dataset is ignored for the purposes of testing equality.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html#equals(java.lang.Object)">equals</A></CODE> in class <CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>obj</CODE> - the object (<code>null</code> permitted).
<DT><B>Returns:</B><DD>A boolean.</DL>
</DD>
</DL>
<HR>

<A NAME="clone()"><!-- --></A><H3>
clone</H3>
<PRE>
public java.lang.Object <A HREF="../../../../src-html/org/jfree/chart/plot/MeterPlot.html#line.1326"><B>clone</B></A>()
                       throws java.lang.CloneNotSupportedException</PRE>
<DL>
<DD>Returns an independent copy (clone) of the plot.  The dataset is NOT
 cloned - both the original and the clone will have a reference to the
 same dataset.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>clone</CODE> in interface <CODE>org.jfree.util.PublicCloneable</CODE><DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html#clone()">clone</A></CODE> in class <CODE><A HREF="../../../../org/jfree/chart/plot/Plot.html" title="class in org.jfree.chart.plot">Plot</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>A clone.
<DT><B>Throws:</B>
<DD><CODE>java.lang.CloneNotSupportedException</CODE> - if some component of the plot cannot
         be cloned.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/MeterPlot.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<h1>Footer<br>And More</h1></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/jfree/chart/plot/MeterInterval.html" title="class in org.jfree.chart.plot"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/jfree/chart/plot/MultiplePiePlot.html" title="class in org.jfree.chart.plot"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/jfree/chart/plot/MeterPlot.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="MeterPlot.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>
<i>Copyright &#169; 2000-2009 by Object Refinery Limited. All Rights Reserved.</i>
</BODY>
</HTML>
