<HTML>
<BODY BGCOLOR="white">
<PRE>
<FONT color="green">001</FONT>    /* ========================================================================<a name="line.1"></a>
<FONT color="green">002</FONT>     * JCommon : a free general purpose class library for the Java(tm) platform<a name="line.2"></a>
<FONT color="green">003</FONT>     * ========================================================================<a name="line.3"></a>
<FONT color="green">004</FONT>     *<a name="line.4"></a>
<FONT color="green">005</FONT>     * (C) Copyright 2000-2005, by Object Refinery Limited and Contributors.<a name="line.5"></a>
<FONT color="green">006</FONT>     * <a name="line.6"></a>
<FONT color="green">007</FONT>     * Project Info:  http://www.jfree.org/jcommon/index.html<a name="line.7"></a>
<FONT color="green">008</FONT>     *<a name="line.8"></a>
<FONT color="green">009</FONT>     * This library is free software; you can redistribute it and/or modify it <a name="line.9"></a>
<FONT color="green">010</FONT>     * under the terms of the GNU Lesser General Public License as published by <a name="line.10"></a>
<FONT color="green">011</FONT>     * the Free Software Foundation; either version 2.1 of the License, or <a name="line.11"></a>
<FONT color="green">012</FONT>     * (at your option) any later version.<a name="line.12"></a>
<FONT color="green">013</FONT>     *<a name="line.13"></a>
<FONT color="green">014</FONT>     * This library is distributed in the hope that it will be useful, but <a name="line.14"></a>
<FONT color="green">015</FONT>     * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY <a name="line.15"></a>
<FONT color="green">016</FONT>     * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public <a name="line.16"></a>
<FONT color="green">017</FONT>     * License for more details.<a name="line.17"></a>
<FONT color="green">018</FONT>     *<a name="line.18"></a>
<FONT color="green">019</FONT>     * You should have received a copy of the GNU Lesser General Public<a name="line.19"></a>
<FONT color="green">020</FONT>     * License along with this library; if not, write to the Free Software<a name="line.20"></a>
<FONT color="green">021</FONT>     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, <a name="line.21"></a>
<FONT color="green">022</FONT>     * USA.  <a name="line.22"></a>
<FONT color="green">023</FONT>     *<a name="line.23"></a>
<FONT color="green">024</FONT>     * [Java is a trademark or registered trademark of Sun Microsystems, Inc. <a name="line.24"></a>
<FONT color="green">025</FONT>     * in the United States and other countries.]<a name="line.25"></a>
<FONT color="green">026</FONT>     * <a name="line.26"></a>
<FONT color="green">027</FONT>     * ---------------<a name="line.27"></a>
<FONT color="green">028</FONT>     * ObjectList.java<a name="line.28"></a>
<FONT color="green">029</FONT>     * ---------------<a name="line.29"></a>
<FONT color="green">030</FONT>     * (C)opyright 2003, 2004, by Object Refinery Limited and Contributors.<a name="line.30"></a>
<FONT color="green">031</FONT>     *<a name="line.31"></a>
<FONT color="green">032</FONT>     * Original Author:  David Gilbert (for Object Refinery Limited);<a name="line.32"></a>
<FONT color="green">033</FONT>     * Contributor(s):   -;<a name="line.33"></a>
<FONT color="green">034</FONT>     *<a name="line.34"></a>
<FONT color="green">035</FONT>     * $Id: ObjectList.java,v 1.6 2005/11/14 10:56:42 mungady Exp $<a name="line.35"></a>
<FONT color="green">036</FONT>     *<a name="line.36"></a>
<FONT color="green">037</FONT>     * Changes<a name="line.37"></a>
<FONT color="green">038</FONT>     * -------<a name="line.38"></a>
<FONT color="green">039</FONT>     * 17-Jul-2003 : Version 1 (DG);<a name="line.39"></a>
<FONT color="green">040</FONT>     * 13-Aug-2003 : Refactored to extend AbstractObjectList (DG);<a name="line.40"></a>
<FONT color="green">041</FONT>     * 21-Oct-2004 : removed duplicate interface declarations and empty methods.<a name="line.41"></a>
<FONT color="green">042</FONT>     * 22-Oct-2004 : Restored removed methods - see note in code (DG);<a name="line.42"></a>
<FONT color="green">043</FONT>     * <a name="line.43"></a>
<FONT color="green">044</FONT>     */<a name="line.44"></a>
<FONT color="green">045</FONT>     <a name="line.45"></a>
<FONT color="green">046</FONT>    package org.jfree.util;<a name="line.46"></a>
<FONT color="green">047</FONT>    <a name="line.47"></a>
<FONT color="green">048</FONT>    <a name="line.48"></a>
<FONT color="green">049</FONT>    /**<a name="line.49"></a>
<FONT color="green">050</FONT>     * A list of objects that can grow as required.<a name="line.50"></a>
<FONT color="green">051</FONT>     * &lt;p&gt;<a name="line.51"></a>
<FONT color="green">052</FONT>     * When cloning, the objects in the list are NOT cloned, only the references. <a name="line.52"></a>
<FONT color="green">053</FONT>     *<a name="line.53"></a>
<FONT color="green">054</FONT>     * @author Thomas Morgner<a name="line.54"></a>
<FONT color="green">055</FONT>     */<a name="line.55"></a>
<FONT color="green">056</FONT>    public class ObjectList extends AbstractObjectList {<a name="line.56"></a>
<FONT color="green">057</FONT>        <a name="line.57"></a>
<FONT color="green">058</FONT>        /**<a name="line.58"></a>
<FONT color="green">059</FONT>         * Default constructor.<a name="line.59"></a>
<FONT color="green">060</FONT>         */<a name="line.60"></a>
<FONT color="green">061</FONT>        public ObjectList() {<a name="line.61"></a>
<FONT color="green">062</FONT>        }<a name="line.62"></a>
<FONT color="green">063</FONT>        <a name="line.63"></a>
<FONT color="green">064</FONT>        /**<a name="line.64"></a>
<FONT color="green">065</FONT>         * Creates a new list.<a name="line.65"></a>
<FONT color="green">066</FONT>         * <a name="line.66"></a>
<FONT color="green">067</FONT>         * @param initialCapacity  the initial capacity.<a name="line.67"></a>
<FONT color="green">068</FONT>         */<a name="line.68"></a>
<FONT color="green">069</FONT>        public ObjectList(final int initialCapacity) {<a name="line.69"></a>
<FONT color="green">070</FONT>            super(initialCapacity);<a name="line.70"></a>
<FONT color="green">071</FONT>        }<a name="line.71"></a>
<FONT color="green">072</FONT>        <a name="line.72"></a>
<FONT color="green">073</FONT>        // NOTE:  the methods below look redundant, but their purpose is to provide public<a name="line.73"></a>
<FONT color="green">074</FONT>        // access to the the get(), set() and indexOf() methods defined in the <a name="line.74"></a>
<FONT color="green">075</FONT>        // AbstractObjectList class, for this class only.  For other classes <a name="line.75"></a>
<FONT color="green">076</FONT>        // (e.g. PaintList, ShapeList etc) we don't want the Object versions of these <a name="line.76"></a>
<FONT color="green">077</FONT>        // methods to be visible in the public API.<a name="line.77"></a>
<FONT color="green">078</FONT>        <a name="line.78"></a>
<FONT color="green">079</FONT>        /**          <a name="line.79"></a>
<FONT color="green">080</FONT>         * Returns the object at the specified index, if there is one, or &lt;code&gt;null&lt;/code&gt;.         <a name="line.80"></a>
<FONT color="green">081</FONT>         *   <a name="line.81"></a>
<FONT color="green">082</FONT>         * @param index  the object index.   <a name="line.82"></a>
<FONT color="green">083</FONT>         *   <a name="line.83"></a>
<FONT color="green">084</FONT>         * @return The object or &lt;code&gt;null&lt;/code&gt;.          <a name="line.84"></a>
<FONT color="green">085</FONT>         */          <a name="line.85"></a>
<FONT color="green">086</FONT>        public Object get(final int index) {         <a name="line.86"></a>
<FONT color="green">087</FONT>            return super.get(index);         <a name="line.87"></a>
<FONT color="green">088</FONT>        }    <a name="line.88"></a>
<FONT color="green">089</FONT>             <a name="line.89"></a>
<FONT color="green">090</FONT>        /**          <a name="line.90"></a>
<FONT color="green">091</FONT>         * Sets an object reference (overwriting any existing object).       <a name="line.91"></a>
<FONT color="green">092</FONT>         *   <a name="line.92"></a>
<FONT color="green">093</FONT>         * @param index  the object index.   <a name="line.93"></a>
<FONT color="green">094</FONT>         * @param object  the object (&lt;code&gt;null&lt;/code&gt; permitted).          <a name="line.94"></a>
<FONT color="green">095</FONT>         */          <a name="line.95"></a>
<FONT color="green">096</FONT>        public void set(final int index, final Object object) {      <a name="line.96"></a>
<FONT color="green">097</FONT>            super.set(index, object);        <a name="line.97"></a>
<FONT color="green">098</FONT>        }    <a name="line.98"></a>
<FONT color="green">099</FONT>             <a name="line.99"></a>
<FONT color="green">100</FONT>        /**          <a name="line.100"></a>
<FONT color="green">101</FONT>         * Returns the index of the specified object, or -1 if the object is not in the list.        <a name="line.101"></a>
<FONT color="green">102</FONT>         *   <a name="line.102"></a>
<FONT color="green">103</FONT>         * @param object  the object.        <a name="line.103"></a>
<FONT color="green">104</FONT>         *   <a name="line.104"></a>
<FONT color="green">105</FONT>         * @return The index or -1.          <a name="line.105"></a>
<FONT color="green">106</FONT>         */          <a name="line.106"></a>
<FONT color="green">107</FONT>        public int indexOf(final Object object) {    <a name="line.107"></a>
<FONT color="green">108</FONT>            return super.indexOf(object);    <a name="line.108"></a>
<FONT color="green">109</FONT>        }    <a name="line.109"></a>
<FONT color="green">110</FONT>             <a name="line.110"></a>
<FONT color="green">111</FONT>    }<a name="line.111"></a>




























































</PRE>
</BODY>
</HTML>
