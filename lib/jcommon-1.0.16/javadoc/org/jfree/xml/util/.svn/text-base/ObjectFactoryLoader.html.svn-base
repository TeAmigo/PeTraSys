<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_16) on Thu Nov 05 12:24:34 PST 2009 -->
<TITLE>
ObjectFactoryLoader (JCommon Class Library (version 1.0.16))
</TITLE>

<META NAME="date" CONTENT="2009-11-05">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="ObjectFactoryLoader (JCommon Class Library (version 1.0.16))";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/jfree/xml/util/ObjectFactory.html" title="interface in org.jfree.xml.util"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/jfree/xml/util/PropertyDefinition.html" title="class in org.jfree.xml.util"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/jfree/xml/util/ObjectFactoryLoader.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="ObjectFactoryLoader.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.jfree.xml.util</FONT>
<BR>
Class ObjectFactoryLoader</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html" title="class in org.jfree.xml.util">org.jfree.xml.util.AbstractModelReader</A>
      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>org.jfree.xml.util.ObjectFactoryLoader</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../org/jfree/xml/util/ObjectFactory.html" title="interface in org.jfree.xml.util">ObjectFactory</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <A HREF="../../../../src-html/org/jfree/xml/util/ObjectFactoryLoader.html#line.63"><B>ObjectFactoryLoader</B></A><DT>extends <A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html" title="class in org.jfree.xml.util">AbstractModelReader</A><DT>implements <A HREF="../../../../org/jfree/xml/util/ObjectFactory.html" title="interface in org.jfree.xml.util">ObjectFactory</A></DL>
</PRE>

<P>
The object factory loader loads the xml specification for the generic
 handlers. The specification may be distributed over multiple files.
 <p>
 This class provides the model management for the reader and writer.
 The instantiation of the handlers is done elsewhere.
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>TM</DD>
</DL>
<HR>

<P>

<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/jfree/xml/util/ObjectFactoryLoader.html#ObjectFactoryLoader(java.net.URL)">ObjectFactoryLoader</A></B>(java.net.URL&nbsp;resourceName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new object factory loader for the given base file.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/xml/util/ObjectFactoryLoader.html#endMultiplexMapping()">endMultiplexMapping</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Finializes the multiplexer mapping.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/xml/util/ObjectFactoryLoader.html#endObjectDefinition()">endObjectDefinition</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Finializes the object definition.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/jfree/xml/util/GenericObjectFactory.html" title="class in org.jfree.xml.util">GenericObjectFactory</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/xml/util/ObjectFactoryLoader.html#getFactoryForClass(java.lang.Class)">getFactoryForClass</A></B>(java.lang.Class&nbsp;c)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a factory instance for the given class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/jfree/xml/util/ManualMappingDefinition.html" title="class in org.jfree.xml.util">ManualMappingDefinition</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/xml/util/ObjectFactoryLoader.html#getManualMappingDefinition(java.lang.Class)">getManualMappingDefinition</A></B>(java.lang.Class&nbsp;c)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the manual mapping definition for the given class, or null, if
 not manual definition exists.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/jfree/xml/util/MultiplexMappingDefinition.html" title="class in org.jfree.xml.util">MultiplexMappingDefinition</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/xml/util/ObjectFactoryLoader.html#getMultiplexDefinition(java.lang.Class)">getMultiplexDefinition</A></B>(java.lang.Class&nbsp;c)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the multiplex definition for the given class, or null, if no
 such definition exists.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/xml/util/ObjectFactoryLoader.html#handleAttributeDefinition(java.lang.String, java.lang.String, java.lang.String)">handleAttributeDefinition</A></B>(java.lang.String&nbsp;name,
                                                   java.lang.String&nbsp;attribName,
                                                   java.lang.String&nbsp;handlerClass)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Handles an attribute definition.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/xml/util/ObjectFactoryLoader.html#handleConstructorDefinition(java.lang.String, java.lang.String)">handleConstructorDefinition</A></B>(java.lang.String&nbsp;propertyName,
                                                       java.lang.String&nbsp;parameterClass)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Handles a constructor definition.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/xml/util/ObjectFactoryLoader.html#handleElementDefinition(java.lang.String, java.lang.String)">handleElementDefinition</A></B>(java.lang.String&nbsp;name,
                                               java.lang.String&nbsp;element)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Handles an element definition.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/xml/util/ObjectFactoryLoader.html#handleLookupDefinition(java.lang.String, java.lang.String)">handleLookupDefinition</A></B>(java.lang.String&nbsp;name,
                                             java.lang.String&nbsp;lookupKey)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Handles an lookup definition.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/xml/util/ObjectFactoryLoader.html#handleManualMapping(java.lang.String, java.lang.String, java.lang.String)">handleManualMapping</A></B>(java.lang.String&nbsp;className,
                                       java.lang.String&nbsp;readHandler,
                                       java.lang.String&nbsp;writeHandler)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Handles a manual mapping definition.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/xml/util/ObjectFactoryLoader.html#handleMultiplexMapping(java.lang.String, java.lang.String)">handleMultiplexMapping</A></B>(java.lang.String&nbsp;typeName,
                                             java.lang.String&nbsp;className)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines an entry for the multiplex mapping.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/xml/util/ObjectFactoryLoader.html#isGenericHandler(java.lang.Class)">isGenericHandler</A></B>(java.lang.Class&nbsp;c)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checks, whether the factory has a description for the given class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/xml/util/ObjectFactoryLoader.html#startMultiplexMapping(java.lang.String, java.lang.String)">startMultiplexMapping</A></B>(java.lang.String&nbsp;className,
                                           java.lang.String&nbsp;typeAttr)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Starts a multiplex mapping.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/jfree/xml/util/ObjectFactoryLoader.html#startObjectDefinition(java.lang.String, java.lang.String, boolean)">startObjectDefinition</A></B>(java.lang.String&nbsp;className,
                                           java.lang.String&nbsp;register,
                                           boolean&nbsp;ignore)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Starts a object definition.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.jfree.xml.util.AbstractModelReader"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.jfree.xml.util.<A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html" title="class in org.jfree.xml.util">AbstractModelReader</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#endIncludeHandling()">endIncludeHandling</A>, <A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#endRootDocument()">endRootDocument</A>, <A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#getCloseComment()">getCloseComment</A>, <A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#getCommentHandler()">getCommentHandler</A>, <A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#getOpenComment()">getOpenComment</A>, <A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#handleIgnoredProperty(java.lang.String)">handleIgnoredProperty</A>, <A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#loadClass(java.lang.String)">loadClass</A>, <A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#parseXml(java.net.URL)">parseXml</A>, <A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#parseXmlDocument(java.net.URL, boolean)">parseXmlDocument</A>, <A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#setCloseComment(java.lang.String[])">setCloseComment</A>, <A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#setOpenComment(java.lang.String[])">setOpenComment</A>, <A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#startIncludeHandling(java.net.URL)">startIncludeHandling</A>, <A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#startRootDocument()">startRootDocument</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="ObjectFactoryLoader(java.net.URL)"><!-- --></A><H3>
ObjectFactoryLoader</H3>
<PRE>
public <A HREF="../../../../src-html/org/jfree/xml/util/ObjectFactoryLoader.html#line.111"><B>ObjectFactoryLoader</B></A>(java.net.URL&nbsp;resourceName)
                    throws <A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></PRE>
<DL>
<DD>Creates a new object factory loader for the given base file.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>resourceName</CODE> - the URL of the initial specification file.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></CODE> - if the file could not be parsed.</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="startObjectDefinition(java.lang.String, java.lang.String, boolean)"><!-- --></A><H3>
startObjectDefinition</H3>
<PRE>
protected boolean <A HREF="../../../../src-html/org/jfree/xml/util/ObjectFactoryLoader.html#line.198"><B>startObjectDefinition</B></A>(java.lang.String&nbsp;className,
                                        java.lang.String&nbsp;register,
                                        boolean&nbsp;ignore)
                                 throws <A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></PRE>
<DL>
<DD>Starts a object definition. The object definition collects all properties of
 an bean-class and defines, which constructor should be used when creating the
 class.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#startObjectDefinition(java.lang.String, java.lang.String, boolean)">startObjectDefinition</A></CODE> in class <CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html" title="class in org.jfree.xml.util">AbstractModelReader</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>className</CODE> - the class name of the defined object<DD><CODE>register</CODE> - the (optional) register name, to lookup and reference the object later.<DD><CODE>ignore</CODE> - ignore?
<DT><B>Returns:</B><DD>true, if the definition was accepted, false otherwise.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></CODE> - if an unexpected error occured.</DL>
</DD>
</DL>
<HR>

<A NAME="handleAttributeDefinition(java.lang.String, java.lang.String, java.lang.String)"><!-- --></A><H3>
handleAttributeDefinition</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/xml/util/ObjectFactoryLoader.html#line.227"><B>handleAttributeDefinition</B></A>(java.lang.String&nbsp;name,
                                         java.lang.String&nbsp;attribName,
                                         java.lang.String&nbsp;handlerClass)
                                  throws <A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></PRE>
<DL>
<DD>Handles an attribute definition. This method gets called after the object definition
 was started. The method will be called for every defined attribute property.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#handleAttributeDefinition(java.lang.String, java.lang.String, java.lang.String)">handleAttributeDefinition</A></CODE> in class <CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html" title="class in org.jfree.xml.util">AbstractModelReader</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - the name of the property<DD><CODE>attribName</CODE> - the xml-attribute name to use later.<DD><CODE>handlerClass</CODE> - the attribute handler class.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></CODE> - if an error occured.</DL>
</DD>
</DL>
<HR>

<A NAME="handleElementDefinition(java.lang.String, java.lang.String)"><!-- --></A><H3>
handleElementDefinition</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/xml/util/ObjectFactoryLoader.html#line.243"><B>handleElementDefinition</B></A>(java.lang.String&nbsp;name,
                                       java.lang.String&nbsp;element)
                                throws <A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></PRE>
<DL>
<DD>Handles an element definition. This method gets called after the object definition
 was started. The method will be called for every defined element property. Element
 properties are used to describe complex objects.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#handleElementDefinition(java.lang.String, java.lang.String)">handleElementDefinition</A></CODE> in class <CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html" title="class in org.jfree.xml.util">AbstractModelReader</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - the name of the property<DD><CODE>element</CODE> - the xml-tag name for the child element.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></CODE> - if an error occurs.</DL>
</DD>
</DL>
<HR>

<A NAME="handleLookupDefinition(java.lang.String, java.lang.String)"><!-- --></A><H3>
handleLookupDefinition</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/xml/util/ObjectFactoryLoader.html#line.258"><B>handleLookupDefinition</B></A>(java.lang.String&nbsp;name,
                                      java.lang.String&nbsp;lookupKey)
                               throws <A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></PRE>
<DL>
<DD>Handles an lookup definition. This method gets called after the object definition
 was started. The method will be called for every defined lookup property. Lookup properties
 reference previously created object using the object's registry name.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#handleLookupDefinition(java.lang.String, java.lang.String)">handleLookupDefinition</A></CODE> in class <CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html" title="class in org.jfree.xml.util">AbstractModelReader</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - the property name of the base object<DD><CODE>lookupKey</CODE> - the register key of the referenced object
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></CODE> - if an error occured.</DL>
</DD>
</DL>
<HR>

<A NAME="endObjectDefinition()"><!-- --></A><H3>
endObjectDefinition</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/xml/util/ObjectFactoryLoader.html#line.270"><B>endObjectDefinition</B></A>()
                            throws <A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></PRE>
<DL>
<DD>Finializes the object definition.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#endObjectDefinition()">endObjectDefinition</A></CODE> in class <CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html" title="class in org.jfree.xml.util">AbstractModelReader</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></CODE> - if an error occures.</DL>
</DD>
</DL>
<HR>

<A NAME="handleConstructorDefinition(java.lang.String, java.lang.String)"><!-- --></A><H3>
handleConstructorDefinition</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/xml/util/ObjectFactoryLoader.html#line.297"><B>handleConstructorDefinition</B></A>(java.lang.String&nbsp;propertyName,
                                           java.lang.String&nbsp;parameterClass)</PRE>
<DL>
<DD>Handles a constructor definition. Only one constructor can be defined for
 a certain object type. The constructor will be filled using the given properties.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#handleConstructorDefinition(java.lang.String, java.lang.String)">handleConstructorDefinition</A></CODE> in class <CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html" title="class in org.jfree.xml.util">AbstractModelReader</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>propertyName</CODE> - the property name of the referenced local property<DD><CODE>parameterClass</CODE> - the parameter class for the parameter.</DL>
</DD>
</DL>
<HR>

<A NAME="handleManualMapping(java.lang.String, java.lang.String, java.lang.String)"><!-- --></A><H3>
handleManualMapping</H3>
<PRE>
protected boolean <A HREF="../../../../src-html/org/jfree/xml/util/ObjectFactoryLoader.html#line.314"><B>handleManualMapping</B></A>(java.lang.String&nbsp;className,
                                      java.lang.String&nbsp;readHandler,
                                      java.lang.String&nbsp;writeHandler)
                               throws <A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></PRE>
<DL>
<DD>Handles a manual mapping definition. The manual mapping maps specific
 read and write handlers to a given base class. Manual mappings always
 override any other definition.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#handleManualMapping(java.lang.String, java.lang.String, java.lang.String)">handleManualMapping</A></CODE> in class <CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html" title="class in org.jfree.xml.util">AbstractModelReader</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>className</CODE> - the base class name<DD><CODE>readHandler</CODE> - the class name of the read handler<DD><CODE>writeHandler</CODE> - the class name of the write handler
<DT><B>Returns:</B><DD>true, if the mapping was accepted, false otherwise.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></CODE> - if an unexpected error occured.</DL>
</DD>
</DL>
<HR>

<A NAME="startMultiplexMapping(java.lang.String, java.lang.String)"><!-- --></A><H3>
startMultiplexMapping</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/xml/util/ObjectFactoryLoader.html#line.335"><B>startMultiplexMapping</B></A>(java.lang.String&nbsp;className,
                                     java.lang.String&nbsp;typeAttr)</PRE>
<DL>
<DD>Starts a multiplex mapping. Multiplex mappings are used to define polymorphic
 argument handlers. The mapper will collect all derived classes of the given
 base class and will select the corresponding mapping based on the given type
 attribute.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#startMultiplexMapping(java.lang.String, java.lang.String)">startMultiplexMapping</A></CODE> in class <CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html" title="class in org.jfree.xml.util">AbstractModelReader</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>className</CODE> - the base class name<DD><CODE>typeAttr</CODE> - the xml-attribute name containing the mapping key</DL>
</DD>
</DL>
<HR>

<A NAME="handleMultiplexMapping(java.lang.String, java.lang.String)"><!-- --></A><H3>
handleMultiplexMapping</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/xml/util/ObjectFactoryLoader.html#line.350"><B>handleMultiplexMapping</B></A>(java.lang.String&nbsp;typeName,
                                      java.lang.String&nbsp;className)
                               throws <A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></PRE>
<DL>
<DD>Defines an entry for the multiplex mapping. The new entry will be activated
 when the base mappers type attribute contains this <code>typename</code> and
 will resolve to the handler for the given classname.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#handleMultiplexMapping(java.lang.String, java.lang.String)">handleMultiplexMapping</A></CODE> in class <CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html" title="class in org.jfree.xml.util">AbstractModelReader</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>typeName</CODE> - the type value for this mapping.<DD><CODE>className</CODE> - the class name to which this mapping resolves.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></CODE> - if an error occurs.</DL>
</DD>
</DL>
<HR>

<A NAME="endMultiplexMapping()"><!-- --></A><H3>
endMultiplexMapping</H3>
<PRE>
protected void <A HREF="../../../../src-html/org/jfree/xml/util/ObjectFactoryLoader.html#line.361"><B>endMultiplexMapping</B></A>()
                            throws <A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></PRE>
<DL>
<DD>Finializes the multiplexer mapping.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html#endMultiplexMapping()">endMultiplexMapping</A></CODE> in class <CODE><A HREF="../../../../org/jfree/xml/util/AbstractModelReader.html" title="class in org.jfree.xml.util">AbstractModelReader</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/jfree/xml/util/ObjectDescriptionException.html" title="class in org.jfree.xml.util">ObjectDescriptionException</A></CODE> - if an error occurs.</DL>
</DD>
</DL>
<HR>

<A NAME="isGenericHandler(java.lang.Class)"><!-- --></A><H3>
isGenericHandler</H3>
<PRE>
public boolean <A HREF="../../../../src-html/org/jfree/xml/util/ObjectFactoryLoader.html#line.397"><B>isGenericHandler</B></A>(java.lang.Class&nbsp;c)</PRE>
<DL>
<DD>Checks, whether the factory has a description for the given class.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/xml/util/ObjectFactory.html#isGenericHandler(java.lang.Class)">isGenericHandler</A></CODE> in interface <CODE><A HREF="../../../../org/jfree/xml/util/ObjectFactory.html" title="interface in org.jfree.xml.util">ObjectFactory</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>c</CODE> - the class to be handled by the factory.
<DT><B>Returns:</B><DD>true, if an description exists for the given class, false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getFactoryForClass(java.lang.Class)"><!-- --></A><H3>
getFactoryForClass</H3>
<PRE>
public <A HREF="../../../../org/jfree/xml/util/GenericObjectFactory.html" title="class in org.jfree.xml.util">GenericObjectFactory</A> <A HREF="../../../../src-html/org/jfree/xml/util/ObjectFactoryLoader.html#line.408"><B>getFactoryForClass</B></A>(java.lang.Class&nbsp;c)</PRE>
<DL>
<DD>Returns a factory instance for the given class. The factory is independent
 from all previously generated instances.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/xml/util/ObjectFactory.html#getFactoryForClass(java.lang.Class)">getFactoryForClass</A></CODE> in interface <CODE><A HREF="../../../../org/jfree/xml/util/ObjectFactory.html" title="interface in org.jfree.xml.util">ObjectFactory</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>c</CODE> - the class
<DT><B>Returns:</B><DD>the object factory.</DL>
</DD>
</DL>
<HR>

<A NAME="getManualMappingDefinition(java.lang.Class)"><!-- --></A><H3>
getManualMappingDefinition</H3>
<PRE>
public <A HREF="../../../../org/jfree/xml/util/ManualMappingDefinition.html" title="class in org.jfree.xml.util">ManualMappingDefinition</A> <A HREF="../../../../src-html/org/jfree/xml/util/ObjectFactoryLoader.html#line.423"><B>getManualMappingDefinition</B></A>(java.lang.Class&nbsp;c)</PRE>
<DL>
<DD>Returns the manual mapping definition for the given class, or null, if
 not manual definition exists.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/xml/util/ObjectFactory.html#getManualMappingDefinition(java.lang.Class)">getManualMappingDefinition</A></CODE> in interface <CODE><A HREF="../../../../org/jfree/xml/util/ObjectFactory.html" title="interface in org.jfree.xml.util">ObjectFactory</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>c</CODE> - the class for which to check the existence of the definition
<DT><B>Returns:</B><DD>the manual mapping definition or null.</DL>
</DD>
</DL>
<HR>

<A NAME="getMultiplexDefinition(java.lang.Class)"><!-- --></A><H3>
getMultiplexDefinition</H3>
<PRE>
public <A HREF="../../../../org/jfree/xml/util/MultiplexMappingDefinition.html" title="class in org.jfree.xml.util">MultiplexMappingDefinition</A> <A HREF="../../../../src-html/org/jfree/xml/util/ObjectFactoryLoader.html#line.434"><B>getMultiplexDefinition</B></A>(java.lang.Class&nbsp;c)</PRE>
<DL>
<DD>Returns the multiplex definition for the given class, or null, if no
 such definition exists.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/jfree/xml/util/ObjectFactory.html#getMultiplexDefinition(java.lang.Class)">getMultiplexDefinition</A></CODE> in interface <CODE><A HREF="../../../../org/jfree/xml/util/ObjectFactory.html" title="interface in org.jfree.xml.util">ObjectFactory</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>c</CODE> - the class for which to check the existence of the multiplexer
<DT><B>Returns:</B><DD>the multiplexer for the class, or null if no multiplexer exists.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/jfree/xml/util/ObjectFactory.html" title="interface in org.jfree.xml.util"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/jfree/xml/util/PropertyDefinition.html" title="class in org.jfree.xml.util"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/jfree/xml/util/ObjectFactoryLoader.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="ObjectFactoryLoader.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
