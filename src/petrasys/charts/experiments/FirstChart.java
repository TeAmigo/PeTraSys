/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FirstChart.java
 *
 * Created on Mar 25, 2010, 10:58:09 AM
 */
package petrasys.charts.experiments;

import java.awt.Color;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Rectangle;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JFrame;
import javax.swing.JScrollBar;
import javax.swing.UIManager;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYDifferenceRenderer;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.Minute;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.xy.XYDataset;
import petrasys.charts.ADXChartPanel;
import petrasys.utils.DBops;

/**
 *
 * @author rickcharon
 */
public class FirstChart extends javax.swing.JFrame {

  ADXChartPanel chartPanel;
  JScrollBar scroller;

  public FirstChart() {
    JFreeChart chart = createChart(createDataset());
    chartPanel = new ADXChartPanel(chart);
    chartPanel.setMouseWheelEnabled(true);
    //chartPanel.requestFocus();

    initComponents();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane(chartPanel);
    jScrollBar1 = new javax.swing.JScrollBar();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("First Chart");
    setFont(new java.awt.Font("AlArabiya", 0, 14));

    jScrollPane1.setBackground(new java.awt.Color(213, 155, 97));
    jScrollPane1.setFont(new java.awt.Font("DejaVu Sans", 0, 14));
    getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

    jScrollBar1.setFont(new java.awt.Font("DejaVu Sans", 0, 14));
    jScrollBar1.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
    getContentPane().add(jScrollBar1, java.awt.BorderLayout.SOUTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private static XYDataset createDataset() {
    TimeSeries series1 = new TimeSeries("Random 1");
    TimeSeries series2 = new TimeSeries("Random 2");
    double value1 = 0.0;
    double value2 = 0.0;
    Day day = new Day();
    for (int i = 0; i < 200; i++) {
      value1 = value1 + Math.random() - 0.5;
      value2 = value2 + Math.random() - 0.5;
      series1.add(day, value1);
      series2.add(day, value2);
      day = (Day) day.next();
    }

    TimeSeriesCollection dataset = new TimeSeriesCollection();
    dataset.addSeries(series1);
    dataset.addSeries(series2);
    return dataset;
  }

  private static XYDataset createDataset2() {
    JDBCXYDataset data = null;
    try {
      Connection con = DBops.setuptradesConnection();
      data = new JDBCXYDataset(con);
      String sql = "SELECT `datetime`, `high`, `low` FROM `quotes1min` WHERE "
              + "`symbol`='GBP' and `datetime`>= '2010-03-15 05:00:00'";
      data.executeQuery(sql);
      con.close();
    } catch (SQLException e) {
      System.err.print("SQLException: ");
      System.err.println(e.getMessage());
    } catch (Exception e) {
      System.err.print("Exception: ");
      System.err.println(e.getMessage());
    }
    return data;
  }


  private static XYDataset createDataset1() {
    TimeSeries series1 = new TimeSeries("Random 1");
    TimeSeries series2 = new TimeSeries("Random 2");
    double value1 = 0.0;
    double value2 = 0.0;
    Minute minute = new Minute();
    for (int i = 0; i < 200; i++) {
      value1 = value1 + Math.random() - 0.5;
      value2 = value2 + Math.random() - 0.5;
      series1.add(minute, value1);
      series2.add(minute, value2);
      minute = (Minute) minute.next();
    }

    TimeSeriesCollection dataset = new TimeSeriesCollection();
    dataset.addSeries(series1);
    dataset.addSeries(series2);
    return dataset;
  }

  private JFreeChart createChart(XYDataset dataset) {
    JFreeChart chart = ChartFactory.createTimeSeriesChart(
            null,
            "Time", "Price",
            dataset,
            true, // legend
            true, // tool tips
            false // URLs
            );

    XYPlot plot = (XYPlot) chart.getPlot();
    plot.setDomainPannable(true);
    
    XYDifferenceRenderer r = new XYDifferenceRenderer(Color.green,
            Color.red, false);
    r.setRoundXCoordinates(true);

    r.setBaseShape(new Rectangle(20, 20));
    r.setShapesVisible(true);
    plot.setDomainCrosshairLockedOnData(true);
    plot.setRangeCrosshairLockedOnData(true);
    plot.setDomainCrosshairVisible(true);
    plot.setRangeCrosshairVisible(true);
    Font f = new Font("dialog", Font.PLAIN, 18);

    UIManager.put("ToolTip.font", f);

    r.setBaseToolTipGenerator(new StandardXYToolTipGenerator(
                "{0} : {1} = {2}", new SimpleDateFormat("MM/dd/yyyy hh:mm:ss"),
                new DecimalFormat("0.00")));
    plot.setRenderer(r);

    //rpc - left off HERE:3/26/10 5:42 PM -
    //ValueAxis domainAxis = new DateAxis("Time");
    DateAxis domainAxis = (DateAxis) plot.getDomainAxis();

    int ic = dataset.getItemCount(0);
    Calendar bt = new GregorianCalendar();
    Date beginDate = domainAxis.getMinimumDate();
    Date endDate = domainAxis.getMaximumDate();
    bt.setTime(beginDate);
    bt.add(Calendar.MINUTE, 10);
    domainAxis.setMaximumDate(bt.getTime());
    endDate = domainAxis.getMaximumDate();
    domainAxis.setRange(beginDate, bt.getTime());
    domainAxis.setLowerMargin(0.0);
    domainAxis.setUpperMargin(0.0);
    plot.setDomainAxis(domainAxis);
    plot.setForegroundAlpha(0.5f);
    ChartUtilities.applyCurrentTheme(chart);
    return chart;
  }

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {

    java.awt.EventQueue.invokeLater(new Runnable() {

      public void run() {
        JFrame ff = new FirstChart();
        ff.setExtendedState(Frame.MAXIMIZED_BOTH);
        ff.setVisible(true);
      }
    });
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JScrollBar jScrollBar1;
  private javax.swing.JScrollPane jScrollPane1;
  // End of variables declaration//GEN-END:variables
}
